var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddMembersPage.html",[0,0.276,1,1.177]],["body/components/AddMembersPage.html",[0,0.295,1,1.439,2,1.153,3,0.042,4,0.042,5,0.737,6,0.737,7,0.737,8,0.737,9,0.037,10,5.606,11,4.937,12,1.951,13,1.155,14,0.026,15,2.754,16,2.04,17,1.89,18,3.908,19,1.691,20,1.526,21,1.536,22,0.737,23,2.732,24,2.596,25,1.188,26,4.495,27,1.188,28,3.58,29,0.47,30,0.87,31,1.223,32,6.502,33,2.132,34,4.495,35,4.495,36,4.495,37,3.946,38,1.028,39,1.853,40,4.524,41,3.58,42,4.524,43,3.58,44,4.524,45,3.143,46,1.633,47,2.223,48,2.729,49,2.467,50,4.877,51,2.145,52,1.824,53,0.011,54,2.223,55,3.58,56,3.143,57,1.768,58,3.58,59,2.223,60,1.835,61,3.143,62,1.523,63,1.448,64,1.263,65,1.482,66,1.448,67,2.011,68,3.02,69,2.223,70,3.143,71,3.372,72,2.192,73,3.143,74,3.143,75,3.58,76,2.223,77,3.58,78,2.467,79,2.223,80,2.855,81,4.109,82,5.3,83,2.223,84,2.223,85,3.143,86,3.143,87,1.871,88,2.223,89,3.799,90,3.58,91,2.223,92,2.223,93,2.223,94,2.761,95,2.223,96,1.951,97,2.223,98,3.946,99,0.19,100,1.639,101,0.092,102,3.098,103,3.946,104,0.47,105,1.583,106,1.951,107,1.054,108,1.737,109,1.054,110,1.3,111,2.215,112,1.3,113,0.042,114,0.946,115,0.948,116,2.124,117,1.532,118,2.223,119,1.14,120,2.223,121,4.814,122,2.223,123,1.532,124,3.143,125,2.223,126,2.223,127,2.223,128,2.223,129,5.154,130,2.223,131,2.223,132,2.274,133,2.223,134,2.223,135,2.223,136,2.223,137,1.951,138,1.639,139,1.951,140,1.951,141,1.951,142,3.143,143,3.58,144,2.223,145,2.223,146,1.951,147,2.223,148,0.946,149,2.223,150,3.58,151,2.223,152,3.58,153,3.58,154,2.223,155,3.098,156,2.223,157,1.016,158,3.58,159,2.223,160,4.495,161,2.223,162,2.223,163,2.223,164,0.42,165,3.58,166,1.526,167,1.951,168,2.223,169,2.223,170,1.095,171,3.143,172,2.223,173,2.223,174,1.772,175,1.3,176,2.223,177,1.951,178,2.223,179,1.772,180,2.223,181,2.918,182,1.951,183,1.639,184,2.223,185,2.223,186,2.223,187,2.223,188,2.223,189,0.948,190,2.639,191,3.58,192,2.094,193,3.143,194,0.737,195,1.188,196,1.153,197,0.737,198,1.66,199,0.737,200,0.737,201,0.657,202,0.737,203,0.639,204,0.657,205,1.188,206,0.639,207,1.188,208,0.639,209,0.737,210,0.639,211,1.188,212,0.639,213,1.188,214,0.639,215,0.737,216,0.657,217,0.737,218,0.639,219,0.737,220,0.639,221,0.737,222,0.639,223,0.737,224,0.639,225,0.737,226,0.639,227,0.639,228,0.737,229,0.639,230,0.639,231,0.737,232,0.639,233,0.737,234,0.639,235,0.639,236,0.737,237,0.639,238,0.737,239,0.639,240,1.03,241,0.639,242,0.639,243,0.737,244,0.639,245,0.737,246,0.639,247,0.696,248,0.737,249,0.737,250,0.003,251,0.004,252,0.003]],["title/modules/AddMembersPageModule.html",[253,0.669,254,3.107]],["body/modules/AddMembersPageModule.html",[1,2.335,3,0.11,4,0.11,9,0.094,10,4.241,11,3.734,14,0.034,16,1.922,18,3.212,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,250,0.007,251,0.009,252,0.007,254,6.306,255,0.833,256,2.091,257,5.05,258,5.05,259,5.05,260,5.762,261,2.215,262,1.8,263,1.652,264,5.753,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,274,4.586]],["title/modules/AddMembersPageRoutingModule.html",[253,0.669,260,2.904]],["body/modules/AddMembersPageRoutingModule.html",[0,0.407,1,2.07,3,0.118,4,0.118,9,0.102,10,4.576,11,4.03,14,0.036,16,1.686,18,3.467,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,250,0.008,251,0.009,252,0.008,255,0.899,260,5.108,266,0.985,267,1.176,274,4.95,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943]],["title/components/AppComponent.html",[0,0.276,201,1.245]],["body/components/AppComponent.html",[0,0.461,1,1.333,2,2.024,3,0.091,4,0.091,5,1.583,6,1.583,7,1.583,8,1.583,9,0.078,14,0.028,16,1.296,19,1.485,22,1.583,23,2.949,24,2.782,25,2.084,27,2.084,46,1.037,53,0.011,62,1.41,64,1.405,67,1.371,99,0.143,101,0.197,113,0.091,194,1.583,195,2.084,196,2.024,197,1.583,198,2.405,199,1.583,200,1.583,201,2.206,202,1.583,203,1.371,204,1.41,205,2.084,206,1.371,207,2.084,208,1.371,209,1.583,210,1.371,211,2.084,212,1.371,213,2.084,214,1.371,215,1.583,216,1.41,217,1.583,218,1.371,219,1.583,220,1.371,221,1.583,222,1.371,223,1.583,224,1.371,225,1.583,226,1.371,227,1.371,228,1.583,229,1.371,230,1.371,231,1.583,232,1.371,233,1.583,234,1.371,235,1.371,236,1.583,237,1.371,238,1.583,239,1.371,240,1.492,241,1.371,242,1.371,243,1.583,244,1.371,245,1.583,246,1.371,247,1.493,248,1.583,249,1.583,250,0.006,251,0.008,252,0.006,282,4.189,283,3.508,284,7.025,285,6.283,286,2.994,287,4.772]],["title/modules/AppModule.html",[253,0.669,288,3.107]],["body/modules/AppModule.html",[3,0.103,4,0.103,9,0.089,14,0.032,24,1.69,53,0.011,99,0.257,101,0.223,104,1.142,113,0.103,201,2.567,250,0.007,251,0.008,252,0.007,255,0.782,256,2.011,261,2.129,262,1.69,263,1.552,265,2.192,266,1.08,267,1.08,272,1.74,273,1.74,278,0.909,288,6.287,289,4.741,290,4.741,291,4.741,292,4.741,293,5.673,294,5.401,295,6.805,296,6.805,297,2.769,298,2.562,299,6.805,300,6.805,301,5.401,302,5.401,303,4.741,304,6.805,305,3.722,306,6.805,307,2.226,308,4.306,309,5.401,310,5.401,311,5.401,312,5.401,313,5.401,314,5.401,315,5.401]],["title/classes/AppPage.html",[14,0.025,316,3.36]],["body/classes/AppPage.html",[3,0.119,4,0.119,9,0.102,14,0.037,29,1.316,38,2.132,46,1.614,52,2.132,53,0.011,99,0.186,113,0.119,157,3.393,196,2.004,250,0.008,251,0.009,252,0.008,283,3.474,298,2.951,316,5.918,317,3.325,318,5.462,319,8.214,320,8.214,321,6.223,322,6.223,323,6.223,324,6.223,325,6.223,326,3.826,327,6.223]],["title/modules/AppRoutingModule.html",[253,0.669,293,2.904]],["body/modules/AppRoutingModule.html",[3,0.067,4,0.067,9,0.058,11,2.289,14,0.021,16,0.958,18,1.969,19,1.266,53,0.011,62,1.042,67,1.013,71,1.969,99,0.152,101,0.145,113,0.067,164,0.666,204,1.506,230,1.464,240,1.311,247,1.103,250,0.004,251,0.006,252,0.004,255,0.511,266,0.559,267,0.809,275,1.136,276,1.769,277,1.642,278,0.593,279,2.801,281,1.103,293,3.513,328,3.526,329,5.098,330,2.811,331,8.678,332,3.526,333,8.639,334,3.526,335,3.526,336,4.126,337,3.526,338,3.526,339,2.724,340,5.987,341,2.43,342,5.098,343,3.526,344,2.599,345,2.43,346,3.526,347,3.526,348,2.846,349,2.43,350,5.098,351,3.526,352,2.613,353,3.526,354,3.526,355,2.289,356,3.526,357,3.526,358,3.526,359,3.526,360,2.289,361,3.526,362,3.526,363,6.559,364,2.289,365,3.526,366,2.168,367,2.43,368,3.526,369,3.526,370,2.43,371,3.526,372,2.289,373,2.43,374,3.526,375,3.526,376,3.069,377,3.526,378,3.526,379,3.526,380,3.526,381,2.599,382,3.526,383,3.526,384,3.526,385,2.43,386,3.526,387,3.526,388,3.513,389,5.098,390,5.098,391,5.098,392,5.098,393,5.098,394,3.513,395,5.098,396,5.098,397,3.526,398,3.526,399,3.526,400,1.969,401,3.526,402,2.43,403,3.526,404,3.526,405,2.599,406,3.526,407,2.43,408,3.526,409,3.526,410,3.526,411,3.526,412,2.811,413,3.526,414,3.526,415,3.526,416,3.526]],["title/injectables/ArwardService.html",[417,1.859,418,2.904]],["body/injectables/ArwardService.html",[3,0.099,4,0.099,9,0.085,13,1.701,14,0.043,29,1.095,30,1.609,38,1.903,46,1.44,48,2.48,52,2.212,53,0.011,63,1.668,64,1.157,65,1.44,66,1.668,99,0.218,101,0.213,113,0.099,114,1.367,115,2.207,148,1.749,155,4.565,157,3.029,164,0.978,250,0.006,251,0.008,252,0.006,283,2.891,305,3.568,417,2.923,418,4.565,419,3.028,420,4.544,421,3.521,422,5.281,423,5.281,424,5.281,425,3.875,426,5.824,427,5.281,428,5.281,429,2.221,430,5.177,431,5.281,432,7.701,433,3.471,434,5.281,435,5.385,436,5.177,437,4.883,438,3.361,439,4.128,440,3.184,441,4.883,442,4.128,443,5.177,444,4.128,445,4.128,446,4.544,447,4.544]],["title/injectables/AuthService.html",[108,1.628,417,1.859]],["body/injectables/AuthService.html",[3,0.058,4,0.058,9,0.05,13,1.57,14,0.018,29,0.644,30,1.112,31,1.564,33,2.608,38,1.315,39,2.267,46,1.496,51,2.197,52,2.232,53,0.011,57,1.721,61,2.676,63,1.771,64,1.229,65,1.195,66,1.771,72,1.106,78,2.101,87,1.106,99,0.196,101,0.126,104,0.644,105,2.152,108,1.769,113,0.058,114,0.805,115,1.299,116,1.256,119,2.819,148,2.021,157,3.264,166,1.952,175,1.783,204,1.353,250,0.006,251,0.006,252,0.004,263,1.315,278,0.513,283,1.702,307,1.256,336,3.155,352,2.347,376,4.239,388,3.155,417,2.02,419,1.783,425,2.678,429,2.483,440,1.874,448,2.676,449,2.678,450,4.579,451,4.579,452,4.232,453,6.113,454,4.579,455,3.048,456,5.855,457,4.488,458,3.048,459,4.019,460,3.048,461,6.113,462,4.743,463,4.767,464,5.167,465,6.041,466,4.213,467,3.048,468,4.579,469,5.691,470,3.048,471,4.019,472,4.874,473,3.048,474,1.952,475,2.219,476,2.247,477,6.113,478,4.019,479,3.048,480,3.048,481,3.048,482,3.048,483,4.579,484,3.048,485,2.676,486,3.048,487,6.552,488,7.344,489,4.579,490,4.579,491,3.65,492,3.65,493,3.048,494,3.048,495,3.65,496,2.43,497,3.375,498,3.048,499,2.247,500,2.972,501,2.43,502,2.676,503,3.048,504,4.579,505,4.019,506,3.65,507,4.579,508,4.019,509,4.579,510,4.579,511,4.579,512,3.048,513,4.579,514,2.101,515,3.048,516,2.676,517,3.048,518,3.048,519,3.048,520,4.579,521,4.579,522,3.048,523,3.048,524,3.048,525,3.048]],["title/classes/Award.html",[14,0.025,438,2.736]],["body/classes/Award.html",[3,0.105,4,0.105,9,0.091,13,2.085,14,0.033,29,1.17,30,1.678,46,1.765,53,0.011,63,1.782,64,1.851,65,1.765,66,2.759,113,0.105,116,3.592,250,0.007,251,0.008,252,0.007,286,2.945,317,2.956,429,2.685,433,3.363,438,4.484,526,4.856,527,7.127,528,3.812,529,5.532,530,4.615,531,5.532,532,5.532,533,5.532,534,5.532]],["title/injectables/BadgeService.html",[417,1.859,535,2.904]],["body/injectables/BadgeService.html",[3,0.086,4,0.086,9,0.074,13,1.56,14,0.04,16,1.65,29,0.959,31,1.549,38,1.745,46,0.986,48,2.274,49,4.186,51,2.093,52,1.303,53,0.011,57,1.419,60,3.114,63,1.461,64,1.014,65,0.986,66,1.461,99,0.228,101,0.187,105,2.576,107,2.151,113,0.086,114,1.198,115,1.933,148,1.932,240,1.462,250,0.006,251,0.007,252,0.006,283,2.532,417,2.68,419,2.653,421,3.725,422,4.843,423,6.496,424,4.843,425,3.553,440,2.789,449,3.553,476,3.343,535,4.186,536,3.981,537,6.074,538,6.074,539,6.074,540,4.767,541,4.535,542,7.316,543,6.422,544,4.843,545,6.074,546,6.074,547,5.332,548,6.074,549,6.074,550,6.074,551,2.944,552,4.535,553,2.789,554,3.981,555,4.535,556,6.074,557,3.511,558,2.789,559,4.535,560,4.535,561,4.535,562,5.332,563,4.535,564,4.535,565,4.535,566,4.535,567,4.535,568,6.074,569,2.944,570,4.535,571,4.535,572,4.535,573,4.535,574,4.535,575,4.535,576,4.535]],["title/components/ChangePasswordPage.html",[0,0.276,203,1.211]],["body/components/ChangePasswordPage.html",[0,0.421,1,1.117,2,1.796,3,0.076,4,0.076,5,1.327,6,1.327,7,1.327,8,1.327,9,0.066,13,1.027,14,0.038,15,2.979,16,1.086,17,2.172,19,1.357,20,2.376,21,2.192,22,1.327,23,2.91,24,2.745,25,1.849,27,1.849,29,0.846,30,1.354,46,0.87,53,0.011,62,1.182,64,1.246,65,0.87,67,1.149,99,0.192,101,0.165,104,0.846,108,2.479,109,1.897,113,0.076,114,1.472,116,1.649,189,1.705,194,1.327,195,1.849,196,1.796,197,1.327,198,2.236,199,1.327,200,1.327,201,1.182,202,1.327,203,1.994,204,2.338,205,1.849,206,1.149,207,1.849,208,1.149,209,1.327,210,1.149,211,1.849,212,1.149,213,1.849,214,1.149,215,1.327,216,1.182,217,1.327,218,1.149,219,1.327,220,1.149,221,1.327,222,1.149,223,1.327,224,1.149,225,1.327,226,1.149,227,1.149,228,1.327,229,1.149,230,1.149,231,1.327,232,1.149,233,1.327,234,1.149,235,1.149,236,1.327,237,1.149,238,1.327,239,1.149,240,1.387,241,1.149,242,1.149,243,1.327,244,1.149,245,1.327,246,1.149,247,1.251,248,1.327,249,1.327,250,0.005,251,0.007,252,0.005,326,3.428,376,3.875,394,3.841,429,1.695,457,4.075,500,3.619,577,4.109,578,3.511,579,5.574,580,5.632,581,4.893,582,3.999,583,3.112,584,2.596,585,2.34,586,4.893,587,6.941,588,4.893,589,2.459,590,1.971,591,2.756,592,2.459,593,2.948,594,2.756,595,3.189,596,3.511,597,3.511,598,2.459,599,3.999,600,2.948,601,3.428,602,2.756,603,2.948,604,2.948,605,2.459,606,2.459,607,2.459,608,2.948,609,2.459,610,2.756,611,2.459]],["title/modules/ChangePasswordPageModule.html",[253,0.669,612,3.107]],["body/modules/ChangePasswordPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,203,2.402,204,2.091,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,376,2.949,394,3.964,577,4.241,612,6.306,613,5.05,614,5.05,615,5.05,616,5.762,617,5.753,618,4.241]],["title/modules/ChangePasswordPageRoutingModule.html",[253,0.669,616,2.904]],["body/modules/ChangePasswordPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,203,2.129,204,1.835,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,376,3.183,394,4.278,577,4.576,616,5.108,618,4.576]],["title/components/FriendProfilePage.html",[0,0.276,206,1.211]],["body/components/FriendProfilePage.html",[0,0.293,1,0.614,2,1.144,3,0.042,4,0.042,5,0.73,6,0.73,7,0.73,8,0.73,9,0.036,13,1.832,14,0.026,15,2.738,16,0.597,17,1.603,19,0.944,21,0.752,22,0.73,23,2.729,24,2.574,25,1.178,27,1.178,29,0.465,30,0.863,31,2.321,33,2.117,38,1.471,39,2.477,46,1.43,48,1.329,51,1.897,52,1.471,53,0.011,57,1.111,62,0.65,63,1.144,64,1.471,65,1.114,66,1.144,67,2.004,71,1.982,72,1.62,87,1.62,94,1.623,99,0.221,101,0.091,104,0.465,105,1.803,108,1.979,109,1.043,111,1.749,113,0.042,114,0.581,116,1.463,119,1.82,123,1.516,148,1.979,164,0.843,166,2.184,181,2.305,194,0.73,195,1.178,196,1.144,197,0.73,198,1.65,199,0.73,200,0.73,201,0.65,202,0.73,203,0.632,204,0.65,205,1.178,206,1.471,207,1.178,208,0.632,209,0.73,210,0.632,211,1.178,212,0.632,213,1.178,214,0.632,215,0.73,216,0.65,217,0.73,218,0.632,219,0.73,220,0.632,221,0.73,222,0.632,223,0.73,224,0.632,225,0.73,226,0.632,227,0.632,228,0.73,229,0.632,230,1.282,231,0.73,232,0.632,233,0.73,234,0.632,235,0.632,236,0.73,237,0.632,238,0.73,239,0.632,240,1.024,241,0.632,242,0.632,243,0.73,244,0.632,245,0.73,246,0.632,247,0.688,248,0.73,249,0.73,250,0.004,251,0.004,252,0.003,278,0.37,286,0.938,297,1.128,298,1.043,307,0.907,352,2.626,385,4.682,418,2.447,421,1.623,429,1.827,438,2.898,439,1.754,474,1.513,475,1.859,535,3.53,540,1.287,543,3.116,544,2.831,558,1.353,583,1.982,585,1.287,589,1.353,590,1.749,592,1.353,593,4.85,594,1.516,598,2.183,601,1.353,605,1.353,606,2.183,607,3.15,609,3.456,610,1.516,611,2.183,619,5.008,620,1.931,621,2.524,622,3.918,623,3.116,624,3.918,625,4.464,626,4.084,627,5.55,628,2.524,629,3.116,630,2.2,631,2.617,632,3.116,633,2.2,634,3.776,635,2.997,636,4.046,637,4.47,638,3.776,639,4.497,640,5.775,641,4.084,642,3.116,643,3.116,644,4.934,645,3.918,646,4.29,647,2.2,648,2.305,649,2.077,650,3.15,651,2.183,652,3.15,653,1.982,654,2.183,655,1.82,656,3.55,657,3.55,658,2.43,659,3.55,660,2.183,661,2.183,662,1.897,663,1.749,664,2.183,665,2.183,666,3.116,667,4.934,668,2.2,669,3.116,670,2.2,671,2.2,672,2.2,673,2.2,674,1.897,675,1.931,676,3.53,677,1.931,678,1.353,679,1.043,680,1.982,681,1.754,682,1.931,683,2.831,684,1.982,685,1.982,686,3.116,687,1.623,688,1.128,689,1.084,690,1.287,691,2.2,692,2.2,693,2.2,694,1.428,695,2.2,696,1.931,697,2.2,698,1.931,699,2.2,700,3.55,701,2.2,702,1.931,703,3.116,704,3.116,705,3.116,706,2.2,707,2.2,708,2.2,709,1.931,710,1.754,711,1.931,712,1.128,713,2.2,714,2.183,715,2.305,716,3.116,717,2.305,718,3.116,719,2.305,720,2.183,721,2.305,722,2.831,723,2.831,724,1.754,725,2.831,726,2.447,727,1.754,728,3.776,729,1.931,730,2.831,731,1.931,732,1.931,733,1.622,734,1.931,735,1.931,736,1.931,737,2.617,738,1.931,739,1.931,740,1.931]],["title/modules/FriendProfilePageModule.html",[253,0.669,741,3.107]],["body/modules/FriendProfilePageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,67,2.033,99,0.25,101,0.237,104,1.216,113,0.11,206,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,352,2.949,385,3.964,619,4.241,741,6.306,742,5.05,743,5.05,744,5.05,745,5.762,746,5.753,747,4.241]],["title/modules/FriendProfilePageRoutingModule.html",[253,0.669,745,2.904]],["body/modules/FriendProfilePageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,67,1.783,99,0.237,101,0.256,113,0.118,164,1.173,206,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,352,3.183,385,4.278,619,4.576,745,5.108,747,4.576]],["title/components/FriendsPage.html",[0,0.276,208,1.211]],["body/components/FriendsPage.html",[0,0.348,1,0.802,2,1.41,3,0.055,4,0.055,5,0.953,6,0.953,7,0.953,8,0.953,9,0.047,13,1.124,14,0.031,16,0.78,17,1.37,19,1.121,21,0.981,22,0.953,23,2.82,24,2.66,25,1.452,27,1.452,29,0.607,30,1.064,31,2.027,33,2.516,38,1.257,46,1.568,48,1.639,51,1.996,52,1.524,53,0.011,57,1.66,62,0.849,63,0.925,64,1.186,65,1.388,66,0.925,67,1.834,71,3.565,72,2.442,87,1.925,99,0.215,101,0.118,104,0.607,105,2.088,113,0.055,114,0.759,116,1.804,119,1.473,148,1.777,157,2.001,164,0.543,166,1.225,175,1.68,181,2.842,190,3.227,194,0.953,195,1.452,196,1.708,197,0.953,198,2.057,199,0.953,200,0.953,201,0.849,202,0.953,203,0.825,204,0.849,205,1.452,206,0.825,207,1.452,208,1.704,209,0.953,210,0.825,211,1.452,212,0.825,213,1.452,214,0.825,215,0.953,216,0.849,217,0.953,218,0.825,219,0.953,220,0.825,221,0.953,222,0.825,223,0.953,224,0.825,225,0.953,226,0.825,227,0.825,228,0.953,229,0.825,230,0.825,231,0.953,232,0.825,233,0.953,234,0.825,235,0.825,236,0.953,237,0.825,238,0.953,239,0.825,240,1.186,241,0.825,242,0.825,243,0.953,244,0.825,245,0.953,246,0.825,247,0.899,248,0.953,249,0.953,250,0.004,251,0.005,252,0.004,278,0.483,286,1.225,297,1.473,298,1.362,307,1.184,326,1.766,352,2.719,421,2.712,429,2.045,433,2.722,457,3.312,463,2.842,465,3.843,474,1.866,475,2.153,495,2.29,497,2.118,583,2.444,585,1.68,621,3.315,626,4.729,628,2.922,631,3.227,646,2.692,648,2.842,649,2.561,650,3.647,651,2.692,652,2.692,653,2.444,654,2.692,655,2.244,658,2.076,660,2.692,661,2.692,662,2.339,663,2.157,664,2.692,665,2.692,676,4.087,677,2.522,678,1.766,679,1.362,680,2.444,684,2.444,687,2.001,688,1.473,689,1.415,712,1.473,748,2.522,749,5.304,750,4.378,751,5.304,752,5.304,753,3.91,754,4.378,755,2.873,756,3.843,757,4.378,758,3.49,759,5.931,760,3.227,761,4.378,762,4.378,763,3.843,764,4.378,765,4.378,766,2.873,767,2.444,768,4.378,769,5.931,770,3.49,771,2.873,772,2.873,773,2.873,774,2.873,775,4.372,776,2.873,777,2.873,778,5.304,779,2.118,780,2.873,781,2.873,782,2.873,783,2.873,784,2.873,785,2.522,786,2.873,787,2.873,788,3.843,789,2.873,790,4.378,791,2.29,792,2.873,793,2.873,794,4.378,795,4.378]],["title/modules/FriendsPageModule.html",[253,0.669,796,3.107]],["body/modules/FriendsPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,71,3.239,99,0.25,101,0.239,104,1.227,113,0.111,208,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,796,6.316,797,5.092,798,5.092,799,5.092,800,5.774,801,5.801,802,5.092]],["title/modules/FriendsPageRoutingModule.html",[253,0.669,800,2.904]],["body/modules/FriendsPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,208,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,800,5.129,802,5.487,803,6.251]],["title/injectables/FriendsService.html",[417,1.859,676,2.904]],["body/injectables/FriendsService.html",[3,0.058,4,0.058,9,0.05,13,1.767,14,0.032,16,1.242,29,0.644,30,1.111,31,2.238,33,3.106,38,1.314,39,2.265,46,1.496,48,1.712,51,2.268,52,2.157,53,0.011,57,0.953,60,3.132,63,2.11,64,1.464,65,1.496,66,2.11,67,2.261,68,3.265,71,4.099,89,2.244,94,2.793,99,0.196,101,0.125,105,2.151,107,1.444,108,2.36,113,0.058,114,0.804,115,1.298,132,2.696,148,2.051,155,3.153,157,3.433,164,1.038,166,1.95,175,1.781,250,0.004,251,0.006,252,0.004,283,1.7,305,2.098,417,2.019,419,1.781,421,3.497,422,3.647,424,3.647,425,4.024,426,4.381,427,3.647,428,3.647,429,2.362,431,3.647,433,1.95,434,4.871,435,4.051,437,3.372,440,1.872,441,3.372,442,2.428,444,2.428,445,2.428,446,2.673,447,2.673,452,1.872,457,3.841,463,1.977,466,3.153,476,2.244,495,2.428,496,2.428,497,2.244,626,3.647,658,2.17,662,2.445,663,2.254,676,3.153,710,2.428,770,4.871,804,2.673,805,3.647,806,4.575,807,3.372,808,4.575,809,6.11,810,3.045,811,4.575,812,4.741,813,4.575,814,4.016,815,3.045,816,5.485,817,6.879,818,3.045,819,4.575,820,6.11,821,3.045,822,3.647,823,4.575,824,4.016,825,3.045,826,5.363,827,3.045,828,2.673,829,2.673,830,3.045,831,3.045,832,3.045,833,3.045,834,3.045,835,2.673,836,2.428,837,3.045,838,3.045,839,6.11,840,3.045,841,4.575,842,3.045,843,3.045,844,3.045,845,3.045,846,4.016,847,4.575,848,3.045,849,2.428,850,3.045,851,3.045,852,3.045,853,3.045,854,3.045,855,3.045,856,3.045,857,3.045,858,2.673,859,3.045,860,3.045,861,3.045,862,4.575,863,3.045,864,3.045,865,2.673,866,2.428]],["title/classes/Group.html",[14,0.025,19,0.891]],["body/classes/Group.html",[3,0.105,4,0.105,9,0.091,14,0.032,18,4.531,19,1.459,29,1.167,30,1.676,46,1.764,51,2.199,53,0.011,63,1.778,64,1.85,65,1.764,66,2.758,99,0.165,113,0.105,116,3.574,250,0.007,251,0.008,252,0.007,286,2.353,317,2.951,429,2.581,433,3.36,528,3.805,530,4.612,584,3.584,867,4.846,868,5.592,869,5.521,870,5.521,871,5.521,872,5.521,873,5.521,874,4.07]],["title/components/GroupCreatePage.html",[0,0.276,210,1.211]],["body/components/GroupCreatePage.html",[0,0.371,1,0.891,2,1.526,3,0.061,4,0.061,5,1.058,6,1.058,7,1.058,8,1.058,9,0.052,13,0.819,14,0.033,16,1.814,17,2.421,18,3.73,19,1.813,20,2.019,21,1.93,22,1.058,23,2.851,24,2.702,25,1.571,27,1.571,29,0.674,30,1.151,31,2.391,33,2.68,38,1.361,39,2.329,46,1.359,48,1.773,49,3.264,50,3.075,51,1.912,52,1.361,53,0.011,57,0.998,62,0.943,64,1.398,65,1.03,67,0.916,72,1.158,85,4.158,86,4.158,87,1.158,99,0.227,101,0.131,102,4.309,104,0.674,105,2.201,107,1.513,108,2.415,109,1.513,110,1.866,113,0.061,114,1.251,115,1.36,119,2.428,121,2.543,148,1.914,164,0.603,170,1.572,189,1.36,192,2.771,194,1.058,195,1.571,196,1.526,197,1.058,198,2.014,199,1.058,200,1.058,201,0.943,202,1.058,203,0.916,204,0.943,205,1.571,206,0.916,207,1.571,208,0.916,209,1.058,210,1.796,211,1.571,212,0.916,213,1.571,214,0.916,215,1.058,216,0.943,217,1.058,218,0.916,219,1.058,220,0.916,221,1.058,222,0.916,223,1.058,224,0.916,225,1.058,226,0.916,227,0.916,228,1.058,229,0.916,230,0.916,231,1.058,232,0.916,233,1.058,234,0.916,235,0.916,236,1.058,237,0.916,238,1.058,239,0.916,240,1.25,241,0.916,242,0.916,243,1.058,244,0.916,245,1.058,246,0.916,247,0.998,248,1.058,249,1.058,250,0.006,251,0.006,252,0.004,278,0.537,307,1.315,339,3.341,341,4.603,449,2.771,462,3.264,474,2.019,475,1.158,557,2.428,583,2.645,585,2.771,635,2.771,674,3.341,679,1.513,687,2.166,688,1.635,689,1.572,690,1.866,712,1.635,812,3.264,875,3.57,876,2.543,877,4.959,878,4.158,879,4.985,880,3.19,881,2.645,882,3.19,883,3.075,884,2.8,885,2.8,886,3.341,887,1.962,888,2.8,889,2.8,890,3.19,891,3.19,892,3.19,893,2.8,894,3.19,895,3.19,896,3.19,897,2.8,898,3.19,899,4.158,900,4.737,901,2.8,902,3.19,903,3.19,904,2.352,905,3.19,906,3.19,907,2.8,908,2.645,909,4.985,910,3.776]],["title/modules/GroupCreatePageModule.html",[253,0.669,911,3.107]],["body/modules/GroupCreatePageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,19,1.496,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,210,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,339,3.074,341,3.964,875,3.074,911,6.306,912,5.05,913,5.05,914,5.05,915,5.762,916,5.05,917,4.241]],["title/modules/GroupCreatePageRoutingModule.html",[253,0.669,915,2.904]],["body/modules/GroupCreatePageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,19,1.313,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,210,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,339,3.318,341,4.278,875,3.318,915,5.108,917,4.576]],["title/components/GroupDetailsPage.html",[0,0.276,212,1.211]],["body/components/GroupDetailsPage.html",[0,0.24,1,0.463,2,0.905,3,0.032,4,0.032,5,0.55,6,0.55,7,0.55,8,0.55,9,0.027,13,1.105,14,0.021,16,0.45,17,1.637,18,1.568,19,1.726,20,1.197,21,1.249,22,0.55,23,2.61,24,2.462,25,0.932,27,0.932,29,0.35,30,0.682,31,2.159,33,1.733,38,0.807,39,2.156,46,1.701,50,4.329,51,1.623,52,1.816,53,0.011,57,1.744,60,1.44,62,0.49,63,1.177,64,1.076,65,1.613,66,1.177,67,0.476,68,1.953,72,1.898,87,1.898,99,0.211,100,1.222,101,0.068,104,0.35,105,1.515,107,0.786,108,1.662,109,0.786,110,0.97,111,2.12,112,0.97,113,0.032,114,0.965,115,0.707,117,1.935,119,0.85,132,1.239,148,1.833,157,0.758,164,0.91,166,1.834,167,1.455,170,3.205,179,2.239,182,2.465,183,2.694,189,0.707,192,1.643,194,0.932,195,0.932,196,0.905,197,0.55,198,1.386,199,0.55,200,0.55,201,0.49,202,0.55,203,0.476,204,0.49,205,0.932,206,0.476,207,0.932,208,0.476,209,0.55,210,0.476,211,0.932,212,1.236,213,0.932,214,0.476,215,0.55,216,0.49,217,0.55,218,0.476,219,0.55,220,0.476,221,0.55,222,0.476,223,0.55,224,0.476,225,0.55,226,0.476,227,0.476,228,0.55,229,0.476,230,0.476,231,0.55,232,0.476,233,0.55,234,0.476,235,0.476,236,0.55,237,0.476,238,0.55,239,0.476,240,1.523,241,0.476,242,0.476,243,0.55,244,0.476,245,0.55,246,0.476,247,0.519,248,0.55,249,0.55,250,0.003,251,0.003,252,0.002,278,0.279,297,0.85,298,0.786,307,0.683,339,1.953,348,3.112,349,5.423,355,3.395,360,1.076,400,2.403,429,1.857,433,1.834,452,2.646,456,4.17,464,1.823,466,2.965,474,1.197,475,1.562,547,2.465,551,2.793,553,1.019,557,2.206,569,1.076,583,1.568,585,1.643,590,2.12,598,1.019,628,0.817,635,2.517,637,1.727,658,1.332,674,1.501,679,0.786,680,1.568,684,1.568,685,1.568,687,1.284,688,0.85,689,0.817,690,0.97,712,0.85,720,1.727,767,1.568,807,3.172,849,1.321,875,4.206,886,2.3,887,1.019,897,3.208,904,2.694,908,3.411,918,1.321,919,3.431,920,3.208,921,2.465,922,3.655,923,3.655,924,3.655,925,3.655,926,4.815,927,3.655,928,2.914,929,3.655,930,4.591,931,3.208,932,3.604,933,3.655,934,3.777,935,4.303,936,2.809,937,4.303,938,2.809,939,4.303,940,4.303,941,2.809,942,1.657,943,4.227,944,1.657,945,2.809,946,1.657,947,2.809,948,2.646,949,3.431,950,2.809,951,2.465,952,2.07,953,1.657,954,2.239,955,1.657,956,2.809,957,2.809,958,1.657,959,2.809,960,2.239,961,2.809,962,2.965,963,2.809,964,2.809,965,1.657,966,1.455,967,2.239,968,2.07,969,1.657,970,2.809,971,1.657,972,1.455,973,2.372,974,1.657,975,1.657,976,1.657,977,1.657,978,1.455,979,1.455,980,1.657,981,1.455,982,1.455,983,1.657,984,1.657,985,1.455,986,2.465,987,1.657,988,1.657,989,2.809,990,2.809,991,2.465,992,5.23,993,1.935,994,3.777,995,1.823,996,2.809,997,2.465,998,2.465,999,1.657,1000,1.657,1001,3.777,1002,1.657,1003,1.455,1004,1.455,1005,1.657,1006,1.657,1007,1.455,1008,2.809,1009,1.657,1010,2.694,1011,2.239,1012,1.455,1013,1.455,1014,1.455,1015,1.455,1016,1.455,1017,1.657,1018,1.657,1019,2.809,1020,2.809,1021,3.839,1022,2.809,1023,3.777,1024,2.809,1025,2.809,1026,2.809,1027,2.239,1028,2.809,1029,2.465,1030,2.465,1031,1.935,1032,2.465,1033,2.809,1034,1.657,1035,2.809,1036,3.431,1037,1.657,1038,1.657,1039,1.657,1040,4.815,1041,1.657,1042,1.657,1043,1.657,1044,1.657,1045,1.657,1046,1.657,1047,1.657,1048,2.239,1049,1.455,1050,1.455,1051,1.321,1052,1.657,1053,1.455,1054,1.657,1055,1.657,1056,1.657,1057,1.657,1058,1.657,1059,1.657,1060,1.657,1061,1.657,1062,1.657,1063,3.655,1064,1.657,1065,3.655,1066,1.657,1067,1.657,1068,2.239,1069,1.657,1070,2.809,1071,1.657,1072,1.455,1073,1.657,1074,1.657,1075,2.809,1076,1.657,1077,1.455,1078,1.455,1079,1.455,1080,1.321,1081,1.321,1082,1.455,1083,1.222,1084,1.455,1085,1.455,1086,1.455,1087,1.455,1088,1.455,1089,1.455,1090,2.465,1091,1.455,1092,1.455,1093,1.321,1094,1.657,1095,1.657,1096,1.657,1097,2.809,1098,1.657,1099,1.455,1100,1.455,1101,1.657,1102,1.657,1103,1.657,1104,1.657,1105,1.657,1106,2.07,1107,2.465,1108,1.935,1109,2.809,1110,2.809,1111,2.809,1112,2.809,1113,4.303,1114,3.431,1115,3.777,1116,4.321,1117,2.809]],["title/modules/GroupDetailsPageModule.html",[253,0.669,1118,3.107]],["body/modules/GroupDetailsPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,19,1.496,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,212,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,348,3.212,349,3.964,875,3.074,1118,6.306,1119,5.05,1120,5.05,1121,5.05,1122,5.762,1123,5.05,1124,4.241]],["title/modules/GroupDetailsPageRoutingModule.html",[253,0.669,1122,2.904]],["body/modules/GroupDetailsPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,19,1.313,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,212,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,348,3.467,349,4.278,875,3.318,1122,5.108,1124,4.576]],["title/components/GroupListPage.html",[0,0.276,214,1.211]],["body/components/GroupListPage.html",[0,0.334,1,0.75,2,1.34,3,0.051,4,0.051,5,0.891,6,0.891,7,0.891,8,0.891,9,0.044,13,1.068,14,0.03,16,0.73,17,1.301,19,1.778,20,1.773,21,1.738,22,0.891,23,2.799,24,2.64,25,1.379,27,1.379,29,0.568,30,1.01,31,2.238,32,6.615,33,2.413,37,4.466,38,1.195,40,5.027,42,5.027,44,5.027,45,3.65,46,1.663,50,3.718,51,1.682,52,1.882,53,0.011,56,3.65,57,2.05,62,1.503,63,1.34,64,1.28,65,1.485,66,1.34,67,0.772,70,3.65,72,2.248,80,3.316,81,3.316,82,5.75,87,1.846,94,2.618,96,2.358,98,4.466,99,0.221,100,1.981,101,0.111,104,0.568,105,2.016,107,1.274,108,2.212,109,1.274,110,1.572,113,0.051,114,1.512,115,1.145,119,1.377,123,1.852,132,1.186,137,2.358,138,1.981,139,2.358,140,2.358,141,2.358,142,4.466,146,2.358,148,1.73,164,0.508,189,1.145,194,0.891,195,1.379,196,1.34,197,0.891,198,1.845,199,0.891,200,0.891,201,0.794,202,0.891,203,0.772,204,0.794,205,1.379,206,0.772,207,1.379,208,0.772,209,0.891,210,0.772,211,1.379,212,0.772,213,1.379,214,1.645,215,0.891,216,0.794,217,0.891,218,0.772,219,0.891,220,0.772,221,0.891,222,0.772,223,0.891,224,0.772,225,0.891,226,0.772,227,0.772,228,0.891,229,0.772,230,0.772,231,0.891,232,0.772,233,0.891,234,0.772,235,0.772,236,0.891,237,0.772,238,0.891,239,0.772,240,1.145,241,0.772,242,0.772,243,0.891,244,0.772,245,0.891,246,0.772,247,0.841,248,0.891,249,0.891,250,0.005,251,0.005,252,0.003,278,0.452,307,1.108,339,2.719,344,3.065,345,5.341,348,1.5,433,1.145,474,1.773,475,2.079,621,2.049,628,1.324,679,1.274,687,1.901,688,1.377,689,1.324,690,1.572,712,1.377,767,3.198,875,4.142,886,3.061,887,1.652,919,3.316,1106,3.065,1125,2.358,1126,5.341,1127,5.087,1128,4.159,1129,5.087,1130,5.087,1131,5.027,1132,4.159,1133,2.687,1134,4.159,1135,2.687,1136,2.687,1137,2.687,1138,4.159,1139,2.687,1140,2.687,1141,2.687,1142,2.687,1143,2.687,1144,2.687,1145,5.087,1146,2.687,1147,2.687,1148,2.142,1149,4.159,1150,2.687,1151,2.687,1152,4.466,1153,2.687,1154,2.687,1155,2.687,1156,2.687,1157,2.687,1158,2.358,1159,2.687,1160,2.687,1161,2.687,1162,2.687,1163,3.65,1164,2.687,1165,2.687,1166,2.687,1167,2.687,1168,4.159,1169,3.65]],["title/modules/GroupListPageModule.html",[253,0.669,1170,3.107]],["body/modules/GroupListPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,19,1.496,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,214,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,344,4.241,345,3.964,875,3.074,1170,6.306,1171,5.05,1172,5.05,1173,5.05,1174,5.762,1175,5.753,1176,5.05]],["title/modules/GroupListPageRoutingModule.html",[253,0.669,1174,2.904]],["body/modules/GroupListPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,19,1.313,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,214,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,344,4.576,345,4.278,875,3.318,1174,5.108,1176,5.45]],["title/injectables/GroupService.html",[417,1.859,886,2.252]],["body/injectables/GroupService.html",[0,0.145,1,0.993,3,0.042,4,0.042,9,0.036,11,1.431,13,1.625,14,0.013,16,1.393,17,2.128,18,3.534,19,1.88,29,0.945,30,0.864,31,2.056,33,2.669,38,1.022,39,2.803,46,1.607,51,2.17,52,2.226,53,0.011,57,1.761,62,1.321,63,2.299,64,1.596,65,1.581,66,2.299,78,2.451,89,4.148,94,1.008,99,0.203,101,0.091,102,3.535,104,0.466,105,1.806,107,1.046,108,1.982,110,1.29,113,0.042,114,0.582,115,0.94,124,1.936,132,1.57,138,1.625,148,2.081,157,2.894,164,1.396,166,2.899,170,1.086,250,0.004,251,0.004,252,0.003,274,1.758,283,1.231,305,1.52,417,1.57,419,1.29,421,1.008,425,4.084,429,2.068,433,3.445,434,4.09,435,3.296,437,2.622,440,1.356,441,2.622,449,2.081,452,2.749,466,4.146,476,1.625,557,2.885,634,1.625,635,3.001,756,1.936,763,3.122,805,2.836,807,2.622,816,2.836,828,1.936,846,3.122,866,1.758,868,1.52,879,2.836,881,1.986,886,1.901,954,4.797,967,4.09,968,2.622,1106,1.625,1126,5.596,1131,3.122,1148,1.758,1158,1.936,1163,3.925,1177,1.936,1178,4.471,1179,3.557,1180,3.557,1181,3.557,1182,5.13,1183,3.557,1184,3.557,1185,3.557,1186,2.205,1187,3.557,1188,2.205,1189,3.557,1190,2.205,1191,3.557,1192,2.622,1193,3.122,1194,3.557,1195,2.205,1196,4.503,1197,3.122,1198,3.557,1199,2.205,1200,3.557,1201,2.205,1202,3.557,1203,2.205,1204,2.205,1205,5.627,1206,3.557,1207,2.205,1208,3.557,1209,2.205,1210,3.557,1211,2.205,1212,3.557,1213,2.205,1214,2.205,1215,2.205,1216,2.205,1217,2.205,1218,2.205,1219,2.205,1220,2.205,1221,2.205,1222,3.557,1223,2.205,1224,2.205,1225,2.205,1226,2.205,1227,2.205,1228,2.205,1229,2.205,1230,2.205,1231,2.205,1232,2.205,1233,3.557,1234,2.205,1235,2.205,1236,2.205,1237,4.471,1238,2.205,1239,2.205,1240,2.205,1241,2.205,1242,2.205,1243,2.205,1244,2.205,1245,2.205,1246,2.205,1247,1.936,1248,1.936,1249,1.936,1250,2.205,1251,4.471,1252,2.205,1253,2.205,1254,2.205,1255,3.296,1256,2.205,1257,2.205,1258,2.205,1259,2.205,1260,3.557,1261,2.205,1262,2.205,1263,2.205,1264,2.205,1265,2.205,1266,2.205,1267,3.557,1268,2.205,1269,2.205,1270,2.205,1271,2.205,1272,2.205,1273,2.205,1274,2.205,1275,2.205,1276,2.205,1277,2.205,1278,2.205,1279,2.205,1280,2.205,1281,2.205,1282,2.205,1283,2.205,1284,1.52,1285,1.936,1286,2.205,1287,2.205,1288,2.205,1289,2.205]],["title/modules/HomePageModule.html",[253,0.669,1290,3.107]],["body/modules/HomePageModule.html",[3,0.108,4,0.108,9,0.093,14,0.033,53,0.011,99,0.252,101,0.233,104,1.194,113,0.108,216,2.459,250,0.007,251,0.009,252,0.007,255,0.818,256,2.067,261,2.189,262,1.767,263,1.622,265,2.254,266,1.11,267,1.11,268,2.321,269,1.819,270,2.321,271,1.819,272,2.254,273,1.819,330,4.501,364,3.665,1290,6.377,1291,4.956,1292,4.956,1293,4.956,1294,5.736,1295,5.736,1296,5.646,1297,4.956,1298,5.646,1299,5.646]],["title/modules/HomePageRoutingModule.html",[253,0.669,1294,2.904]],["body/modules/HomePageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,216,2.199,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,1294,5.129,1297,5.487,1300,6.251]],["title/components/InvitePage.html",[0,0.276,218,1.211]],["body/components/InvitePage.html",[0,0.372,1,0.898,2,1.535,3,0.061,4,0.061,5,1.067,6,1.067,7,1.067,8,1.067,9,0.053,13,0.826,14,0.033,16,0.873,17,1.491,19,1.742,20,2.031,21,1.94,22,1.067,23,2.853,24,2.692,25,1.581,27,1.581,29,0.68,30,1.158,31,1.628,33,2.693,38,1.369,39,2.34,46,1.526,49,3.284,51,1.916,52,1.369,53,0.011,57,1.006,62,0.95,64,1.065,65,1.234,67,0.924,72,2.06,73,4.183,87,2.06,94,2.179,99,0.223,101,0.132,102,4.326,104,0.68,105,2.21,107,1.525,110,1.881,113,0.061,114,1.499,115,1.371,116,1.964,117,2.216,119,1.649,121,2.564,123,2.216,132,1.419,148,1.77,157,1.47,164,1.186,166,2.031,175,1.881,189,1.371,194,1.067,195,1.581,196,1.535,197,1.067,198,2.022,199,1.067,200,1.067,201,0.95,202,1.067,203,0.924,204,0.95,205,1.581,206,0.924,207,1.581,208,0.924,209,1.067,210,0.924,211,1.581,212,0.924,213,1.581,214,0.924,215,1.067,216,0.95,217,1.067,218,1.803,219,1.067,220,0.924,221,1.067,222,0.924,223,1.067,224,0.924,225,1.067,226,0.924,227,0.924,228,1.067,229,0.924,230,0.924,231,1.067,232,0.924,233,1.067,234,0.924,235,0.924,236,1.067,237,0.924,238,1.067,239,0.924,240,1.255,241,0.924,242,0.924,243,1.067,244,0.924,245,1.067,246,0.924,247,1.006,248,1.067,249,1.067,250,0.006,251,0.006,252,0.004,278,0.541,307,1.326,412,5.597,429,0.978,456,3.799,464,4.351,474,2.031,475,2.278,496,2.564,679,1.525,687,2.179,688,1.649,689,1.585,690,1.881,712,1.649,714,1.978,849,2.564,858,2.823,886,3.355,887,1.978,908,3.505,1048,2.564,1106,3.513,1285,4.983,1301,2.823,1302,4.766,1303,6.278,1304,5.677,1305,4.766,1306,5.677,1307,6.278,1308,6.278,1309,3.216,1310,3.216,1311,3.216,1312,4.766,1313,3.216,1314,3.216,1315,3.216,1316,2.564,1317,3.216,1318,3.216,1319,3.216,1320,3.216,1321,3.216,1322,3.216,1323,3.216,1324,3.216,1325,3.216,1326,3.216,1327,3.216,1328,3.216,1329,3.216,1330,3.216,1331,3.216,1332,5.677,1333,3.216,1334,3.216,1335,3.216,1336,2.088,1337,3.216,1338,3.216,1339,4.766,1340,4.766]],["title/modules/InvitePageModule.html",[253,0.669,1341,3.107]],["body/modules/InvitePageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,218,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,412,4.625,1341,6.316,1342,5.092,1343,5.092,1344,5.092,1345,5.774,1346,5.801,1347,5.092]],["title/modules/InvitePageRoutingModule.html",[253,0.669,1345,2.904]],["body/modules/InvitePageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,218,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,1345,5.129,1347,5.487,1348,6.251]],["title/components/LoginPage.html",[0,0.276,220,1.211]],["body/components/LoginPage.html",[0,0.363,1,0.862,2,1.489,3,0.059,4,0.059,5,1.024,6,1.024,7,1.024,8,1.024,9,0.051,13,0.793,14,0.033,16,0.838,19,1.393,20,1.97,21,1.893,22,1.024,23,2.842,24,2.681,25,1.533,27,1.533,29,0.652,30,1.123,38,1.327,46,1.558,48,2.302,51,1.893,52,1.327,53,0.011,57,1.446,60,2.369,62,0.912,63,0.994,64,1.238,65,1.503,66,0.994,67,0.886,80,3.684,81,3.684,99,0.165,101,0.127,108,2.14,109,1.464,113,0.059,114,1.22,116,1.272,148,1.22,155,2.127,170,1.52,189,1.315,194,1.024,195,1.533,196,1.489,197,1.024,198,1.981,199,1.024,200,1.024,201,0.912,202,1.024,203,0.886,204,0.912,205,1.533,206,0.886,207,1.533,208,0.886,209,1.024,210,0.886,211,1.533,212,0.886,213,1.533,214,0.886,215,1.024,216,0.912,217,1.024,218,0.886,219,1.024,220,1.767,221,1.024,222,0.886,223,1.024,224,0.886,225,1.024,226,0.886,227,0.886,228,1.024,229,0.886,230,0.886,231,1.024,232,0.886,233,1.024,234,0.886,235,0.886,236,1.024,237,0.886,238,1.024,239,0.886,240,1.23,241,0.886,242,0.886,243,1.024,244,0.886,245,1.024,246,0.886,247,0.966,248,1.024,249,1.024,250,0.004,251,0.006,252,0.004,278,0.519,326,3.406,336,5.08,376,4.289,429,2.488,449,2.703,457,4.208,459,4.056,462,3.184,463,3.993,464,3,475,2.011,491,3.684,492,3.684,500,3.993,514,2.127,584,2.003,589,1.898,590,2.277,591,2.127,592,1.898,593,2.275,594,3.817,595,4.417,598,1.898,600,4.083,601,2.842,602,2.127,603,2.275,604,2.275,605,1.898,606,2.842,607,1.898,608,2.275,609,3.406,610,3.184,611,1.898,733,2.275,737,3.406,791,2.46,883,3.993,928,5.252,968,3.406,1036,2.46,1083,2.275,1093,2.46,1349,2.709,1350,5.54,1351,4.621,1352,5.54,1353,5.54,1354,6.151,1355,3.086,1356,4.621,1357,3.086,1358,4.056,1359,3.086,1360,3.086,1361,4.621,1362,3.086,1363,4.056,1364,4.621,1365,3.086,1366,3.086,1367,5.54,1368,5.54,1369,5.54,1370,5.54,1371,3.086,1372,3.086,1373,3.086,1374,2.709,1375,4.621,1376,4.621,1377,4.056,1378,4.621,1379,3.086,1380,3.086,1381,3.086,1382,3.086,1383,3.086,1384,3.086]],["title/modules/LoginPageModule.html",[253,0.669,1385,3.107]],["body/modules/LoginPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,220,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,336,3.998,1385,6.316,1386,5.092,1387,5.092,1388,5.092,1389,5.774,1390,5.801,1391,5.092]],["title/modules/LoginPageRoutingModule.html",[253,0.669,1389,2.904]],["body/modules/LoginPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,220,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,1389,5.129,1391,5.487,1392,6.251]],["title/components/MemberViewPage.html",[0,0.276,222,1.211]],["body/components/MemberViewPage.html",[0,0.364,1,0.866,2,1.494,3,0.059,4,0.059,5,1.028,6,1.028,7,1.028,8,1.028,9,0.051,13,1.191,14,0.033,16,0.842,17,1.451,18,3.101,19,1.649,20,1.976,21,1.898,22,1.028,23,2.843,24,2.682,25,1.538,27,1.538,29,0.655,30,1.126,31,2.578,33,2.634,38,1.332,46,1.435,49,3.195,50,4.496,51,1.896,52,1.332,53,0.011,57,1.451,62,2.181,63,0.999,64,1.242,65,1.34,66,0.999,67,0.89,99,0.233,101,0.128,104,0.655,105,2.17,107,1.47,108,2.381,109,1.47,110,1.813,111,3.037,112,1.813,113,0.059,114,1.467,115,1.321,117,2.136,119,1.589,148,2.06,164,0.876,189,1.321,190,3.418,194,1.028,195,1.538,196,1.494,197,1.028,198,1.986,199,1.028,200,1.028,201,0.916,202,1.028,203,0.89,204,0.916,205,1.538,206,0.89,207,1.538,208,0.89,209,1.028,210,0.89,211,1.538,212,0.89,213,1.538,214,0.89,215,1.028,216,0.916,217,1.028,218,0.89,219,1.028,220,0.89,221,1.028,222,1.771,223,1.028,224,0.89,225,1.028,226,0.89,227,0.89,228,1.028,229,0.89,230,0.89,231,1.028,232,0.89,233,1.028,234,0.89,235,0.89,236,1.028,237,0.89,238,1.028,239,0.89,240,1.232,241,0.89,242,0.89,243,1.028,244,0.89,245,1.028,246,0.89,247,0.97,248,1.028,249,1.028,250,0.006,251,0.006,252,0.004,278,0.522,297,1.589,298,1.47,307,1.278,352,1.589,400,2.589,402,4.773,429,2.007,433,3.146,474,1.976,475,2.237,557,2.377,583,2.589,585,2.712,621,2.284,628,1.527,674,2.478,679,1.47,680,1.731,684,1.731,685,2.589,687,2.12,688,1.589,689,1.527,690,1.813,712,1.589,767,3.442,785,2.721,812,3.195,879,5.521,886,3.294,887,1.906,888,2.721,889,2.721,893,2.721,899,2.721,901,2.721,907,2.721,908,1.731,910,4.915,919,3.697,1001,5.411,1007,2.721,1048,2.471,1049,2.721,1050,2.721,1051,2.471,1107,4.07,1336,2.012,1377,4.07,1393,5.105,1394,2.721,1395,5.554,1396,4.637,1397,4.637,1398,3.1,1399,4.637,1400,3.1,1401,3.1,1402,3.1,1403,3.1,1404,3.1,1405,3.1,1406,3.1,1407,3.1,1408,3.1,1409,3.1,1410,5.554]],["title/modules/MemberViewPageModule.html",[253,0.669,1411,3.107]],["body/modules/MemberViewPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,62,2.091,99,0.25,101,0.237,104,1.216,113,0.11,222,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,400,3.212,402,3.964,1393,4.241,1411,6.306,1412,5.05,1413,5.05,1414,5.05,1415,5.762,1416,5.753,1417,5.05]],["title/modules/MemberViewPageRoutingModule.html",[253,0.669,1415,2.904]],["body/modules/MemberViewPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,62,1.835,99,0.237,101,0.256,113,0.118,164,1.173,222,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,400,3.467,402,4.278,1393,4.576,1415,5.108,1417,5.45]],["title/components/OptionsPage.html",[0,0.276,224,1.211]],["body/components/OptionsPage.html",[0,0.278,1,0.57,2,1.075,3,0.039,4,0.039,5,0.676,6,0.676,7,0.676,8,0.676,9,0.033,13,1.089,14,0.025,15,1.784,16,0.554,17,1.533,19,0.896,21,0.697,22,0.676,23,2.699,24,2.567,25,1.107,27,1.107,29,0.431,30,0.811,31,1.674,38,0.959,39,2.933,46,1.48,48,2.752,51,2.049,52,1.836,53,0.011,57,1.533,60,2.974,62,0.603,63,0.657,64,0.947,65,0.921,66,0.657,67,0.586,72,1.778,87,1.212,99,0.183,101,0.084,105,1.725,113,0.039,114,0.539,116,0.841,132,0.9,148,1.532,164,0.925,166,2.611,192,2.479,194,0.676,195,1.107,196,1.075,197,0.676,198,1.973,199,0.676,200,0.676,201,0.603,202,0.676,203,0.586,204,0.603,205,1.107,206,0.586,207,1.107,208,0.586,209,0.676,210,0.586,211,1.107,212,0.586,213,1.107,214,0.586,215,0.676,216,0.603,217,0.676,218,0.586,219,0.676,220,0.586,221,0.676,222,0.586,223,0.676,224,1.407,225,0.676,226,0.586,227,0.586,228,0.676,229,0.586,230,1.759,231,0.676,232,0.586,233,0.676,234,0.586,235,0.586,236,0.676,237,0.586,238,0.676,239,0.586,240,0.979,241,0.586,242,0.586,243,0.676,244,0.586,245,0.676,246,0.586,247,0.638,248,0.676,249,0.676,250,0.002,251,0.004,252,0.002,278,0.343,286,0.869,297,1.046,298,0.967,307,0.841,352,2.511,360,2.167,376,1.711,381,4.277,421,2.24,429,1.289,474,1.423,475,1.778,485,4.3,500,2.167,527,1.79,530,3.394,558,1.254,569,1.324,590,3.018,601,3.323,602,1.405,603,1.503,605,2.053,606,1.254,607,3.012,609,2.053,611,2.053,621,3.623,628,2.413,636,3.568,637,4.732,646,2.053,648,2.167,649,1.953,650,3.012,651,2.053,652,2.053,653,1.864,654,2.053,655,1.711,658,3.032,660,2.053,661,3.012,662,1.784,663,3.623,664,2.053,665,2.053,674,1.784,678,1.254,679,0.967,680,1.864,684,1.864,685,1.864,687,1.526,689,1.005,694,2.751,709,1.79,714,2.606,715,2.751,717,2.751,719,2.751,720,2.606,721,2.751,724,1.626,725,2.662,726,1.405,727,1.626,728,1.503,730,1.626,733,3.124,758,4.626,767,3.24,779,1.503,791,1.626,881,3.24,883,4.619,949,2.662,952,4.277,962,4.691,1031,3.376,1284,3.998,1418,1.79,1419,2.461,1420,4.238,1421,3.339,1422,3.379,1423,3.611,1424,4.898,1425,4.898,1426,3.339,1427,3.611,1428,2.04,1429,4.626,1430,4.626,1431,2.461,1432,4.626,1433,4.626,1434,2.04,1435,2.04,1436,5.093,1437,6.807,1438,2.04,1439,2.04,1440,2.04,1441,3.339,1442,2.662,1443,3.339,1444,3.339,1445,3.339,1446,2.93,1447,3.998,1448,2.93,1449,2.93,1450,3.124,1451,3.339,1452,3.339,1453,2.04,1454,3.339,1455,3.339,1456,2.93,1457,2.04,1458,2.04,1459,2.04,1460,1.626,1461,1.503,1462,3.379,1463,3.379,1464,3.379,1465,3.124,1466,1.503,1467,3.124,1468,3.124,1469,3.611,1470,2.461,1471,2.662,1472,1.626,1473,1.626,1474,1.626,1475,1.626,1476,1.626,1477,2.04,1478,2.04,1479,2.04,1480,2.04,1481,2.04,1482,2.04,1483,4.238,1484,4.898,1485,2.93,1486,2.93,1487,2.93,1488,1.79,1489,2.04,1490,2.04,1491,2.04,1492,2.04,1493,1.626]],["title/modules/OptionsPageModule.html",[253,0.669,1494,3.107]],["body/modules/OptionsPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,224,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,360,3.766,1494,6.316,1495,5.092,1496,5.092,1497,5.092,1498,5.774,1499,5.801,1500,5.092]],["title/modules/OptionsPageRoutingModule.html",[253,0.669,1498,2.904]],["body/modules/OptionsPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,224,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,1498,5.129,1500,5.487,1501,6.251]],["title/components/PasswordPage.html",[0,0.276,226,1.211]],["body/components/PasswordPage.html",[0,0.343,1,0.784,2,1.386,3,0.053,4,0.053,5,0.931,6,0.931,7,0.931,8,0.931,9,0.046,13,0.721,14,0.031,16,0.763,17,1.834,19,1.106,21,0.959,22,0.931,23,2.813,24,2.654,25,1.427,27,1.427,29,0.594,30,1.045,31,0.959,38,1.236,39,2.748,46,1.509,48,2.496,51,1.105,52,1.502,53,0.011,57,0.879,60,3.005,62,0.83,64,0.962,65,1.274,67,0.807,72,1.019,87,1.019,99,0.156,101,0.116,108,1.662,113,0.053,114,0.742,116,1.157,132,1.898,148,1.136,164,0.813,166,2.694,170,2.888,175,1.643,192,2.517,194,0.931,195,1.944,196,1.386,197,0.931,198,2.148,199,0.931,200,0.931,201,0.83,202,0.931,203,0.807,204,0.83,205,1.427,206,0.807,207,1.427,208,0.807,209,0.931,210,0.807,211,1.427,212,0.807,213,1.427,214,0.807,215,0.931,216,0.83,217,0.931,218,0.807,219,0.931,220,0.807,221,0.931,222,0.807,223,0.931,224,0.807,225,0.931,226,1.684,227,0.807,228,0.931,229,0.807,230,0.807,231,0.931,232,0.807,233,0.931,234,0.807,235,0.807,236,0.931,237,0.807,238,0.931,239,0.807,240,1.172,241,0.807,242,0.807,243,0.931,244,0.807,245,0.931,246,0.807,247,0.879,248,0.931,249,0.931,250,0.003,251,0.005,252,0.003,278,0.473,286,1.197,307,1.157,376,3.84,421,1.967,429,2.027,463,3.805,464,2.793,474,1.834,475,2.127,500,5.08,516,2.465,530,3.429,544,3.43,580,4.591,581,3.776,586,5.852,590,2.888,596,2.465,621,3.285,628,2.888,636,2.645,637,4.402,638,3.171,714,2.645,715,2.793,717,2.793,719,2.793,720,2.645,721,2.793,726,1.935,753,3.855,767,2.402,775,4.915,881,2.402,883,3.805,962,2.965,1031,2.965,1196,3.776,1419,3.171,1423,4.321,1427,4.321,1431,3.171,1446,3.776,1447,2.965,1465,2.07,1466,2.07,1467,3.171,1468,3.171,1469,3.171,1470,2.07,1486,3.776,1502,2.465,1503,5.23,1504,5.23,1505,5.23,1506,2.808,1507,4.302,1508,2.808,1509,4.302,1510,4.302,1511,4.302,1512,2.808,1513,4.302,1514,5.862,1515,4.302,1516,4.302,1517,4.302,1518,3.776,1519,4.302,1520,4.302,1521,4.302,1522,2.808,1523,2.808,1524,2.808,1525,2.808,1526,4.302,1527,5.23,1528,5.23,1529,3.855,1530,2.239,1531,2.808,1532,4.302,1533,5.862,1534,4.302,1535,4.302,1536,2.808,1537,2.808,1538,4.302,1539,4.591,1540,2.808,1541,2.808,1542,2.808,1543,2.808,1544,2.808,1545,2.808,1546,2.808,1547,2.808,1548,2.808,1549,2.808,1550,2.808]],["title/modules/PasswordPageModule.html",[253,0.669,1551,3.107]],["body/modules/PasswordPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,226,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,376,2.974,618,4.276,1551,6.316,1552,5.092,1553,5.092,1554,5.092,1555,5.774,1556,5.801]],["title/modules/PasswordPageRoutingModule.html",[253,0.669,1555,2.904]],["body/modules/PasswordPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,226,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,618,4.608,1555,5.129,1557,6.251]],["title/components/PaymentPage.html",[0,0.276,227,1.211]],["body/components/PaymentPage.html",[0,0.34,1,0.774,2,1.372,3,0.053,4,0.053,5,0.919,6,0.919,7,0.919,8,0.919,9,0.046,13,0.712,14,0.03,16,0.752,17,1.822,19,1.097,21,0.947,22,0.919,23,2.809,24,2.65,25,1.413,27,1.413,29,0.586,30,1.035,31,1.989,38,1.223,39,2.734,46,1.366,48,2.179,51,2.105,52,1.49,53,0.011,57,0.867,60,2.984,62,0.819,64,0.952,65,0.926,67,0.796,72,2.113,74,3.738,87,1.546,99,0.188,101,0.114,105,2.049,113,0.053,114,0.732,148,1.537,164,0.804,166,2.481,192,2.491,194,0.919,195,1.413,196,1.372,197,0.919,198,2.136,199,0.919,200,0.919,201,0.819,202,0.919,203,0.796,204,0.819,205,1.413,206,0.796,207,1.413,208,0.796,209,0.919,210,0.796,211,1.413,212,0.796,213,1.413,214,0.796,215,0.919,216,0.819,217,0.919,218,0.796,219,0.919,220,0.796,221,0.919,222,0.796,223,0.919,224,0.796,225,0.919,226,0.796,227,1.672,228,0.919,229,0.796,230,1.49,231,0.919,232,0.796,233,0.919,234,0.796,235,0.796,236,0.919,237,0.796,238,0.919,239,0.796,240,1.164,241,0.796,242,0.796,243,0.919,244,0.796,245,0.919,246,0.796,247,0.867,248,0.919,249,0.919,250,0.003,251,0.005,252,0.003,278,0.466,286,1.181,307,1.142,376,2.183,421,1.947,474,1.815,475,2.113,497,3.139,530,3.405,590,2.868,621,3.512,628,2.868,636,3.58,637,4.384,646,2.619,648,2.765,649,2.491,650,3.58,651,2.619,652,2.619,653,2.378,654,2.619,655,2.183,658,3.146,660,2.619,661,2.619,662,2.276,663,3.678,664,2.619,665,2.619,674,2.276,678,1.704,679,1.314,685,2.378,687,1.947,689,1.365,694,2.765,714,2.619,715,2.765,717,2.765,719,2.765,720,2.619,721,2.765,767,3.25,779,2.043,881,3.25,883,4.628,952,4.291,962,4.913,1031,2.935,1284,4.012,1419,4.889,1422,4.135,1423,4.291,1427,4.291,1429,4.641,1430,4.641,1431,3.139,1432,4.641,1433,4.641,1447,2.935,1462,3.395,1463,3.395,1464,3.395,1465,3.139,1466,2.043,1467,3.139,1468,3.139,1469,3.139,1470,2.043,1471,2.209,1485,5.11,1529,4.291,1558,2.432,1559,5.187,1560,4.259,1561,2.771,1562,2.771,1563,2.771,1564,2.771,1565,2.771,1566,4.259,1567,4.259,1568,4.259,1569,3.738]],["title/modules/PaymentPageModule.html",[253,0.669,1570,3.107]],["body/modules/PaymentPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,227,2.407,230,1.666,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,1570,6.316,1571,5.092,1572,5.092,1573,5.092,1574,5.774,1575,5.801,1576,5.092]],["title/modules/PaymentPageRoutingModule.html",[253,0.669,1574,2.904]],["body/modules/PaymentPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,227,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,1574,5.129,1576,5.487,1577,6.251]],["title/components/PaymentReminderPage.html",[0,0.276,229,1.211]],["body/components/PaymentReminderPage.html",[0,0.371,1,0.891,2,1.526,3,0.061,4,0.061,5,1.058,6,1.058,7,1.058,8,1.058,9,0.052,13,0.819,14,0.033,15,2.531,16,0.866,17,1.768,19,1.195,20,2.019,21,1.93,22,1.058,23,2.851,24,2.69,25,1.571,27,1.571,29,0.674,30,1.151,38,1.361,46,1.682,51,1.217,52,0.916,53,0.011,57,0.998,62,0.943,64,1.059,65,1.653,67,0.916,72,1.158,87,1.158,99,0.141,101,0.131,102,4.309,103,5.488,104,0.674,113,0.061,114,1.251,116,1.315,148,1.251,171,2.8,189,1.36,192,2.771,193,4.158,194,1.058,195,1.571,196,1.526,197,1.058,198,2.014,199,1.058,200,1.058,201,0.943,202,1.058,203,0.916,204,0.943,205,1.571,206,0.916,207,1.571,208,0.916,209,1.058,210,0.916,211,1.571,212,0.916,213,1.571,214,0.916,215,1.058,216,0.943,217,1.058,218,0.916,219,1.058,220,0.916,221,1.058,222,0.916,223,1.058,224,0.916,225,1.058,226,0.916,227,0.916,228,1.058,229,1.796,230,2.283,231,1.058,232,0.916,233,1.058,234,0.916,235,0.916,236,1.058,237,0.916,238,1.058,239,0.916,240,1.25,241,0.916,242,0.916,243,1.058,244,0.916,245,1.058,246,0.916,247,0.998,248,1.058,249,1.058,250,0.004,251,0.006,252,0.004,326,2.913,348,1.781,405,5.159,407,5.411,429,2.531,583,1.781,584,2.071,589,1.962,590,1.572,591,2.198,592,1.962,601,2.913,602,2.198,604,2.352,605,1.962,606,1.962,607,1.962,608,2.352,609,1.962,611,1.962,635,2.771,655,2.896,812,3.264,908,1.781,1336,2.071,1578,5.788,1579,2.8,1580,4.158,1581,5.65,1582,4.737,1583,3.893,1584,5.65,1585,6.68,1586,4.165,1587,6.68,1588,4.959,1589,5.65,1590,6.68,1591,6.252,1592,3.19,1593,4.158,1594,3.19,1595,3.19,1596,3.19,1597,3.19,1598,3.19,1599,3.19,1600,3.19,1601,3.19,1602,3.19,1603,3.19,1604,3.19,1605,2.8,1606,3.19,1607,2.352,1608,3.19,1609,2.352,1610,3.19,1611,2.352,1612,3.19,1613,3.19,1614,3.19,1615,4.737,1616,3.19,1617,3.19,1618,4.737,1619,3.19,1620,3.19,1621,2.8,1622,3.19,1623,2.352,1624,3.19,1625,2.543,1626,3.19,1627,3.19,1628,3.19,1629,3.19,1630,4.737,1631,3.19,1632,3.19,1633,3.19,1634,3.19,1635,3.19,1636,3.19,1637,3.19,1638,3.19,1639,3.19]],["title/modules/PaymentReminderPageModule.html",[253,0.669,1640,3.107]],["body/modules/PaymentReminderPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,229,2.402,230,2.033,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,405,4.241,407,3.964,1578,4.241,1640,6.306,1641,5.05,1642,5.05,1643,5.05,1644,5.762,1645,5.753,1646,5.05]],["title/modules/PaymentReminderPageRoutingModule.html",[253,0.669,1644,2.904]],["body/modules/PaymentReminderPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,229,2.129,230,1.783,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,405,4.576,407,4.278,1578,4.576,1644,5.108,1646,5.45]],["title/components/PrivacyPage.html",[0,0.276,232,1.211]],["body/components/PrivacyPage.html",[0,0.298,1,0.631,2,1.168,3,0.043,4,0.043,5,0.749,6,0.749,7,0.749,8,0.749,9,0.037,13,0.58,14,0.027,16,0.613,17,1.627,19,0.96,21,0.771,22,0.749,23,2.738,24,2.583,25,1.202,27,1.202,29,0.477,30,0.881,31,2.183,38,1.041,39,2.825,46,1.389,48,2.276,51,2.16,52,1.636,53,0.011,57,1.134,60,2.666,62,0.667,64,0.81,65,0.788,67,0.649,72,2.411,87,1.316,99,0.198,101,0.093,105,1.831,108,2.009,109,1.071,111,2.562,112,1.321,113,0.043,114,0.596,132,2.004,148,1.687,164,0.858,166,2.922,174,1.8,175,1.321,177,1.982,181,2.353,192,2.657,194,0.749,195,1.202,196,1.168,197,0.749,198,2.058,199,0.749,200,0.749,201,0.667,202,0.749,203,0.649,204,1.342,205,1.202,206,0.649,207,1.202,208,0.649,209,0.749,210,0.649,211,1.202,212,0.649,213,1.202,214,0.649,215,0.749,216,0.667,217,0.749,218,0.649,219,0.749,220,0.649,221,0.749,222,0.649,223,0.749,224,0.649,225,0.749,226,0.649,227,0.649,228,0.749,229,0.649,230,0.649,231,0.749,232,1.494,233,0.749,234,0.649,235,0.649,236,0.749,237,0.649,238,0.749,239,0.649,240,1.04,241,0.649,242,0.649,243,0.749,244,0.649,245,0.749,246,0.649,247,0.706,248,0.749,249,0.749,250,0.003,251,0.004,252,0.003,278,0.38,286,0.962,307,0.931,381,3.833,421,2.378,452,4.325,474,1.545,475,1.887,478,3.182,530,3.557,540,2.121,557,1.157,590,2.996,621,3.273,628,2.562,634,2.672,636,3.198,637,4.325,646,2.229,648,2.353,649,2.121,650,3.198,651,2.229,652,2.229,653,2.024,654,2.229,655,1.859,658,2.884,660,3.198,661,2.229,662,1.937,663,3.466,664,2.229,665,2.229,674,1.937,678,1.388,679,1.071,685,2.024,687,1.657,689,1.112,694,2.353,702,1.982,711,1.982,714,2.793,715,2.949,717,2.949,719,2.949,720,2.793,721,2.949,767,2.904,779,1.664,836,2.89,881,2.904,883,4.566,886,2.779,887,1.388,904,2.672,952,3.833,962,4.578,993,2.498,995,2.353,1021,3.622,1023,1.982,1029,1.982,1031,3.13,1126,2.672,1284,3.584,1419,4.483,1422,3.622,1423,3.833,1427,3.833,1429,4.146,1430,4.146,1431,2.672,1432,4.146,1433,4.146,1447,2.498,1462,2.89,1463,2.89,1464,2.89,1465,2.672,1466,1.664,1467,3.348,1468,3.348,1469,3.348,1470,1.664,1471,1.8,1487,3.182,1529,3.833,1647,1.982,1648,4.543,1649,3.625,1650,5.2,1651,5.2,1652,2.258,1653,2.258,1654,3.182,1655,3.182,1656,3.625,1657,2.258,1658,3.625,1659,5.2,1660,3.182,1661,3.182,1662,3.625,1663,3.182,1664,3.625,1665,3.625,1666,3.625,1667,3.625,1668,3.625,1669,3.182,1670,3.625,1671,2.258,1672,2.258,1673,2.258,1674,2.258,1675,1.982,1676,2.258,1677,3.987,1678,1.982,1679,2.258,1680,2.258,1681,2.258,1682,2.258,1683,2.258,1684,2.258,1685,2.258,1686,2.258,1687,1.982,1688,4.565,1689,3.625,1690,5.2,1691,3.625,1692,5.2]],["title/modules/PrivacyPageModule.html",[253,0.669,1693,3.107]],["body/modules/PrivacyPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,232,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,381,4.276,1693,6.316,1694,5.092,1695,5.092,1696,5.092,1697,5.774,1698,5.801,1699,5.092]],["title/modules/PrivacyPageRoutingModule.html",[253,0.669,1697,2.904]],["body/modules/PrivacyPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,232,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,1697,5.129,1699,5.487,1700,6.251]],["title/components/ProfilePage.html",[0,0.276,234,1.211]],["body/components/ProfilePage.html",[0,0.308,1,0.662,2,1.214,3,0.045,4,0.045,5,0.786,6,0.786,7,0.786,8,0.786,9,0.039,13,1.872,14,0.028,15,2.858,16,0.644,17,1.18,19,0.992,21,0.81,22,0.786,23,2.756,24,2.6,25,1.25,27,1.25,29,0.501,30,0.916,31,2.123,38,1.536,39,2.872,46,1.47,48,2.326,51,1.933,52,1.785,53,0.011,57,1.468,62,0.701,63,1.214,64,1.512,65,1.02,66,1.214,67,0.681,71,2.105,72,1.368,87,1.368,99,0.218,101,0.098,105,1.883,108,2.066,109,1.125,111,1.857,113,0.045,114,0.626,116,1.554,148,1.958,164,0.712,166,2.279,194,0.786,195,1.25,196,1.214,197,0.786,198,1.88,199,0.786,200,0.786,201,0.701,202,0.786,203,0.681,204,0.701,205,1.25,206,0.681,207,1.25,208,0.681,209,0.786,210,0.681,211,1.25,212,0.681,213,1.25,214,0.681,215,0.786,216,0.701,217,0.786,218,0.681,219,0.786,220,0.681,221,0.786,222,0.681,223,0.786,224,0.681,225,0.786,226,0.681,227,0.681,228,0.786,229,0.681,230,1.348,231,0.786,232,0.681,233,0.786,234,1.536,235,0.681,236,0.786,237,0.681,238,0.786,239,0.681,240,1.069,241,0.681,242,0.681,243,0.786,244,0.681,245,0.786,246,0.681,247,0.742,248,0.786,249,0.786,250,0.003,251,0.005,252,0.003,263,1.083,278,0.399,286,1.011,297,1.215,298,1.125,307,0.977,352,2.741,360,2.447,418,2.598,421,1.724,429,1.889,438,3.046,439,1.89,474,1.607,475,1.941,535,3.685,540,1.387,558,1.458,589,1.458,590,1.857,592,1.458,593,4.985,594,1.634,598,2.318,601,1.458,605,1.458,606,2.318,607,3.288,609,3.288,610,1.634,611,1.458,621,3.332,622,4.119,623,3.309,624,4.119,627,5.719,628,2.635,629,3.309,632,3.309,634,3.942,635,3.128,636,4.158,637,4.56,638,3.942,639,4.694,640,5.936,641,4.263,642,3.309,643,3.309,644,5.122,645,4.119,646,4.391,648,2.447,649,2.205,650,3.288,651,2.318,652,2.318,653,2.105,654,2.318,655,1.933,658,1.788,660,2.318,661,2.318,662,2.015,663,1.857,664,2.318,665,2.318,666,3.309,667,5.122,669,3.309,675,2.081,678,1.458,679,1.125,680,2.105,681,1.89,682,2.081,683,3.006,684,2.105,686,3.309,687,1.724,688,1.215,694,1.539,696,2.081,698,2.081,703,2.081,704,2.081,705,2.081,712,1.215,714,2.318,715,2.447,716,3.309,717,2.447,718,3.309,719,2.447,720,2.318,721,2.447,722,3.006,723,3.006,724,1.89,725,3.006,726,2.598,727,1.89,728,3.942,729,2.081,730,1.89,731,2.081,732,2.081,733,1.748,734,2.081,735,2.081,736,2.081,737,2.779,738,2.081,739,2.081,740,2.081,767,2.986,1358,3.309,1529,1.748,1660,4.694,1663,4.694,1687,2.081,1701,2.081,1702,5.347,1703,2.371,1704,2.371,1705,2.371,1706,2.371,1707,2.371,1708,2.371,1709,2.371,1710,2.371,1711,2.371,1712,2.371,1713,2.371,1714,2.081,1715,2.371,1716,2.371,1717,2.371,1718,2.371,1719,2.371,1720,3.309]],["title/modules/ProfilePageModule.html",[253,0.669,1721,3.107]],["body/modules/ProfilePageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,234,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,352,2.974,747,4.276,1721,6.316,1722,5.092,1723,5.092,1724,5.092,1725,5.774,1726,5.801]],["title/modules/ProfilePageRoutingModule.html",[253,0.669,1725,2.904]],["body/modules/ProfilePageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,234,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,747,4.608,1725,5.129,1727,6.251]],["title/components/RegisterPage.html",[0,0.276,235,1.211]],["body/components/RegisterPage.html",[0,0.382,1,0.937,2,1.583,3,0.064,4,0.064,5,1.112,6,1.112,7,1.112,8,1.112,9,0.055,13,0.861,14,0.034,16,0.911,17,2.004,19,1.23,20,2.095,21,1.988,22,1.112,23,2.865,24,2.703,25,1.63,27,1.63,29,0.709,30,1.194,38,1.412,46,1.549,48,1.84,51,2.062,52,0.963,53,0.011,57,1.049,62,0.991,64,1.099,65,1.483,67,0.963,99,0.174,101,0.138,108,2.247,109,1.591,113,0.064,114,1.298,116,1.382,155,2.311,175,1.962,189,1.43,194,1.112,195,1.63,196,1.583,197,1.112,198,2.063,199,1.112,200,1.112,201,0.991,202,1.112,203,0.963,204,0.991,205,1.63,206,0.963,207,1.63,208,0.963,209,1.112,210,0.963,211,1.63,212,0.963,213,1.63,214,0.963,215,1.112,216,0.991,217,1.112,218,0.963,219,1.112,220,0.963,221,1.112,222,0.963,223,1.112,224,0.963,225,1.112,226,0.963,227,0.963,228,1.112,229,0.963,230,0.963,231,1.112,232,0.963,233,1.112,234,0.963,235,1.84,236,1.112,237,0.963,238,1.112,239,0.963,240,1.28,241,0.963,242,0.963,243,1.112,244,0.963,245,1.112,246,0.963,247,1.049,248,1.112,249,1.112,250,0.004,251,0.006,252,0.004,278,0.564,326,4.193,336,3.387,376,3.775,388,5.204,429,2.381,449,2.875,457,3.808,462,4.414,463,3.191,464,3.191,469,5.437,471,4.314,475,2.111,491,3.919,492,3.919,500,4.158,558,2.062,584,2.177,588,4.314,589,2.062,590,1.652,591,2.311,592,2.062,594,3.387,595,3.919,597,2.944,598,2.062,600,2.472,601,3.577,602,2.311,603,2.472,604,2.472,605,3.022,606,3.577,607,2.062,609,2.062,610,2.311,611,2.062,641,2.674,737,3.623,928,5.437,1030,2.944,1036,3.919,1083,2.472,1374,2.944,1539,4.314,1728,2.944,1729,5.818,1730,4.915,1731,5.818,1732,3.354,1733,3.354,1734,3.354,1735,4.915,1736,3.354,1737,3.354,1738,4.915,1739,3.354,1740,3.354,1741,3.354,1742,3.354,1743,3.354,1744,3.354,1745,3.354,1746,3.354,1747,6.406,1748,4.915,1749,4.915,1750,3.354,1751,3.354,1752,3.354]],["title/modules/RegisterPageModule.html",[253,0.669,1753,3.107]],["body/modules/RegisterPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,235,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,388,3.998,1753,6.316,1754,5.092,1755,5.092,1756,5.092,1757,5.774,1758,5.801,1759,5.092]],["title/modules/RegisterPageRoutingModule.html",[253,0.669,1757,2.904]],["body/modules/RegisterPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,235,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,1757,5.129,1759,5.487,1760,6.251]],["title/classes/SimpleTransaction.html",[14,0.025,1761,3.36]],["body/classes/SimpleTransaction.html",[3,0.074,4,0.074,9,0.064,13,1.409,14,0.037,15,4.01,29,0.826,30,1.333,46,1.738,51,2.177,53,0.011,63,1.259,64,0.874,65,1.738,66,1.259,68,4.328,94,2.508,99,0.117,113,0.074,132,2.42,148,2.077,240,1.619,250,0.005,251,0.007,252,0.005,286,1.666,317,2.089,330,5.478,400,3.837,429,2.619,433,3.198,528,3.78,655,4.032,662,2.931,663,2.702,874,2.881,973,3.566,1114,4.373,1193,4.815,1488,4.815,1583,5.695,1586,5.798,1588,6.904,1593,4.815,1605,3.431,1607,2.881,1609,2.881,1611,2.881,1761,4.373,1762,3.431,1763,5.485,1764,5.485,1765,5.485,1766,5.485,1767,5.485,1768,4.815,1769,4.815,1770,5.065,1771,5.485,1772,5.485,1773,5.485,1774,7.865,1775,7.865,1776,7.109,1777,5.485,1778,5.485,1779,5.485,1780,5.485,1781,3.78,1782,3.78,1783,5.485,1784,5.485,1785,5.485,1786,5.485,1787,3.908,1788,3.908,1789,3.908,1790,3.908,1791,3.908,1792,3.908,1793,3.908,1794,3.116,1795,3.431,1796,3.908,1797,3.908]],["title/classes/Statistic.html",[14,0.025,932,2.904]],["body/classes/Statistic.html",[3,0.07,4,0.07,9,0.061,13,1.352,14,0.031,15,1.971,17,1.647,19,0.78,29,0.78,30,1.279,46,1.872,53,0.011,63,1.188,64,0.824,65,1.872,66,1.188,72,3.082,87,3.082,113,0.07,114,0.974,148,1.39,170,4.35,250,0.005,251,0.006,252,0.005,286,1.572,317,1.971,355,2.394,932,3.628,948,5.028,973,4.216,1316,2.94,1798,3.237,1799,3.688,1800,6.139,1801,6.139,1802,6.139,1803,6.139,1804,6.139,1805,6.139,1806,6.139,1807,6.139,1808,6.139,1809,6.139,1810,6.139,1811,6.139,1812,6.139,1813,6.139,1814,6.139,1815,6.139,1816,6.139,1817,6.139,1818,7.748,1819,7.578,1820,6.139,1821,5.264,1822,5.264,1823,4.621,1824,3.688,1825,3.688,1826,3.688,1827,3.688,1828,3.688,1829,3.688,1830,3.688,1831,3.688,1832,3.688,1833,3.688,1834,3.688,1835,3.688,1836,3.688,1837,3.688,1838,3.688,1839,3.688,1840,3.688,1841,3.688,1842,3.688,1843,3.688,1844,3.688,1845,3.688,1846,3.688,1847,3.688,1848,3.237]],["title/components/StatisticsPage.html",[0,0.276,237,1.211]],["body/components/StatisticsPage.html",[0,0.31,1,0.669,2,1.224,3,0.046,4,0.046,5,0.794,6,0.794,7,0.794,8,0.794,9,0.039,13,1.213,14,0.028,16,0.65,17,1.478,19,0.998,20,1.619,21,1.613,22,0.794,23,2.759,24,2.603,25,1.26,27,1.26,29,0.506,30,0.923,31,1.837,38,1.091,39,1.947,46,1.557,48,2.013,51,1.877,52,1.357,53,0.011,57,1.189,62,0.707,63,1.224,64,1.202,65,1.519,66,1.224,67,0.688,72,1.951,87,1.951,99,0.209,100,1.765,101,0.099,105,1.893,106,2.101,111,1.872,113,0.046,114,0.632,116,0.987,132,1.056,138,2.8,148,1.727,170,3.074,183,2.8,189,2.292,194,1.26,195,1.26,196,1.224,197,0.794,198,1.889,199,0.794,200,0.794,201,0.707,202,0.794,203,0.688,204,0.707,205,1.26,206,0.688,207,1.26,208,0.688,209,0.794,210,0.688,211,1.26,212,0.688,213,1.26,214,0.688,215,0.794,216,0.707,217,0.794,218,0.688,219,0.794,220,0.688,221,0.794,222,0.688,223,0.794,224,0.688,225,0.794,226,0.688,227,0.688,228,0.794,229,0.688,230,0.688,231,0.794,232,0.688,233,0.794,234,0.688,235,0.688,236,0.794,237,1.544,238,0.794,239,0.688,240,1.307,241,0.688,242,0.688,243,0.794,244,0.688,245,0.794,246,0.688,247,0.749,248,0.794,249,0.794,250,0.003,251,0.005,252,0.003,278,0.403,286,1.02,307,0.987,352,1.947,355,4.051,360,1.554,421,1.737,449,3.145,474,1.619,475,1.951,540,2.762,551,2.466,554,3.334,557,3.963,598,1.472,621,2.649,635,2.222,646,2.336,649,2.222,650,4.172,651,2.336,652,3.306,653,3.002,654,2.336,655,1.947,658,3.625,660,3.306,661,2.336,662,2.03,663,1.872,664,2.336,665,3.306,678,1.472,681,1.908,683,3.029,687,1.737,688,1.227,694,1.554,712,1.227,758,4.286,760,2.8,788,2.101,822,3.029,826,3.334,930,5.956,931,4.145,934,3.334,943,5.741,960,4.286,973,3.847,985,2.101,986,3.334,991,3.334,993,2.618,994,4.719,995,2.466,997,3.334,998,3.334,1004,2.101,1077,2.101,1078,2.101,1079,2.101,1080,4.675,1081,4.675,1082,2.101,1083,1.765,1084,2.101,1085,2.101,1086,2.101,1087,2.101,1088,2.101,1089,2.101,1090,3.334,1091,2.101,1092,2.101,1093,1.908,1099,2.101,1100,2.101,1714,2.101,1782,4.04,1849,2.101,1850,4.722,1851,3.799,1852,5.863,1853,5.863,1854,3.799,1855,3.799,1856,2.394,1857,3.963,1858,3.799,1859,5.956,1860,3.799,1861,6.134,1862,5.376,1863,4.719,1864,3.799,1865,2.394,1866,3.799,1867,3.799,1868,3.799,1869,2.394,1870,3.799,1871,3.799,1872,3.799,1873,3.799,1874,3.799,1875,2.394,1876,2.394,1877,2.394,1878,2.394,1879,2.394,1880,2.394,1881,2.394,1882,2.394,1883,2.394,1884,2.394,1885,2.394,1886,2.394,1887,2.394,1888,6.785,1889,2.394,1890,2.394,1891,2.394,1892,4.722,1893,6.24,1894,2.394,1895,4.722,1896,2.394,1897,2.394,1898,2.394,1899,3.799,1900,3.799,1901,3.799,1902,3.799,1903,3.799,1904,3.799,1905,3.029]],["title/modules/StatisticsPageModule.html",[253,0.669,1906,3.107]],["body/modules/StatisticsPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,237,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,355,3.766,1906,6.316,1907,5.092,1908,5.092,1909,5.092,1910,5.774,1911,5.801,1912,5.092]],["title/modules/StatisticsPageRoutingModule.html",[253,0.669,1910,2.904]],["body/modules/StatisticsPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,237,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,1910,5.129,1912,5.487,1913,6.251]],["title/injectables/StatisticsService.html",[417,1.859,551,2.736]],["body/injectables/StatisticsService.html",[3,0.048,4,0.048,9,0.042,13,1.644,14,0.015,17,2.228,19,1.175,29,0.537,38,1.143,46,1.312,48,2.396,51,2.145,52,2.36,53,0.011,63,1.943,64,1.349,65,1.312,66,1.943,89,5.106,99,0.147,101,0.105,113,0.048,114,0.671,148,1.993,157,2.54,170,3.59,198,1.581,240,1.53,250,0.003,251,0.005,252,0.003,283,1.418,355,3.607,417,1.756,419,1.486,421,2.926,429,2.165,440,1.562,540,4.886,551,2.584,553,1.562,557,3.281,569,4.155,635,2.329,638,4.718,658,1.888,760,2.934,822,3.174,881,3.102,932,4.158,948,4.641,960,6.241,973,4.028,993,1.75,995,1.649,1003,2.23,1053,4.308,1116,5.641,1192,2.934,1316,2.025,1769,3.494,1781,4.611,1782,4.158,1823,3.494,1848,2.23,1859,7.046,1861,6.935,1863,5.618,1914,2.23,1915,3.981,1916,3.981,1917,3.981,1918,3.981,1919,3.981,1920,3.981,1921,3.981,1922,3.981,1923,7.653,1924,2.54,1925,4.43,1926,6.4,1927,5.103,1928,6.4,1929,3.981,1930,2.54,1931,3.981,1932,2.54,1933,3.981,1934,5.556,1935,2.54,1936,5.556,1937,3.981,1938,3.494,1939,4.908,1940,3.981,1941,2.54,1942,3.981,1943,3.981,1944,3.981,1945,6.691,1946,2.54,1947,2.54,1948,2.54,1949,2.54,1950,6.927,1951,2.54,1952,2.54,1953,4.81,1954,2.54,1955,6.927,1956,6.691,1957,2.54,1958,2.54,1959,2.54,1960,3.981,1961,2.54,1962,2.54,1963,2.54,1964,2.54,1965,2.54,1966,2.54,1967,2.54,1968,2.54,1969,2.54,1970,2.54,1971,2.54,1972,2.54,1973,2.54,1974,2.54,1975,2.54,1976,5.556,1977,6.691,1978,3.494,1979,3.981,1980,3.981,1981,2.54,1982,2.54,1983,2.54]],["title/classes/Transaction.html",[14,0.025,240,0.842]],["body/classes/Transaction.html",[3,0.09,4,0.09,9,0.077,14,0.028,29,0.997,30,1.514,46,1.852,53,0.011,63,1.519,64,1.054,65,1.899,66,1.519,68,3.331,113,0.09,240,1.246,250,0.006,251,0.008,252,0.006,286,2.01,317,2.519,429,2.591,433,3.451,530,4.346,655,4.15,868,5.579,948,4.569,973,3.071,1442,6.455,1583,5.579,1586,5.968,1607,3.475,1609,3.475,1611,3.475,1776,7.106,1794,3.759,1795,4.138,1984,4.138,1985,7.726,1986,7.106,1987,5.968,1988,6.233,1989,6.233,1990,4.714,1991,4.714,1992,4.714,1993,4.714,1994,4.714,1995,4.714,1996,4.714,1997,4.714,1998,4.714,1999,4.714,2000,4.714,2001,4.138,2002,4.138,2003,3.759,2004,4.138,2005,3.759]],["title/classes/Transaction-1.html",[14,0.021,240,0.701,557,1.797]],["body/classes/Transaction-1.html",[3,0.075,4,0.075,9,0.064,13,1.007,14,0.037,15,2.095,19,1.732,29,0.829,30,1.335,46,1.824,51,2.081,53,0.011,65,1.897,68,3.677,94,1.792,99,0.164,113,0.075,114,1.035,117,2.701,148,2.14,230,1.126,240,1.638,250,0.005,251,0.007,252,0.005,317,2.095,366,3.903,425,2.293,429,2.601,433,3.201,528,2.701,655,3.954,658,2.607,663,1.931,770,3.125,868,5.424,874,2.889,881,2.188,948,3.38,973,3.39,1442,5.988,1583,5.175,1586,5.536,1607,2.889,1609,2.889,1611,2.889,1768,3.44,1781,2.701,1782,2.701,1794,3.125,1986,6.592,1987,5.536,2001,3.44,2002,3.44,2003,3.125,2004,3.44,2005,3.125,2006,3.44,2007,4.051,2008,4.993,2009,6.347,2010,5.802,2011,5.571,2012,5.06,2013,3.919,2014,3.919,2015,3.919,2016,3.919,2017,3.919,2018,3.919,2019,3.919,2020,3.919,2021,3.919,2022,3.919,2023,3.919,2024,3.919,2025,3.919,2026,3.919,2027,3.919,2028,3.919,2029,3.919,2030,3.919,2031,5.496,2032,3.919,2033,3.919,2034,3.919,2035,3.125,2036,3.919,2037,3.919,2038,3.919,2039,3.44,2040,2.701,2041,3.919,2042,3.919,2043,3.919]],["title/components/TransactionCreatePage.html",[0,0.276,239,1.211]],["body/components/TransactionCreatePage.html",[0,0.286,1,0.592,2,1.11,3,0.04,4,0.04,5,0.703,6,0.703,7,0.703,8,0.703,9,0.035,14,0.02,16,0.576,17,2.289,19,1.372,20,1.469,21,1.487,22,0.703,23,2.714,24,2.561,25,1.143,27,1.143,29,0.448,30,0.837,31,2.127,33,2.064,38,0.99,39,1.794,46,1.635,48,2.429,51,1.771,52,1.697,53,0.011,57,1.948,60,1.766,62,0.626,64,0.77,65,1.411,67,0.609,68,3.585,72,2.26,87,2.26,94,1.99,99,0.219,101,0.087,104,0.448,105,1.765,107,1.005,108,1.936,109,1.005,110,1.24,111,2.47,112,1.24,113,0.04,114,0.56,115,0.904,119,1.087,132,2.433,148,1.713,157,1.99,164,0.4,166,0.904,189,2.137,194,0.703,195,1.143,196,1.11,197,0.703,198,1.615,199,0.703,200,0.703,201,0.626,202,0.703,203,0.609,204,0.626,205,1.143,206,0.609,207,1.143,208,0.609,209,0.703,210,0.609,211,1.143,212,0.609,213,1.143,214,0.609,215,0.703,216,0.626,217,0.703,218,0.609,219,0.703,220,0.609,221,0.703,222,0.609,223,0.703,224,0.609,225,0.703,226,0.609,227,0.609,228,0.703,229,0.609,230,0.609,231,0.703,232,0.609,233,0.703,234,0.609,235,0.609,236,0.703,237,0.609,238,0.703,239,1.44,240,1.642,241,0.609,242,0.609,243,0.703,244,0.609,245,0.703,246,0.609,247,0.663,248,0.703,249,0.703,250,0.004,251,0.004,252,0.003,278,0.357,307,0.874,339,2.326,364,4.939,366,3.082,372,3.254,400,1.184,429,1.323,472,1.69,474,1.469,475,1.819,505,3.024,506,2.747,553,1.304,583,1.924,585,2.016,590,1.044,591,1.461,592,2.119,608,2.54,621,2.47,628,2.47,631,1.563,658,1.634,662,1.841,663,2.145,674,1.841,679,1.005,685,1.924,687,1.575,688,1.087,689,1.044,690,1.24,712,1.087,728,1.563,753,4.355,775,4.065,835,3.024,876,1.69,877,3.821,878,3.024,884,1.861,885,1.861,886,2.679,887,1.304,908,1.924,948,2.677,973,1.044,995,2.826,1010,2.54,1015,3.024,1016,3.024,1032,5.186,1068,2.747,1072,3.821,1108,2.374,1126,4.065,1152,1.861,1255,2.54,1436,3.024,1447,1.461,1450,1.563,1456,4.4,1460,1.69,1461,1.563,1472,1.69,1473,1.69,1474,1.69,1475,1.69,1476,1.69,1493,1.69,1530,1.69,1621,3.821,1623,3.209,1625,2.747,1770,3.695,1781,1.461,1857,2.54,1938,1.861,1953,2.747,2007,1.563,2008,2.374,2010,2.54,2035,2.747,2039,1.861,2040,2.374,2044,3.608,2045,4.353,2046,5.013,2047,4.353,2048,4.353,2049,4.4,2050,5.013,2051,4.4,2052,2.12,2053,2.12,2054,4.711,2055,2.12,2056,2.12,2057,3.024,2058,3.024,2059,3.024,2060,3.445,2061,2.12,2062,2.12,2063,3.445,2064,3.445,2065,2.12,2066,2.12,2067,2.12,2068,2.12,2069,2.12,2070,2.12,2071,3.445,2072,2.12,2073,1.376,2074,1.69,2075,1.563,2076,2.12,2077,2.12,2078,2.12,2079,2.12,2080,2.12,2081,3.209,2082,2.12,2083,2.12,2084,2.12,2085,2.12,2086,2.12,2087,2.12,2088,2.12,2089,2.12,2090,2.12,2091,2.12,2092,1.861,2093,2.12,2094,1.861,2095,2.12,2096,2.12,2097,2.12,2098,2.12,2099,2.12,2100,2.12,2101,2.12,2102,2.12,2103,1.563,2104,2.12,2105,2.12,2106,2.747,2107,2.12,2108,2.12,2109,2.12,2110,2.12,2111,2.12,2112,2.12,2113,2.12,2114,2.12,2115,2.747,2116,1.861,2117,2.12,2118,1.861,2119,3.024,2120,1.861,2121,1.861,2122,1.861,2123,1.861,2124,1.861,2125,2.12,2126,2.12,2127,1.861,2128,2.12,2129,1.563,2130,1.69,2131,1.69,2132,1.563,2133,1.69,2134,1.69,2135,1.69,2136,1.69,2137,2.747,2138,1.69,2139,1.69,2140,3.445,2141,2.12,2142,3.024,2143,2.12,2144,2.12,2145,1.861,2146,1.861,2147,1.861,2148,1.861,2149,2.747,2150,3.445,2151,3.445,2152,3.024,2153,2.12,2154,3.024,2155,3.024,2156,2.12,2157,1.861,2158,3.024,2159,3.024,2160,3.024,2161,3.024,2162,3.024,2163,3.024,2164,3.024,2165,2.747,2166,3.024,2167,2.747,2168,3.445,2169,2.12,2170,2.12,2171,1.861]],["title/modules/TransactionCreatePageModule.html",[253,0.669,1295,2.904]],["body/modules/TransactionCreatePageModule.html",[3,0.107,4,0.107,9,0.092,14,0.033,53,0.011,99,0.248,101,0.231,104,1.184,113,0.107,239,2.507,240,1.391,250,0.007,251,0.009,252,0.007,255,0.811,256,2.057,261,2.178,262,1.752,263,1.609,265,2.242,266,1.104,267,1.104,268,2.309,269,1.804,270,2.309,271,1.804,272,2.242,273,1.804,281,2.178,339,2.993,364,3.635,916,4.916,917,4.128,1295,5.915,2044,2.656,2172,4.916,2173,4.916,2174,4.916,2175,4.916,2176,5.724]],["title/modules/TransactionCreatePageRoutingModule.html",[253,0.669,2176,2.904]],["body/modules/TransactionCreatePageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,239,2.129,240,1.241,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,339,3.318,364,4.03,917,4.576,2044,2.945,2176,5.108]],["title/components/TransactionDetailsPage.html",[0,0.276,241,1.211]],["body/components/TransactionDetailsPage.html",[0,0.278,1,0.57,2,1.075,3,0.039,4,0.039,5,0.676,6,0.676,7,0.676,8,0.676,9,0.033,13,0.857,14,0.02,16,0.554,19,0.896,20,1.423,21,1.448,22,0.676,23,2.699,24,2.546,25,1.107,27,1.107,29,0.431,30,0.811,31,2.093,33,2.01,38,0.959,39,1.747,46,1.673,48,2.752,51,1.573,52,1.9,53,0.011,57,1.816,62,0.603,63,1.075,64,1.095,65,1.673,66,1.075,67,0.586,68,3.536,72,1.212,78,2.301,87,1.212,94,1.526,99,0.208,101,0.084,104,0.431,105,1.725,107,0.967,108,1.892,109,0.967,111,2.413,112,1.193,113,0.039,114,0.539,115,0.869,119,1.046,123,1.405,132,2.161,148,1.798,157,3.253,164,0.385,166,0.869,189,2.088,194,0.676,195,1.107,196,1.075,197,0.676,198,1.578,199,0.676,200,0.676,201,0.603,202,0.676,203,0.586,204,0.603,205,1.107,206,0.586,207,1.107,208,0.586,209,0.676,210,0.586,211,1.107,212,0.586,213,1.107,214,0.586,215,0.676,216,0.603,217,0.676,218,0.586,219,0.676,220,0.586,221,0.676,222,0.586,223,0.676,224,0.586,225,0.676,226,0.586,227,0.586,228,0.676,229,0.586,230,1.407,231,0.676,232,0.586,233,0.676,234,0.586,235,0.586,236,0.676,237,0.586,238,0.676,239,0.586,240,1.666,241,1.407,242,0.586,243,0.676,244,0.586,245,0.676,246,0.586,247,0.638,248,0.676,249,0.676,250,0.004,251,0.004,252,0.002,263,0.586,278,0.343,297,1.046,298,0.967,307,0.841,348,2.367,366,1.254,370,5.349,400,1.139,429,2.236,433,0.869,452,3.93,472,1.626,474,1.423,475,1.778,499,1.503,514,2.921,553,1.254,583,1.864,585,1.953,628,2.413,649,1.953,663,1.005,674,1.784,679,0.967,680,1.864,684,1.864,685,1.864,687,1.526,688,1.046,689,1.005,690,1.193,712,1.046,908,1.864,910,2.662,918,1.626,920,3.72,921,2.93,949,3.905,966,1.79,972,1.79,973,1.645,978,1.79,979,1.79,981,1.79,982,1.79,1010,2.461,1021,1.626,1027,1.626,1108,2.301,1114,2.662,1115,2.93,1116,2.461,1284,4.405,1450,1.503,1460,1.626,1461,1.503,1472,1.626,1473,1.626,1474,1.626,1475,1.626,1476,1.626,1493,1.626,1518,3.72,1580,2.93,1623,2.461,1625,2.662,1669,2.93,1678,2.93,1770,4.277,1781,1.405,1782,2.301,1978,1.79,1987,4.515,2007,1.503,2008,2.921,2035,2.662,2040,3.724,2044,3.681,2051,4.3,2075,1.503,2081,1.503,2103,4.277,2129,1.503,2132,2.461,2145,1.79,2146,2.93,2147,1.79,2148,1.79,2152,2.93,2154,1.79,2155,1.79,2158,2.93,2159,2.93,2160,1.79,2161,1.79,2162,1.79,2163,1.79,2164,1.79,2177,4.238,2178,4.238,2179,4.238,2180,4.238,2181,4.238,2182,4.898,2183,3.339,2184,3.339,2185,4.898,2186,4.898,2187,2.04,2188,3.339,2189,6.807,2190,2.04,2191,3.339,2192,2.04,2193,4.898,2194,4.898,2195,4.898,2196,4.898,2197,3.339,2198,2.04,2199,2.04,2200,2.04,2201,3.339,2202,2.04,2203,3.339,2204,4.898,2205,2.04,2206,3.339,2207,4.238,2208,2.662,2209,2.04,2210,2.04,2211,2.04,2212,2.04,2213,2.04,2214,3.339,2215,2.04,2216,2.04,2217,2.04,2218,2.04,2219,2.04,2220,2.04,2221,1.79,2222,3.339,2223,2.04,2224,2.04,2225,2.04,2226,2.04,2227,2.04,2228,2.04,2229,2.04,2230,3.339,2231,3.339,2232,2.04,2233,2.04,2234,2.04,2235,2.04,2236,2.04,2237,2.04,2238,2.04,2239,3.339,2240,2.04,2241,2.04,2242,2.04,2243,2.04,2244,2.04,2245,2.04,2246,2.04,2247,5.403,2248,2.04,2249,2.04,2250,3.339,2251,3.339,2252,3.339,2253,2.04,2254,2.04,2255,3.339,2256,3.339,2257,3.339,2258,3.339,2259,3.339,2260,3.339,2261,4.898,2262,3.339]],["title/modules/TransactionDetailsPageModule.html",[253,0.669,2263,3.107]],["body/modules/TransactionDetailsPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,240,1.415,241,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,348,3.212,370,3.964,1123,5.05,1124,4.241,2044,2.728,2263,6.306,2264,5.05,2265,5.05,2266,5.05,2267,5.762]],["title/modules/TransactionDetailsPageRoutingModule.html",[253,0.669,2267,2.904]],["body/modules/TransactionDetailsPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,240,1.241,241,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,348,3.467,370,4.278,1124,4.576,2044,2.945,2267,5.108]],["title/components/TransactionParticipantsPage.html",[0,0.276,242,1.211]],["body/components/TransactionParticipantsPage.html",[0,0.346,1,0.794,2,1.399,3,0.054,4,0.054,5,0.943,6,0.943,7,0.943,8,0.943,9,0.047,14,0.026,16,0.772,17,1.846,19,1.114,20,1.851,21,1.801,22,0.943,23,2.817,24,2.657,25,1.441,27,1.441,29,0.601,30,1.055,31,1.801,38,1.248,46,1.601,48,2.508,50,2.819,51,1.892,52,1.695,53,0.011,57,1.846,62,0.84,64,0.971,65,1.457,67,0.817,68,3.396,72,1.913,87,1.913,94,2.697,99,0.208,101,0.117,107,1.348,111,2.907,112,1.663,113,0.054,114,0.751,115,1.212,132,1.254,148,1.558,189,2.515,194,0.943,195,1.441,196,1.399,197,0.943,198,1.9,199,0.943,200,0.943,201,0.84,202,0.943,203,0.817,204,0.84,205,1.441,206,0.817,207,1.441,208,0.817,209,0.943,210,0.817,211,1.441,212,0.817,213,1.441,214,0.817,215,0.943,216,0.84,217,0.943,218,0.817,219,0.943,220,0.817,221,0.943,222,0.817,223,0.943,224,0.817,225,0.943,226,0.817,227,0.817,228,0.943,229,0.817,230,0.817,231,0.943,232,0.817,233,0.943,234,0.817,235,0.817,236,0.943,237,0.817,238,0.943,239,0.817,240,1.675,241,0.817,242,1.695,243,0.943,244,0.817,245,0.943,246,0.817,247,0.89,248,0.943,249,0.943,250,0.003,251,0.005,252,0.003,278,0.478,297,1.457,298,1.348,366,4.42,367,5.179,372,4.125,421,1.986,425,2.541,475,2.141,506,3.463,514,1.959,540,1.663,553,1.748,621,1.401,631,3.201,674,2.321,680,2.425,684,2.425,685,2.425,812,1.959,973,1.401,1068,2.267,1255,3.201,1857,3.201,1927,2.267,2008,2.993,2010,3.201,2011,4.626,2012,2.267,2040,2.993,2044,3.565,2049,5.178,2054,3.463,2057,3.812,2073,1.845,2074,2.267,2075,2.096,2081,2.096,2092,3.812,2094,3.812,2103,2.096,2106,2.267,2115,2.267,2118,2.495,2119,3.812,2120,2.495,2121,2.495,2122,2.495,2123,2.495,2124,2.495,2129,2.096,2130,2.267,2131,2.267,2132,3.885,2133,2.267,2134,2.267,2135,2.267,2136,2.267,2137,3.463,2138,2.267,2139,2.267,2142,2.495,2165,3.463,2221,2.495,2268,2.495,2269,5.27,2270,4.343,2271,5.27,2272,5.27,2273,5.178,2274,5.899,2275,2.843,2276,4.343,2277,4.343,2278,2.843,2279,4.343,2280,4.343,2281,4.343,2282,4.343,2283,2.843,2284,2.843,2285,4.343,2286,4.343,2287,2.843,2288,2.843,2289,2.843,2290,2.843,2291,2.843,2292,2.843,2293,5.27,2294,4.343,2295,2.843,2296,2.495,2297,2.843,2298,5.27,2299,5.27,2300,2.843,2301,2.843,2302,2.843,2303,2.843,2304,2.843,2305,2.843,2306,2.843,2307,4.343,2308,3.812]],["title/modules/TransactionParticipantsPageModule.html",[253,0.669,2309,3.107]],["body/modules/TransactionParticipantsPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,240,1.415,242,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,366,3.537,367,3.964,2044,2.728,2309,6.306,2310,5.05,2311,5.05,2312,5.05,2313,5.762,2314,5.753,2315,5.05]],["title/modules/TransactionParticipantsPageRoutingModule.html",[253,0.669,2313,2.904]],["body/modules/TransactionParticipantsPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,240,1.241,242,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,366,3.818,367,4.278,2044,2.945,2313,5.108,2315,5.45]],["title/components/TransactionStakesPage.html",[0,0.276,244,1.211]],["body/components/TransactionStakesPage.html",[0,0.373,1,0.901,2,1.539,3,0.061,4,0.061,5,1.071,6,1.071,7,1.071,8,1.071,9,0.053,14,0.028,16,0.876,17,2.199,19,1.203,20,2.037,21,1.944,22,1.071,23,2.854,24,2.693,25,1.585,27,1.585,29,0.682,30,1.161,31,1.103,38,1.372,46,1.459,48,2.354,52,1.634,53,0.011,57,1.495,60,2.449,62,0.954,64,1.068,65,1.039,67,0.927,72,1.171,87,1.171,94,2.184,99,0.21,101,0.133,111,3.098,112,1.888,113,0.061,114,0.852,115,1.376,116,1.33,148,1.262,157,1.476,170,2.354,189,2.681,194,1.071,195,1.585,196,1.539,197,1.071,198,2.026,199,1.071,200,1.071,201,0.954,202,1.071,203,0.927,204,0.954,205,1.585,206,0.927,207,1.585,208,0.927,209,1.071,210,0.927,211,1.585,212,0.927,213,1.585,214,0.927,215,1.071,216,0.954,217,1.071,218,0.927,219,1.071,220,0.927,221,1.071,222,0.927,223,1.071,224,0.927,225,1.071,226,0.927,227,0.927,228,1.071,229,0.927,230,0.927,231,1.071,232,0.927,233,1.071,234,0.927,235,0.927,236,1.071,237,0.927,238,1.071,239,0.927,240,1.696,241,0.927,242,0.927,243,1.071,244,1.806,245,1.071,246,0.927,247,1.01,248,1.071,249,1.071,250,0.004,251,0.006,252,0.004,278,0.543,297,1.655,298,1.531,372,3.693,373,4.844,400,1.802,475,2.282,501,2.573,514,2.224,553,1.985,600,4.635,680,2.668,684,1.802,753,4.948,775,4.635,973,1.59,1116,3.522,1336,2.095,1530,2.573,1583,3.293,1623,2.379,1770,3.522,1857,3.522,2007,2.379,2008,3.293,2010,3.522,2040,3.293,2044,3.334,2054,3.809,2059,4.194,2073,2.095,2074,2.573,2075,2.379,2081,2.379,2103,2.379,2106,2.573,2115,3.809,2116,2.833,2127,2.833,2129,2.379,2130,2.573,2131,2.573,2132,2.379,2133,2.573,2134,2.573,2135,2.573,2136,2.573,2137,3.809,2138,2.573,2139,2.573,2157,2.833,2167,3.809,2171,2.833,2273,5.52,2296,2.833,2308,5.52,2316,2.833,2317,5.689,2318,4.778,2319,7.029,2320,3.228,2321,4.778,2322,4.778,2323,3.228,2324,3.228,2325,3.228,2326,3.228,2327,3.228,2328,3.228,2329,3.228,2330,3.228,2331,3.228,2332,4.778,2333,3.228,2334,3.228,2335,3.228,2336,4.778,2337,3.228,2338,3.228,2339,3.228,2340,3.228,2341,4.194,2342,4.778,2343,4.778,2344,4.194]],["title/modules/TransactionStakesPageModule.html",[253,0.669,2345,3.107]],["body/modules/TransactionStakesPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,240,1.415,244,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.215,262,1.8,263,1.652,265,2.28,266,1.123,267,1.123,268,2.348,269,1.853,270,2.348,271,1.853,272,2.28,273,1.853,372,3.734,373,3.964,2044,2.728,2345,6.306,2346,5.05,2347,5.05,2348,5.05,2349,5.762,2350,5.753,2351,5.05]],["title/modules/TransactionStakesPageRoutingModule.html",[253,0.669,2349,2.904]],["body/modules/TransactionStakesPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,240,1.241,244,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.388,278,1.045,279,2,280,2.059,281,1.943,372,4.03,373,4.278,2044,2.945,2349,5.108,2351,5.45]],["title/classes/TransactionTracker.html",[14,0.025,2073,2.736]],["body/classes/TransactionTracker.html",[3,0.083,4,0.083,9,0.072,13,1.52,14,0.039,15,3.162,29,0.922,30,1.438,46,1.756,51,1.993,53,0.011,63,1.405,64,0.975,65,1.8,66,1.405,99,0.177,113,0.083,148,2.05,240,1.719,250,0.005,251,0.007,252,0.005,286,1.859,317,2.331,339,3.162,429,1.799,433,2.862,540,4.212,658,2.806,868,5.704,874,3.215,881,4.334,948,5.343,951,6.813,973,3.709,1927,4.717,1953,4.717,1987,6.102,2003,3.478,2005,3.478,2058,5.194,2073,4.674,2352,3.829,2353,5.917,2354,8.076,2355,8.076,2356,8.076,2357,7.762,2358,5.917,2359,5.917,2360,5.917,2361,5.917,2362,5.917,2363,4.362,2364,4.362,2365,4.362,2366,4.362,2367,4.362,2368,4.362,2369,4.362,2370,4.362,2371,4.362,2372,4.362,2373,4.362]],["title/components/TutorialPage.html",[0,0.276,246,1.211]],["body/components/TutorialPage.html",[0,0.358,1,0.841,2,1.461,3,0.057,4,0.057,5,0.999,6,0.999,7,0.999,8,0.999,9,0.049,13,0.773,14,0.032,16,0.818,17,1.42,19,1.154,20,1.934,21,1.865,22,0.999,23,2.834,24,2.698,25,1.505,27,1.505,53,0.011,62,0.89,64,1.014,67,0.865,99,0.135,101,0.124,113,0.057,114,1.198,148,0.795,181,2.945,189,1.284,190,3.344,194,0.999,195,1.505,196,1.461,197,0.999,198,1.957,199,0.999,200,0.999,201,0.89,202,0.999,203,0.865,204,0.89,205,1.505,206,0.865,207,1.505,208,0.865,209,0.999,210,0.865,211,1.505,212,0.865,213,1.505,214,0.865,215,0.999,216,0.89,217,0.999,218,0.865,219,0.999,220,0.865,221,0.999,222,0.865,223,0.999,224,0.865,225,0.999,226,0.865,227,0.865,228,0.999,229,0.865,230,0.865,231,0.999,232,0.865,233,0.999,234,0.865,235,0.865,236,0.999,237,0.865,238,0.999,239,0.865,240,1.215,241,0.865,242,0.865,243,0.999,244,0.865,245,0.999,246,1.745,247,2.485,248,0.999,249,0.999,250,0.004,251,0.006,252,0.004,278,0.507,326,2.79,388,3.127,457,2.533,475,2.205,499,5.394,502,3.982,508,3.982,557,2.326,569,1.955,584,1.955,589,1.852,726,2.075,904,3.344,908,3.825,909,4.844,995,2.945,1010,6.147,1011,3.617,1012,3.982,1013,6.423,1080,3.617,1081,3.617,1108,4.721,1336,4.447,1363,6.013,1677,3.982,1720,3.982,1905,5.462,2149,4.844,2165,3.617,2166,3.982,2374,2.643,2375,5.459,2376,4.537,2377,4.537,2378,4.537,2379,4.537,2380,6.076,2381,4.537,2382,4.537,2383,6.892,2384,6.076,2385,6.076,2386,4.537,2387,7.317,2388,6.85,2389,6.076,2390,7.851,2391,4.537,2392,6.076,2393,6.076,2394,6.85,2395,6.076,2396,4.537,2397,4.537,2398,4.537,2399,7.628,2400,4.537,2401,7.317,2402,5.462,2403,6.076,2404,4.537,2405,4.537,2406,4.537,2407,4.537,2408,4.537,2409,4.537,2410,4.537,2411,4.537,2412,6.076,2413,3.982,2414,4.537,2415,4.537,2416,4.537,2417,4.537,2418,4.537,2419,6.076,2420,6.076,2421,4.537,2422,4.537,2423,4.537,2424,4.537,2425,4.537,2426,4.537,2427,3.011]],["title/modules/TutorialPageModule.html",[253,0.669,2428,3.107]],["body/modules/TutorialPageModule.html",[3,0.111,4,0.111,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.227,113,0.111,246,2.407,247,1.815,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.292,266,1.129,267,1.129,268,2.36,269,1.869,270,2.36,271,1.869,272,2.292,273,1.869,2428,6.316,2429,5.092,2430,5.092,2431,5.092,2432,5.774,2433,5.801,2434,5.092]],["title/modules/TutorialPageRoutingModule.html",[253,0.669,2432,2.904]],["body/modules/TutorialPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,246,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.992,267,1.181,275,2.014,276,2.348,277,2.397,278,1.052,279,2.014,280,2.073,281,1.956,2432,5.129,2434,5.487,2435,6.251]],["title/classes/User.html",[14,0.025,51,1.082]],["body/classes/User.html",[3,0.074,4,0.074,9,0.064,13,1.856,14,0.023,29,0.823,30,1.329,46,1.842,51,1.405,53,0.011,63,1.254,64,0.87,65,1.842,66,2.837,68,4.713,71,4.034,113,0.074,116,3.679,250,0.005,251,0.007,252,0.005,286,2.331,317,2.08,423,5.761,429,2.666,433,2.924,457,4.034,528,2.682,530,4.931,1569,6.342,2436,3.416,2437,7.226,2438,7.226,2439,7.226,2440,7.226,2441,7.226,2442,7.226,2443,7.226,2444,7.226,2445,7.226,2446,3.892,2447,3.892,2448,3.892,2449,3.892,2450,3.892,2451,3.892,2452,3.892,2453,3.892,2454,3.892,2455,3.892,2456,3.892,2457,3.892,2458,3.892,2459,3.892,2460,3.892,2461,3.892]],["title/injectables/UserService.html",[105,1.484,417,1.859]],["body/injectables/UserService.html",[3,0.058,4,0.058,9,0.05,13,1.834,14,0.032,16,1.244,17,0.955,29,0.969,30,1.113,31,1.88,38,1.316,39,2.268,46,1.597,51,2.286,52,2.199,53,0.011,57,1.722,63,2.3,64,1.596,65,1.597,66,2.3,67,1.316,71,3.415,78,3.158,94,3.359,99,0.164,101,0.126,105,1.613,107,1.447,113,0.058,114,0.806,115,1.301,148,2.021,157,2.997,164,1.238,166,1.301,170,1.504,250,0.004,251,0.006,252,0.004,283,1.704,305,2.103,417,2.022,419,1.785,425,2.681,426,4.387,427,3.653,428,3.653,429,2.514,431,4.877,433,3.561,435,4.056,437,3.378,440,1.876,441,3.378,442,2.433,444,2.433,445,2.433,449,2.681,452,3.384,457,4.489,466,3.158,469,5.693,557,2.349,710,2.433,722,2.433,723,2.433,760,3.378,805,3.653,807,3.378,814,4.022,816,3.653,824,4.022,829,2.679,836,2.433,865,2.679,866,2.433,954,5.489,967,4.877,968,4.509,1192,4.832,1197,4.83,1247,2.679,1248,2.679,1249,2.679,1255,3.378,1654,2.679,1655,2.679,1661,4.022,2402,2.433,2462,2.679,2463,4.582,2464,4.582,2465,4.582,2466,3.052,2467,4.582,2468,3.052,2469,4.582,2470,3.052,2471,4.582,2472,5.502,2473,4.582,2474,3.052,2475,3.052,2476,4.582,2477,3.052,2478,3.052,2479,3.052,2480,3.052,2481,4.582,2482,3.052,2483,3.052,2484,3.052,2485,3.052,2486,3.052,2487,3.052,2488,3.052,2489,3.052,2490,3.052,2491,3.052,2492,3.052,2493,3.052,2494,3.052,2495,3.052,2496,3.052,2497,3.052,2498,3.052,2499,3.052,2500,3.052,2501,3.052]],["title/coverage.html",[2502,5.073]],["body/coverage.html",[0,0.572,1,1.09,9,0.064,10,2.877,11,2.533,12,3.426,14,0.047,17,1.221,19,0.825,51,1.002,53,0.011,65,0.848,105,1.374,108,1.508,111,1.923,170,3.989,201,1.153,203,1.121,206,1.121,208,1.121,210,1.121,212,1.121,214,1.121,216,1.153,218,1.121,220,1.121,222,1.121,224,1.121,226,1.121,227,1.121,229,1.121,232,1.121,234,1.121,235,1.121,237,1.121,239,1.121,240,1.095,241,1.121,242,1.121,244,1.121,246,1.121,250,0.005,251,0.007,252,0.005,282,3.426,308,4.369,316,3.112,318,3.426,341,2.689,345,2.689,349,2.689,364,2.533,367,2.689,370,2.689,373,2.689,385,2.689,394,2.689,402,2.689,407,2.689,417,3.469,418,2.689,420,3.426,438,2.533,448,3.426,526,3.426,535,2.689,536,3.426,551,2.533,558,4.223,562,3.426,569,5,577,2.877,578,3.426,619,2.877,620,3.426,676,2.689,748,3.426,804,3.426,867,3.426,875,3.384,876,4.369,886,2.086,918,4.369,932,2.689,993,2.689,1125,3.426,1177,3.426,1301,3.426,1349,3.426,1393,2.877,1394,3.426,1418,3.426,1448,6.028,1502,3.426,1558,3.426,1578,2.877,1579,3.426,1647,3.426,1675,3.426,1701,3.426,1728,3.426,1761,3.112,1762,3.426,1798,3.426,1849,3.426,1914,3.426,1984,3.426,2006,3.426,2044,3.257,2073,2.533,2268,3.426,2316,3.426,2352,3.426,2374,3.426,2436,3.426,2462,3.426,2502,3.426,2503,3.903,2504,3.903,2505,3.903,2506,3.903,2507,3.903,2508,5.48,2509,3.903,2510,3.903,2511,5.48,2512,5.48,2513,3.903,2514,3.903,2515,3.903,2516,3.903,2517,3.903,2518,3.903,2519,3.903,2520,3.903,2521,3.903,2522,5.48,2523,3.903,2524,3.903,2525,3.903,2526,3.903,2527,3.903,2528,3.903,2529,3.903,2530,3.903,2531,3.903,2532,3.903,2533,3.903,2534,3.903,2535,3.903,2536,3.903,2537,3.903,2538,5.48,2539,3.903,2540,3.903,2541,3.903,2542,3.903,2543,3.903,2544,5.48,2545,3.903,2546,5.48,2547,5.48,2548,3.903,2549,3.903,2550,3.903,2551,3.903,2552,3.903,2553,3.903,2554,3.903,2555,3.903,2556,3.426,2557,3.903,2558,3.903,2559,3.903,2560,3.903,2561,3.903,2562,3.903,2563,3.903,2564,3.426,2565,6.867,2566,3.426,2567,4.81,2568,3.426,2569,3.426,2570,3.903,2571,3.903]],["title/dependencies.html",[256,1.5,2572,3.506]],["body/dependencies.html",[53,0.011,101,0.229,104,1.174,250,0.007,251,0.008,252,0.007,256,1.641,269,1.789,271,1.789,278,0.935,297,3.55,298,3.285,303,4.876,462,3.828,636,4.64,1148,5.522,1449,6.624,1450,4.095,1461,4.095,2573,8.289,2574,5.555,2575,5.555,2576,5.555,2577,5.555,2578,7.546,2579,5.555,2580,5.555,2581,5.555,2582,5.555,2583,5.555,2584,5.555,2585,5.555,2586,6.926,2587,5.555,2588,5.555,2589,5.555,2590,5.555,2591,5.555,2592,5.555,2593,5.555,2594,5.555,2595,7.546,2596,5.555,2597,5.555,2598,5.555,2599,5.555,2600,5.555,2601,5.555,2602,5.555,2603,5.555,2604,5.555,2605,5.555,2606,6.926,2607,5.555,2608,5.555,2609,5.555,2610,5.555,2611,5.555]],["title/index.html",[29,0.741,2612,3.506,2613,3.506]],["body/index.html",[19,1.51,24,2.235,53,0.009,174,5.694,179,5.694,181,3.79,183,4.304,250,0.007,251,0.009,252,0.007,499,4.304,501,4.655,908,3.26,909,5.694,1011,4.655,1014,5.125,1027,4.655,1108,4.023,1169,6.269,1336,5.009,1688,6.269,1905,5.694,1925,5.694,2149,5.694,2167,4.655,2341,6.269,2344,5.125,2383,5.125,2402,6.152,2413,5.125,2614,5.838,2615,5.838,2616,5.838,2617,5.838,2618,7.142,2619,5.838,2620,5.838,2621,5.838,2622,5.838,2623,5.838,2624,5.838,2625,5.838,2626,5.838,2627,7.716,2628,5.838,2629,5.838,2630,5.838,2631,5.838,2632,5.838,2633,5.838,2634,5.838,2635,5.838,2636,5.838,2637,5.838,2638,5.838,2639,5.838,2640,5.838,2641,5.838,2642,7.142,2643,5.838,2644,5.838]],["title/modules.html",[255,0.837]],["body/modules.html",[53,0.007,250,0.005,251,0.007,252,0.005,254,3.262,255,0.641,260,3.05,288,3.262,293,3.05,298,4.181,612,3.262,616,3.05,741,3.262,745,3.05,796,3.262,800,3.05,911,3.262,915,3.05,1118,3.262,1122,3.05,1170,3.262,1174,3.05,1290,3.262,1294,3.05,1295,3.05,1341,3.262,1345,3.05,1385,3.262,1389,3.05,1411,3.262,1415,3.05,1494,3.262,1498,3.05,1551,3.262,1555,3.05,1570,3.262,1574,3.05,1640,3.262,1644,3.05,1693,3.262,1697,3.05,1721,3.262,1725,3.05,1753,3.262,1757,3.05,1906,3.262,1910,3.05,2176,3.05,2263,3.262,2267,3.05,2309,3.262,2313,3.05,2345,3.262,2349,3.05,2428,3.262,2432,3.05,2645,8.815,2646,8.815,2647,9.001,2648,8.815,2649,8.815]],["title/overview.html",[2208,4.608]],["body/overview.html",[1,1.584,2,1.035,53,0.011,201,2.146,203,1.63,206,1.63,208,1.63,210,1.63,212,1.63,214,1.63,216,1.676,218,1.63,220,1.63,222,1.63,224,1.63,226,1.63,227,1.63,229,1.63,232,1.63,234,1.63,235,1.63,237,1.63,239,2.086,241,1.63,242,1.63,244,1.63,246,1.63,250,0.004,251,0.006,252,0.004,254,5.173,255,0.465,256,1.407,257,2.82,258,2.82,259,2.82,260,3.91,261,1.49,262,1.005,263,0.923,276,0.949,288,5.354,289,2.82,290,2.82,291,2.82,292,2.82,293,3.91,317,1.717,419,1.879,558,1.975,612,5.173,613,2.82,614,2.82,615,2.82,616,3.91,741,5.173,742,2.82,743,2.82,744,2.82,745,3.91,796,5.173,797,2.82,798,2.82,799,2.82,800,3.91,911,5.173,912,2.82,913,2.82,914,2.82,915,3.91,1118,5.173,1119,2.82,1120,2.82,1121,2.82,1122,3.91,1170,5.173,1171,2.82,1172,2.82,1173,2.82,1174,3.91,1290,5.498,1291,2.82,1292,2.82,1293,2.82,1294,3.91,1295,5.14,1341,5.173,1342,2.82,1343,2.82,1344,2.82,1345,3.91,1385,5.173,1386,2.82,1387,2.82,1388,2.82,1389,3.91,1411,5.173,1412,2.82,1413,2.82,1414,2.82,1415,3.91,1494,5.173,1495,2.82,1496,2.82,1497,2.82,1498,3.91,1551,5.173,1552,2.82,1553,2.82,1554,2.82,1555,3.91,1570,5.173,1571,2.82,1572,2.82,1573,2.82,1574,3.91,1640,5.173,1641,2.82,1642,2.82,1643,2.82,1644,3.91,1693,5.173,1694,2.82,1695,2.82,1696,2.82,1697,3.91,1721,5.173,1722,2.82,1723,2.82,1724,2.82,1725,3.91,1753,5.173,1754,2.82,1755,2.82,1756,2.82,1757,3.91,1906,5.173,1907,2.82,1908,2.82,1909,2.82,1910,3.91,2172,2.82,2173,2.82,2174,2.82,2175,2.82,2176,3.91,2208,2.561,2263,5.173,2264,2.82,2265,2.82,2266,2.82,2267,3.91,2309,5.173,2310,2.82,2311,2.82,2312,2.82,2313,3.91,2345,5.173,2346,2.82,2347,2.82,2348,2.82,2349,3.91,2428,5.173,2429,2.82,2430,2.82,2431,2.82,2432,3.91,2556,2.82,2650,3.212,2651,3.212,2652,3.212]],["title/routes.html",[276,1.708]],["body/routes.html",[53,0.01,250,0.009,251,0.01,252,0.009,276,2.053]],["title/miscellaneous/variables.html",[653,2.834,2653,3.077]],["body/miscellaneous/variables.html",[19,1.634,29,1.24,53,0.011,65,1.75,72,2.806,87,2.806,94,2.681,132,3.159,250,0.007,251,0.009,252,0.007,308,6.419,653,3.274,1051,4.675,1192,5.278,1925,6.163,2012,4.675,2564,5.147,2566,5.147,2567,5.147,2568,6.285,2569,6.285,2653,5.147,2654,7.161,2655,5.863,2656,5.863,2657,5.863,2658,5.863,2659,7.161,2660,5.863,2661,5.863,2662,5.863,2663,5.863,2664,5.863,2665,5.863,2666,5.863,2667,5.863,2668,5.863,2669,5.863,2670,5.863,2671,5.863,2672,5.863,2673,5.863,2674,5.863,2675,5.863,2676,5.863]]],"invertedIndex":[["",{"_index":53,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":170,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/PasswordPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.11.4",{"_index":2611,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2565,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2555,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2528,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2507,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2506,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2522,"title":{},"body":{"coverage.html":{}}}],["006600",{"_index":793,"title":{},"body":{"components/FriendsPage.html":{}}}],["0d0d0d",{"_index":604,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{}}}],["1",{"_index":557,"title":{"classes/Transaction-1.html":{}},"body":{"injectables/BadgeService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["1.0.1",{"_index":2603,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":2578,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2583,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2598,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2563,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2523,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":2525,"title":{},"body":{"coverage.html":{}}}],["1/23",{"_index":2524,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2527,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":562,"title":{},"body":{"injectables/BadgeService.html":{},"coverage.html":{}}}],["100",{"_index":569,"title":{},"body":{"injectables/BadgeService.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"injectables/StatisticsService.html":{},"components/TutorialPage.html":{},"coverage.html":{}}}],["1000",{"_index":573,"title":{},"body":{"injectables/BadgeService.html":{}}}],["1000).todatestring",{"_index":2110,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["10000",{"_index":1323,"title":{},"body":{"components/InvitePage.html":{}}}],["100px",{"_index":725,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["104",{"_index":1090,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["10px",{"_index":606,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["11",{"_index":2526,"title":{},"body":{"coverage.html":{}}}],["11/27",{"_index":2515,"title":{},"body":{"coverage.html":{}}}],["110px",{"_index":729,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["12.0.1",{"_index":2573,"title":{},"body":{"dependencies.html":{}}}],["13/14",{"_index":2512,"title":{},"body":{"coverage.html":{}}}],["136",{"_index":1088,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["13px",{"_index":1381,"title":{},"body":{"components/LoginPage.html":{}}}],["15/30",{"_index":2521,"title":{},"body":{"coverage.html":{}}}],["160px",{"_index":1490,"title":{},"body":{"components/OptionsPage.html":{}}}],["18",{"_index":2529,"title":{},"body":{"coverage.html":{}}}],["1:429680376038:web:1ac23e75a712fea6756327",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":603,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/RegisterPage.html":{}}}],["2",{"_index":904,"title":{},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{},"components/TutorialPage.html":{}}}],["2.0.0",{"_index":2609,"title":{},"body":{"dependencies.html":{}}}],["2.3.6",{"_index":2601,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":2530,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":2508,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2548,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2562,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":599,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["20px",{"_index":610,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["237",{"_index":1087,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["24",{"_index":2109,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["25",{"_index":2556,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["27/31",{"_index":2552,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1638,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["3",{"_index":995,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TutorialPage.html":{}}}],["3.0.0",{"_index":2580,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":2594,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":2560,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2519,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2518,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2559,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":732,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["30px",{"_index":596,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/PasswordPage.html":{}}}],["33",{"_index":2561,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2544,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1675,"title":{},"body":{"components/PrivacyPage.html":{},"coverage.html":{}}}],["4.20.0",{"_index":2586,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":2545,"title":{},"body":{"coverage.html":{}}}],["4/16",{"_index":2557,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2539,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2537,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2534,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2514,"title":{},"body":{"coverage.html":{}}}],["41c23",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41c23.appspot.com",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41c23.firebaseapp.com",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":2517,"title":{},"body":{"coverage.html":{}}}],["429680376038",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":2533,"title":{},"body":{"coverage.html":{}}}],["4c8dff",{"_index":1380,"title":{},"body":{"components/LoginPage.html":{}}}],["5",{"_index":1662,"title":{},"body":{"components/PrivacyPage.html":{}}}],["5.0.2",{"_index":2596,"title":{},"body":{"dependencies.html":{}}}],["5.33.1",{"_index":2591,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":2592,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2513,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2532,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":558,"title":{},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"overview.html":{}}}],["50px",{"_index":737,"title":{},"body":{"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["55",{"_index":2531,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":1639,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["6",{"_index":993,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["6.1.5",{"_index":2574,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":2606,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2516,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":2549,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2547,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2541,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":608,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{}}}],["66",{"_index":2538,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2108,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["7.0",{"_index":2604,"title":{},"body":{"dependencies.html":{}}}],["7/19",{"_index":2558,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2510,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2543,"title":{},"body":{"coverage.html":{}}}],["74",{"_index":2652,"title":{},"body":{"overview.html":{}}}],["75",{"_index":2540,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2542,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2650,"title":{},"body":{"overview.html":{}}}],["8.0",{"_index":2605,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2509,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2554,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":2535,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2546,"title":{},"body":{"coverage.html":{}}}],["86400000",{"_index":1848,"title":{},"body":{"classes/Statistic.html":{},"injectables/StatisticsService.html":{}}}],["87",{"_index":2551,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2553,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2651,"title":{},"body":{"overview.html":{}}}],["9/11",{"_index":2536,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1493,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["92",{"_index":2511,"title":{},"body":{"coverage.html":{}}}],["abbrechen",{"_index":192,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{}}}],["absolute",{"_index":1384,"title":{},"body":{"components/LoginPage.html":{}}}],["accepted",{"_index":2008,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["acceptedentry",{"_index":2121,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["accessors",{"_index":45,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["account",{"_index":1677,"title":{},"body":{"components/PrivacyPage.html":{},"components/TutorialPage.html":{}}}],["achievements",{"_index":432,"title":{},"body":{"injectables/ArwardService.html":{}}}],["action",{"_index":762,"title":{},"body":{"components/FriendsPage.html":{}}}],["activatedroute",{"_index":674,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["actual",{"_index":842,"title":{},"body":{"injectables/FriendsService.html":{}}}],["actual_component",{"_index":249,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["added",{"_index":544,"title":{},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/PasswordPage.html":{}}}],["addfriend",{"_index":626,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{}}}],["addfriend(email",{"_index":808,"title":{},"body":{"injectables/FriendsService.html":{}}}],["addfriendinput",{"_index":751,"title":{},"body":{"components/FriendsPage.html":{}}}],["addfriendsoutput",{"_index":752,"title":{},"body":{"components/FriendsPage.html":{}}}],["addmembers",{"_index":879,"title":{},"body":{"components/GroupCreatePage.html":{},"injectables/GroupService.html":{},"components/MemberViewPage.html":{}}}],["addmembers(group",{"_index":1185,"title":{},"body":{"injectables/GroupService.html":{}}}],["addmemberspage",{"_index":1,"title":{"components/AddMembersPage.html":{}},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["addmemberspagemodule",{"_index":254,"title":{"modules/AddMembersPageModule.html":{}},"body":{"modules/AddMembersPageModule.html":{},"modules.html":{},"overview.html":{}}}],["addmemberspageroutingmodule",{"_index":260,"title":{"modules/AddMembersPageRoutingModule.html":{}},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adds",{"_index":49,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/BadgeService.html":{},"components/GroupCreatePage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{}}}],["addtogroup",{"_index":1307,"title":{},"body":{"components/InvitePage.html":{}}}],["addusertogroup",{"_index":1179,"title":{},"body":{"injectables/GroupService.html":{}}}],["addusertogroup(group",{"_index":1187,"title":{},"body":{"injectables/GroupService.html":{}}}],["admin",{"_index":1410,"title":{},"body":{"components/MemberViewPage.html":{}}}],["adresse",{"_index":2400,"title":{},"body":{"components/TutorialPage.html":{}}}],["af",{"_index":687,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["afs",{"_index":441,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["afs.collection('achievement",{"_index":443,"title":{},"body":{"injectables/ArwardService.html":{}}}],["afs.collection('group",{"_index":1217,"title":{},"body":{"injectables/GroupService.html":{}}}],["afs.collection('user",{"_index":829,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["afterwards",{"_index":1446,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{}}}],["afuser",{"_index":1885,"title":{},"body":{"components/StatisticsPage.html":{}}}],["again",{"_index":1430,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["aizasyauoe",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aktuell",{"_index":1110,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["alert",{"_index":637,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alert(\"bitte",{"_index":1008,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["alert(\"gruppe",{"_index":898,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["alert(\"gruppenname",{"_index":903,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["alert(\"mind",{"_index":1408,"title":{},"body":{"components/MemberViewPage.html":{}}}],["alert(msg",{"_index":187,"title":{},"body":{"components/AddMembersPage.html":{}}}],["alert.buttons",{"_index":717,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alert.header",{"_index":715,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alert.message",{"_index":716,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["alert.ondiddismiss",{"_index":721,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alert.present",{"_index":720,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alertcontroller",{"_index":1001,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["align",{"_index":591,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{}}}],["alle",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["allen",{"_index":2633,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":537,"title":{},"body":{"injectables/BadgeService.html":{}}}],["allowediting",{"_index":1474,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["allselected",{"_index":2271,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["alltimecost",{"_index":1800,"title":{},"body":{"classes/Statistic.html":{}}}],["alltimeincome",{"_index":1801,"title":{},"body":{"classes/Statistic.html":{}}}],["alltimetotal",{"_index":1802,"title":{},"body":{"classes/Statistic.html":{}}}],["alltransactions",{"_index":922,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["already",{"_index":61,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{}}}],["alreadyfriends",{"_index":841,"title":{},"body":{"injectables/FriendsService.html":{}}}],["als",{"_index":2339,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["altes",{"_index":1533,"title":{},"body":{"components/PasswordPage.html":{}}}],["always",{"_index":1283,"title":{},"body":{"injectables/GroupService.html":{}}}],["ammount",{"_index":1977,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["amount",{"_index":1583,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionStakesPage.html":{}}}],["android",{"_index":2619,"title":{},"body":{"index.html":{}}}],["angelegte",{"_index":1904,"title":{},"body":{"components/StatisticsPage.html":{}}}],["angezeigt",{"_index":2635,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1631,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["angular/common",{"_index":269,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":101,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["angular/fire/firestore",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":271,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"dependencies.html":{}}}],["angular/router",{"_index":278,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageRoutingModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"components/TutorialPage.html":{},"modules/TutorialPageRoutingModule.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["angularfireauthmodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebaseconfig",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":437,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["angularfirestorecollection",{"_index":435,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["angularfirestoremodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["anlegen",{"_index":1109,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["anmelden",{"_index":1378,"title":{},"body":{"components/LoginPage.html":{}}}],["another",{"_index":1593,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{}}}],["anteil",{"_index":2258,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["anywhere",{"_index":1773,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["apikey",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["app.component",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":201,"title":{"components/AppComponent.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applikationen",{"_index":2616,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":288,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":316,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":293,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archievments",{"_index":656,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["archiv",{"_index":1111,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["around",{"_index":1670,"title":{},"body":{"components/PrivacyPage.html":{}}}],["array",{"_index":89,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{}}}],["arrays",{"_index":2277,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["arwardservice",{"_index":418,"title":{"injectables/ArwardService.html":{}},"body":{"injectables/ArwardService.html":{},"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["asked",{"_index":1507,"title":{},"body":{"components/PasswordPage.html":{}}}],["asks",{"_index":1429,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["async",{"_index":39,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"injectables/UserService.html":{}}}],["attach",{"_index":2063,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["attachment",{"_index":2204,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["auch",{"_index":2422,"title":{},"body":{"components/TutorialPage.html":{}}}],["auf",{"_index":2390,"title":{},"body":{"components/TutorialPage.html":{}}}],["aufgeteilter",{"_index":2337,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["aufteilen",{"_index":2167,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{},"index.html":{}}}],["aufzuteilen",{"_index":2386,"title":{},"body":{"components/TutorialPage.html":{}}}],["ausfüllen",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"components/TutorialPage.html":{}}}],["ausgabe",{"_index":2155,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["ausgaben",{"_index":1081,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"components/TutorialPage.html":{}}}],["ausgewählt",{"_index":2343,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["auswahl",{"_index":173,"title":{},"body":{"components/AddMembersPage.html":{}}}],["auswählen",{"_index":2165,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TutorialPage.html":{}}}],["auszeichnungen",{"_index":1692,"title":{},"body":{"components/PrivacyPage.html":{}}}],["auth",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"components/PrivacyPage.html":{}}}],["auth.service",{"_index":828,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{}}}],["auth/argument",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/email",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/invalid",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/user",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/weak",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/wrong",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":108,"title":{"injectables/AuthService.html":{}},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/PasswordPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"coverage.html":{}}}],["authservice.currentuser",{"_index":2104,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["auto",{"_index":611,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["available",{"_index":2649,"title":{},"body":{"modules.html":{}}}],["await",{"_index":166,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"injectables/UserService.html":{}}}],["award",{"_index":438,"title":{"classes/Award.html":{}},"body":{"injectables/ArwardService.html":{},"classes/Award.html":{},"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["awards",{"_index":423,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"classes/User.html":{}}}],["awardservice",{"_index":686,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["awardspublic",{"_index":2437,"title":{},"body":{"classes/User.html":{}}}],["awardspublicfriends",{"_index":2438,"title":{},"body":{"classes/User.html":{}}}],["back",{"_index":962,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["backbtn",{"_index":1423,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["background",{"_index":1750,"title":{},"body":{"components/RegisterPage.html":{}}}],["backgroundcolor",{"_index":1085,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["badge",{"_index":643,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badgedescription",{"_index":627,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badgedescription(badgename",{"_index":632,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badgename",{"_index":645,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badges",{"_index":624,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badgeservice",{"_index":535,"title":{"injectables/BadgeService.html":{}},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["bar",{"_index":74,"title":{},"body":{"components/AddMembersPage.html":{},"components/PaymentPage.html":{}}}],["base",{"_index":659,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["base64",{"_index":1445,"title":{},"body":{"components/OptionsPage.html":{}}}],["beenden",{"_index":2243,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["beendet",{"_index":2238,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["befreundet",{"_index":860,"title":{},"body":{"injectables/FriendsService.html":{}}}],["beige",{"_index":1751,"title":{},"body":{"components/RegisterPage.html":{}}}],["beigetretten",{"_index":1338,"title":{},"body":{"components/InvitePage.html":{}}}],["beitreten",{"_index":1340,"title":{},"body":{"components/InvitePage.html":{}}}],["beleg",{"_index":2168,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["belieben",{"_index":2416,"title":{},"body":{"components/TutorialPage.html":{}}}],["benutzername",{"_index":1748,"title":{},"body":{"components/RegisterPage.html":{}}}],["ber",{"_index":2640,"title":{},"body":{"index.html":{}}}],["berein",{"_index":1541,"title":{},"body":{"components/PasswordPage.html":{}}}],["bereits",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FriendsService.html":{},"components/InvitePage.html":{}}}],["berischt",{"_index":2639,"title":{},"body":{"index.html":{}}}],["berspringen",{"_index":2387,"title":{},"body":{"components/TutorialPage.html":{}}}],["beschreibung",{"_index":836,"title":{},"body":{"injectables/FriendsService.html":{},"components/PrivacyPage.html":{},"injectables/UserService.html":{}}}],["bestehen",{"_index":1038,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["bestätigen",{"_index":193,"title":{},"body":{"components/AddMembersPage.html":{},"components/PaymentReminderPage.html":{}}}],["bestätigt",{"_index":176,"title":{},"body":{"components/AddMembersPage.html":{}}}],["betrag",{"_index":1623,"title":{},"body":{"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["between",{"_index":1769,"title":{},"body":{"classes/SimpleTransaction.html":{},"injectables/StatisticsService.html":{}}}],["bezahlen",{"_index":2261,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["bill",{"_index":2031,"title":{},"body":{"classes/Transaction-1.html":{}}}],["bist",{"_index":1022,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["bitte",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionCreatePage.html":{}}}],["black",{"_index":1492,"title":{},"body":{"components/OptionsPage.html":{}}}],["block",{"_index":1489,"title":{},"body":{"components/OptionsPage.html":{}}}],["bodenleiste",{"_index":2408,"title":{},"body":{"components/TutorialPage.html":{}}}],["bold",{"_index":736,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["boolean",{"_index":68,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":601,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["bottom",{"_index":1382,"title":{},"body":{"components/LoginPage.html":{}}}],["break",{"_index":133,"title":{},"body":{"components/AddMembersPage.html":{}}}],["browse",{"_index":2647,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":324,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.mit",{"_index":2621,"title":{},"body":{"index.html":{}}}],["browsermodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["bugs",{"_index":1668,"title":{},"body":{"components/PrivacyPage.html":{}}}],["button",{"_index":641,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["buttons",{"_index":1030,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/RegisterPage.html":{}}}],["calculate",{"_index":1857,"title":{},"body":{"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["calculated",{"_index":657,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["calculates",{"_index":1936,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["calculatestakes",{"_index":2049,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["calculating",{"_index":1916,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["calculation",{"_index":2089,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["calling",{"_index":1511,"title":{},"body":{"components/PasswordPage.html":{}}}],["calls",{"_index":758,"title":{},"body":{"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/StatisticsPage.html":{}}}],["came",{"_index":2097,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["camera",{"_index":1450,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"dependencies.html":{}}}],["camera.getphoto",{"_index":1472,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["cameraresulttype",{"_index":1460,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["cameraresulttype.base64",{"_index":1476,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["cancel",{"_index":1032,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{}}}],["cancelsearch",{"_index":40,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["capacitor/android",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["capacitor/camera",{"_index":1461,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"dependencies.html":{}}}],["capacitor/core",{"_index":2579,"title":{},"body":{"dependencies.html":{}}}],["capacitor/filesystem",{"_index":2581,"title":{},"body":{"dependencies.html":{}}}],["capacitor/share",{"_index":2582,"title":{},"body":{"dependencies.html":{}}}],["capacitor/storage",{"_index":2584,"title":{},"body":{"dependencies.html":{}}}],["capicitor",{"_index":1451,"title":{},"body":{"components/OptionsPage.html":{}}}],["case",{"_index":1284,"title":{},"body":{"injectables/GroupService.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{}}}],["cases",{"_index":1519,"title":{},"body":{"components/PasswordPage.html":{}}}],["cash",{"_index":2439,"title":{},"body":{"classes/User.html":{}}}],["catch((error",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["cause",{"_index":1666,"title":{},"body":{"components/PrivacyPage.html":{}}}],["center",{"_index":592,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{}}}],["certain",{"_index":1858,"title":{},"body":{"components/StatisticsPage.html":{}}}],["change",{"_index":204,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["changeawardspublicfriends",{"_index":1650,"title":{},"body":{"components/PrivacyPage.html":{}}}],["changed",{"_index":952,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["changeinputtype",{"_index":1354,"title":{},"body":{"components/LoginPage.html":{}}}],["changepassword",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(email",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepasswordpage",{"_index":203,"title":{"components/ChangePasswordPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordpagemodule",{"_index":612,"title":{"modules/ChangePasswordPageModule.html":{}},"body":{"modules/ChangePasswordPageModule.html":{},"modules.html":{},"overview.html":{}}}],["changepasswordpageroutingmodule",{"_index":616,"title":{"modules/ChangePasswordPageRoutingModule.html":{}},"body":{"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["changes",{"_index":883,"title":{},"body":{"components/GroupCreatePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["changestats",{"_index":1854,"title":{},"body":{"components/StatisticsPage.html":{}}}],["changestats(days",{"_index":1855,"title":{},"body":{"components/StatisticsPage.html":{}}}],["changing",{"_index":1191,"title":{},"body":{"injectables/GroupService.html":{}}}],["chart",{"_index":943,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["chart(this.piechart.nativeelement",{"_index":1078,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["chart.js",{"_index":2593,"title":{},"body":{"dependencies.html":{}}}],["chart.js/auto",{"_index":1004,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["check",{"_index":662,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{}}}],["checks",{"_index":60,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["checkselectedfriendscontainfriend",{"_index":41,"title":{},"body":{"components/AddMembersPage.html":{}}}],["checkselectedfriendscontainfriend(friend",{"_index":58,"title":{},"body":{"components/AddMembersPage.html":{}}}],["choose",{"_index":2285,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["chooser",{"_index":2588,"title":{},"body":{"dependencies.html":{}}}],["chose",{"_index":2292,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["class",{"_index":14,"title":{"classes/AppPage.html":{},"classes/Award.html":{},"classes/Group.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{}},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":317,"title":{},"body":{"classes/AppPage.html":{},"classes/Award.html":{},"classes/Group.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"overview.html":{}}}],["click",{"_index":642,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["clicked",{"_index":769,"title":{},"body":{"components/FriendsPage.html":{}}}],["clicking",{"_index":669,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["close",{"_index":640,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["cluster_addmemberspagemodule",{"_index":257,"title":{},"body":{"modules/AddMembersPageModule.html":{},"overview.html":{}}}],["cluster_addmemberspagemodule_declarations",{"_index":258,"title":{},"body":{"modules/AddMembersPageModule.html":{},"overview.html":{}}}],["cluster_addmemberspagemodule_imports",{"_index":259,"title":{},"body":{"modules/AddMembersPageModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_changepasswordpagemodule",{"_index":613,"title":{},"body":{"modules/ChangePasswordPageModule.html":{},"overview.html":{}}}],["cluster_changepasswordpagemodule_declarations",{"_index":614,"title":{},"body":{"modules/ChangePasswordPageModule.html":{},"overview.html":{}}}],["cluster_changepasswordpagemodule_imports",{"_index":615,"title":{},"body":{"modules/ChangePasswordPageModule.html":{},"overview.html":{}}}],["cluster_friendprofilepagemodule",{"_index":742,"title":{},"body":{"modules/FriendProfilePageModule.html":{},"overview.html":{}}}],["cluster_friendprofilepagemodule_declarations",{"_index":743,"title":{},"body":{"modules/FriendProfilePageModule.html":{},"overview.html":{}}}],["cluster_friendprofilepagemodule_imports",{"_index":744,"title":{},"body":{"modules/FriendProfilePageModule.html":{},"overview.html":{}}}],["cluster_friendspagemodule",{"_index":797,"title":{},"body":{"modules/FriendsPageModule.html":{},"overview.html":{}}}],["cluster_friendspagemodule_declarations",{"_index":798,"title":{},"body":{"modules/FriendsPageModule.html":{},"overview.html":{}}}],["cluster_friendspagemodule_imports",{"_index":799,"title":{},"body":{"modules/FriendsPageModule.html":{},"overview.html":{}}}],["cluster_groupcreatepagemodule",{"_index":912,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"overview.html":{}}}],["cluster_groupcreatepagemodule_declarations",{"_index":913,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"overview.html":{}}}],["cluster_groupcreatepagemodule_imports",{"_index":914,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"overview.html":{}}}],["cluster_groupdetailspagemodule",{"_index":1119,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"overview.html":{}}}],["cluster_groupdetailspagemodule_declarations",{"_index":1120,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"overview.html":{}}}],["cluster_groupdetailspagemodule_imports",{"_index":1121,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"overview.html":{}}}],["cluster_grouplistpagemodule",{"_index":1171,"title":{},"body":{"modules/GroupListPageModule.html":{},"overview.html":{}}}],["cluster_grouplistpagemodule_declarations",{"_index":1172,"title":{},"body":{"modules/GroupListPageModule.html":{},"overview.html":{}}}],["cluster_grouplistpagemodule_imports",{"_index":1173,"title":{},"body":{"modules/GroupListPageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":1291,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1293,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":1292,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_invitepagemodule",{"_index":1342,"title":{},"body":{"modules/InvitePageModule.html":{},"overview.html":{}}}],["cluster_invitepagemodule_declarations",{"_index":1344,"title":{},"body":{"modules/InvitePageModule.html":{},"overview.html":{}}}],["cluster_invitepagemodule_imports",{"_index":1343,"title":{},"body":{"modules/InvitePageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":1386,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1387,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_imports",{"_index":1388,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_memberviewpagemodule",{"_index":1412,"title":{},"body":{"modules/MemberViewPageModule.html":{},"overview.html":{}}}],["cluster_memberviewpagemodule_declarations",{"_index":1413,"title":{},"body":{"modules/MemberViewPageModule.html":{},"overview.html":{}}}],["cluster_memberviewpagemodule_imports",{"_index":1414,"title":{},"body":{"modules/MemberViewPageModule.html":{},"overview.html":{}}}],["cluster_optionspagemodule",{"_index":1495,"title":{},"body":{"modules/OptionsPageModule.html":{},"overview.html":{}}}],["cluster_optionspagemodule_declarations",{"_index":1497,"title":{},"body":{"modules/OptionsPageModule.html":{},"overview.html":{}}}],["cluster_optionspagemodule_imports",{"_index":1496,"title":{},"body":{"modules/OptionsPageModule.html":{},"overview.html":{}}}],["cluster_passwordpagemodule",{"_index":1552,"title":{},"body":{"modules/PasswordPageModule.html":{},"overview.html":{}}}],["cluster_passwordpagemodule_declarations",{"_index":1553,"title":{},"body":{"modules/PasswordPageModule.html":{},"overview.html":{}}}],["cluster_passwordpagemodule_imports",{"_index":1554,"title":{},"body":{"modules/PasswordPageModule.html":{},"overview.html":{}}}],["cluster_paymentpagemodule",{"_index":1571,"title":{},"body":{"modules/PaymentPageModule.html":{},"overview.html":{}}}],["cluster_paymentpagemodule_declarations",{"_index":1572,"title":{},"body":{"modules/PaymentPageModule.html":{},"overview.html":{}}}],["cluster_paymentpagemodule_imports",{"_index":1573,"title":{},"body":{"modules/PaymentPageModule.html":{},"overview.html":{}}}],["cluster_paymentreminderpagemodule",{"_index":1641,"title":{},"body":{"modules/PaymentReminderPageModule.html":{},"overview.html":{}}}],["cluster_paymentreminderpagemodule_declarations",{"_index":1643,"title":{},"body":{"modules/PaymentReminderPageModule.html":{},"overview.html":{}}}],["cluster_paymentreminderpagemodule_imports",{"_index":1642,"title":{},"body":{"modules/PaymentReminderPageModule.html":{},"overview.html":{}}}],["cluster_privacypagemodule",{"_index":1694,"title":{},"body":{"modules/PrivacyPageModule.html":{},"overview.html":{}}}],["cluster_privacypagemodule_declarations",{"_index":1695,"title":{},"body":{"modules/PrivacyPageModule.html":{},"overview.html":{}}}],["cluster_privacypagemodule_imports",{"_index":1696,"title":{},"body":{"modules/PrivacyPageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule",{"_index":1722,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":1724,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_imports",{"_index":1723,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule",{"_index":1754,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":1755,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_imports",{"_index":1756,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule",{"_index":1907,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule_declarations",{"_index":1909,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule_imports",{"_index":1908,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_transactioncreatepagemodule",{"_index":2172,"title":{},"body":{"modules/TransactionCreatePageModule.html":{},"overview.html":{}}}],["cluster_transactioncreatepagemodule_declarations",{"_index":2175,"title":{},"body":{"modules/TransactionCreatePageModule.html":{},"overview.html":{}}}],["cluster_transactioncreatepagemodule_exports",{"_index":2174,"title":{},"body":{"modules/TransactionCreatePageModule.html":{},"overview.html":{}}}],["cluster_transactioncreatepagemodule_imports",{"_index":2173,"title":{},"body":{"modules/TransactionCreatePageModule.html":{},"overview.html":{}}}],["cluster_transactiondetailspagemodule",{"_index":2264,"title":{},"body":{"modules/TransactionDetailsPageModule.html":{},"overview.html":{}}}],["cluster_transactiondetailspagemodule_declarations",{"_index":2266,"title":{},"body":{"modules/TransactionDetailsPageModule.html":{},"overview.html":{}}}],["cluster_transactiondetailspagemodule_imports",{"_index":2265,"title":{},"body":{"modules/TransactionDetailsPageModule.html":{},"overview.html":{}}}],["cluster_transactionparticipantspagemodule",{"_index":2310,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{},"overview.html":{}}}],["cluster_transactionparticipantspagemodule_declarations",{"_index":2311,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{},"overview.html":{}}}],["cluster_transactionparticipantspagemodule_imports",{"_index":2312,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{},"overview.html":{}}}],["cluster_transactionstakespagemodule",{"_index":2346,"title":{},"body":{"modules/TransactionStakesPageModule.html":{},"overview.html":{}}}],["cluster_transactionstakespagemodule_declarations",{"_index":2347,"title":{},"body":{"modules/TransactionStakesPageModule.html":{},"overview.html":{}}}],["cluster_transactionstakespagemodule_imports",{"_index":2348,"title":{},"body":{"modules/TransactionStakesPageModule.html":{},"overview.html":{}}}],["cluster_tutorialpagemodule",{"_index":2429,"title":{},"body":{"modules/TutorialPageModule.html":{},"overview.html":{}}}],["cluster_tutorialpagemodule_declarations",{"_index":2430,"title":{},"body":{"modules/TutorialPageModule.html":{},"overview.html":{}}}],["cluster_tutorialpagemodule_imports",{"_index":2431,"title":{},"body":{"modules/TutorialPageModule.html":{},"overview.html":{}}}],["collection",{"_index":1661,"title":{},"body":{"components/PrivacyPage.html":{},"injectables/UserService.html":{}}}],["color",{"_index":791,"title":{},"body":{"components/FriendsPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{}}}],["comes",{"_index":1454,"title":{},"body":{"components/OptionsPage.html":{}}}],["commonmodule",{"_index":268,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["compat",{"_index":2607,"title":{},"body":{"dependencies.html":{}}}],["complete",{"_index":2279,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["component",{"_index":0,"title":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageRoutingModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"components/TutorialPage.html":{},"modules/TutorialPageRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":199,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["componentprops",{"_index":1271,"title":{},"body":{"injectables/GroupService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"overview.html":{}}}],["confirm('wollen",{"_index":2239,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["confirmation",{"_index":2189,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["confirms",{"_index":761,"title":{},"body":{"components/FriendsPage.html":{}}}],["console.log(error",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error.code",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error.message",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(stakeentry",{"_index":2303,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["console.log(this.transaction",{"_index":2254,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["const",{"_index":164,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"classes/Award.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"classes/Group.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"classes/Transaction.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{}}}],["constructor(gid",{"_index":1988,"title":{},"body":{"classes/Transaction.html":{}}}],["constructor(id",{"_index":528,"title":{},"body":{"classes/Award.html":{},"classes/Group.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction-1.html":{},"classes/User.html":{}}}],["constructor(originaltransaction",{"_index":2358,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["constructor(private",{"_index":115,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":584,"title":{},"body":{"components/ChangePasswordPage.html":{},"classes/Group.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/TutorialPage.html":{}}}],["constructor(startdate",{"_index":1821,"title":{},"body":{"classes/Statistic.html":{}}}],["containing",{"_index":1944,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["contains",{"_index":638,"title":{},"body":{"components/FriendProfilePage.html":{},"components/PasswordPage.html":{},"components/ProfilePage.html":{},"injectables/StatisticsService.html":{}}}],["containsuser",{"_index":1251,"title":{},"body":{"injectables/GroupService.html":{}}}],["content",{"_index":589,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TutorialPage.html":{}}}],["content')).gettext",{"_index":327,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":2568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["copy",{"_index":816,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["copy.creator",{"_index":1278,"title":{},"body":{"injectables/GroupService.html":{}}}],["copy.id",{"_index":866,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["copy.members",{"_index":1280,"title":{},"body":{"injectables/GroupService.html":{}}}],["copy.members.push(member.id",{"_index":1288,"title":{},"body":{"injectables/GroupService.html":{}}}],["copy.members.push(member.tostring",{"_index":1289,"title":{},"body":{"injectables/GroupService.html":{}}}],["copyandprepare",{"_index":805,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["copyandprepare(group",{"_index":1189,"title":{},"body":{"injectables/GroupService.html":{}}}],["copyandprepare(user",{"_index":814,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["cordova",{"_index":2595,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1514,"title":{},"body":{"components/PasswordPage.html":{}}}],["corresponding",{"_index":2094,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["cost",{"_index":1781,"title":{},"body":{"classes/SimpleTransaction.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["costs",{"_index":1976,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["coverage",{"_index":2502,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"classes/TransactionTracker.html":{}}}],["create'},{'name",{"_index":211,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["create.module",{"_index":1299,"title":{},"body":{"modules/HomePageModule.html":{}}}],["create.module').then",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["create.module.ts",{"_index":916,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"modules/TransactionCreatePageModule.html":{}}}],["create.page",{"_index":917,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{}}}],["create.page.html",{"_index":878,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{}}}],["create.page.scss",{"_index":877,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{}}}],["create.page.ts",{"_index":876,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{},"coverage.html":{}}}],["create.page.ts:107",{"_index":2056,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:159",{"_index":2053,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:166",{"_index":2062,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:176",{"_index":2061,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:25",{"_index":884,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{}}}],["create.page.ts:27",{"_index":2070,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:29",{"_index":885,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{}}}],["create.page.ts:31",{"_index":2068,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:33",{"_index":2065,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:35",{"_index":2072,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:37",{"_index":2067,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:39",{"_index":2069,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:40",{"_index":2066,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:42",{"_index":2055,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:54",{"_index":882,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["create.page.ts:63",{"_index":880,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["create.page.ts:90",{"_index":2052,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create/group",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"coverage.html":{}}}],["create/transaction",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"coverage.html":{}}}],["created",{"_index":881,"title":{},"body":{"components/GroupCreatePage.html":{},"injectables/GroupService.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["createdate",{"_index":2354,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["creategroup",{"_index":1131,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{}}}],["creategroup(group",{"_index":1194,"title":{},"body":{"injectables/GroupService.html":{}}}],["createpaymentreminder",{"_index":1591,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["createpiechart",{"_index":934,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["createpiechart(days",{"_index":1864,"title":{},"body":{"components/StatisticsPage.html":{}}}],["creates",{"_index":635,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["createtransaction",{"_index":935,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["creating",{"_index":2280,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["creation",{"_index":2054,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["creator",{"_index":868,"title":{},"body":{"classes/Group.html":{},"injectables/GroupService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["current",{"_index":1770,"title":{},"body":{"classes/SimpleTransaction.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["currentcost",{"_index":923,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currentdate",{"_index":2045,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["currentincome",{"_index":924,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currently",{"_index":85,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{}}}],["currentstats",{"_index":925,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currenttotal",{"_index":926,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currenttransactions",{"_index":927,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currentuser",{"_index":33,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["currentuserid",{"_index":809,"title":{},"body":{"injectables/FriendsService.html":{}}}],["currentuserparam",{"_index":1273,"title":{},"body":{"injectables/GroupService.html":{}}}],["currentview",{"_index":2177,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["curuser",{"_index":851,"title":{},"body":{"injectables/FriendsService.html":{}}}],["curuser.friends.push(u.id",{"_index":854,"title":{},"body":{"injectables/FriendsService.html":{}}}],["d",{"_index":1101,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["d.getdate",{"_index":1103,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["d.getfullyear",{"_index":1105,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["d.getmonth()+1",{"_index":1104,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["da",{"_index":178,"title":{},"body":{"components/AddMembersPage.html":{}}}],["dafür",{"_index":2403,"title":{},"body":{"components/TutorialPage.html":{}}}],["daily",{"_index":2234,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["danger",{"_index":792,"title":{},"body":{"components/FriendsPage.html":{}}}],["dann",{"_index":2395,"title":{},"body":{"components/TutorialPage.html":{}}}],["das",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionDetailsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["dass",{"_index":1026,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["data",{"_index":658,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"classes/TransactionTracker.html":{}}}],["data.base64string",{"_index":2148,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["data:image/jpeg;base64",{"_index":2147,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["data:image/png;base64",{"_index":1477,"title":{},"body":{"components/OptionsPage.html":{}}}],["database",{"_index":425,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"classes/Transaction-1.html":{},"components/TransactionParticipantsPage.html":{},"injectables/UserService.html":{}}}],["dataset",{"_index":1084,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["dataset.data",{"_index":1099,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["datasets",{"_index":1082,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["date",{"_index":948,"title":{},"body":{"components/GroupDetailsPage.html":{},"classes/Statistic.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"classes/TransactionTracker.html":{}}}],["date().getfullyear",{"_index":2071,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["date().gettime",{"_index":2107,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["date().todatestring",{"_index":2105,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["date().toisostring",{"_index":2064,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["date(item.purchasedate",{"_index":1983,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["date(new",{"_index":2106,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["date(olddate",{"_index":1102,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["date(this.duedate).tolocaledatestring",{"_index":1626,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["date(this.transaction.duedate",{"_index":2138,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["date(this.transaction.duedate).gettime",{"_index":2136,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["date(transaction.duedate",{"_index":2135,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["date(transaction.purchasedate",{"_index":1956,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["date(transactions[0].purchasedate",{"_index":1947,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["date1",{"_index":1939,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["date2",{"_index":1934,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["dateformat",{"_index":936,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["dateformat(olddate",{"_index":945,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["dateformat(transaction.purchasedate",{"_index":1113,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["daten",{"_index":1321,"title":{},"body":{"components/InvitePage.html":{}}}],["dates",{"_index":1938,"title":{},"body":{"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{}}}],["days",{"_index":1861,"title":{},"body":{"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["deactivates",{"_index":55,"title":{},"body":{"components/AddMembersPage.html":{}}}],["decided",{"_index":2084,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["declarations",{"_index":265,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["decorators",{"_index":985,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["default",{"_index":87,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["deinen",{"_index":1676,"title":{},"body":{"components/PrivacyPage.html":{}}}],["delete",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{},"injectables/UserService.html":{}}}],["delete(group",{"_index":1198,"title":{},"body":{"injectables/GroupService.html":{}}}],["delete(id",{"_index":2467,"title":{},"body":{"injectables/UserService.html":{}}}],["deletebtn",{"_index":1651,"title":{},"body":{"components/PrivacyPage.html":{}}}],["deleted",{"_index":78,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/GroupService.html":{},"components/TransactionDetailsPage.html":{},"injectables/UserService.html":{}}}],["deletememberfromgroup",{"_index":1287,"title":{},"body":{"injectables/GroupService.html":{}}}],["deletes",{"_index":954,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["deletetracker",{"_index":2182,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["deleteuserfromallgroups",{"_index":1180,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteuserfromallgroups(user",{"_index":1200,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteuserfromfriends",{"_index":2463,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserfromfriends(user",{"_index":2469,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserfromgroup",{"_index":1181,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteuserfromgroup(user",{"_index":1202,"title":{},"body":{"injectables/GroupService.html":{}}}],["deletion",{"_index":1658,"title":{},"body":{"components/PrivacyPage.html":{}}}],["dem",{"_index":2410,"title":{},"body":{"components/TutorialPage.html":{}}}],["den",{"_index":2413,"title":{},"body":{"components/TutorialPage.html":{},"index.html":{}}}],["denen",{"_index":2626,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":256,"title":{"dependencies.html":{}},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1361,"title":{},"body":{"components/LoginPage.html":{}}}],["der",{"_index":1336,"title":{},"body":{"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["descriptionpublic",{"_index":2440,"title":{},"body":{"classes/User.html":{}}}],["desired",{"_index":947,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{}}}],["details'},{'name",{"_index":213,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["details.module').then",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["details.module.ts",{"_index":1123,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"modules/TransactionDetailsPageModule.html":{}}}],["details.page",{"_index":1124,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{}}}],["details.page.html",{"_index":921,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.scss",{"_index":920,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts",{"_index":918,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{},"coverage.html":{}}}],["details.page.ts:123",{"_index":955,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:125",{"_index":2187,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:136",{"_index":2190,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:151",{"_index":2200,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:177",{"_index":2205,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:192",{"_index":2202,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:193",{"_index":971,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:201",{"_index":969,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:208",{"_index":944,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:223",{"_index":965,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:23",{"_index":2212,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:233",{"_index":942,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:24",{"_index":2209,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:25",{"_index":2211,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:26",{"_index":2210,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:266",{"_index":958,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:27",{"_index":982,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:28",{"_index":981,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:29",{"_index":979,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:30",{"_index":972,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:31",{"_index":978,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:317",{"_index":946,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:32",{"_index":983,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:33",{"_index":988,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:34",{"_index":1000,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:35",{"_index":980,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:36",{"_index":999,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:37",{"_index":976,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:38",{"_index":977,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:39",{"_index":974,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:40",{"_index":975,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:41",{"_index":984,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:43",{"_index":987,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:55",{"_index":2199,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:77",{"_index":966,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:84",{"_index":2198,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:93",{"_index":953,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:99",{"_index":2192,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details/group",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"coverage.html":{}}}],["details/transaction",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"coverage.html":{}}}],["detal",{"_index":2213,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["device",{"_index":1443,"title":{},"body":{"components/OptionsPage.html":{}}}],["die",{"_index":1027,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{},"index.html":{}}}],["dies",{"_index":1679,"title":{},"body":{"components/PrivacyPage.html":{}}}],["diese",{"_index":172,"title":{},"body":{"components/AddMembersPage.html":{}}}],["dieser",{"_index":2242,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["difference",{"_index":1937,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["different",{"_index":1942,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["dir",{"_index":1024,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["directive",{"_index":197,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["directives",{"_index":248,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["discarded",{"_index":1431,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["discription",{"_index":667,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["display",{"_index":1488,"title":{},"body":{"components/OptionsPage.html":{},"classes/SimpleTransaction.html":{}}}],["displayed",{"_index":764,"title":{},"body":{"components/FriendsPage.html":{}}}],["displayname",{"_index":2441,"title":{},"body":{"classes/User.html":{}}}],["displayname_currentuser",{"_index":1584,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["displayname_otheruser",{"_index":1585,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["displays",{"_index":1735,"title":{},"body":{"components/RegisterPage.html":{}}}],["distributed",{"_index":2321,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["doc",{"_index":2131,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["doc.data",{"_index":1248,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["doc.foreach(g",{"_index":1236,"title":{},"body":{"injectables/GroupService.html":{}}}],["doc.id",{"_index":1249,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["document.body.appendchild(alert",{"_index":719,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["document.body.appendchild(loading",{"_index":1324,"title":{},"body":{"components/InvitePage.html":{}}}],["document.createelement('ion",{"_index":714,"title":{},"body":{"components/FriendProfilePage.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["documentation",{"_index":2503,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["domsanitizer",{"_index":680,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["done",{"_index":1871,"title":{},"body":{"components/StatisticsPage.html":{}}}],["dort",{"_index":2398,"title":{},"body":{"components/TutorialPage.html":{}}}],["dosearch",{"_index":42,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["du",{"_index":1023,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{}}}],["due",{"_index":2033,"title":{},"body":{"classes/Transaction-1.html":{}}}],["duedate",{"_index":1586,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["dynamic",{"_index":2575,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["e2e/src/app.po.ts",{"_index":318,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":322,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":321,"title":{},"body":{"classes/AppPage.html":{}}}],["ec",{"_index":1566,"title":{},"body":{"components/PaymentPage.html":{}}}],["ec_card",{"_index":2442,"title":{},"body":{"classes/User.html":{}}}],["editing",{"_index":2282,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["eigener",{"_index":2257,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["ein",{"_index":1011,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["eine",{"_index":2402,"title":{},"body":{"components/TutorialPage.html":{},"injectables/UserService.html":{},"index.html":{}}}],["einem",{"_index":2644,"title":{},"body":{"index.html":{}}}],["einen",{"_index":1016,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{}}}],["einfach",{"_index":2382,"title":{},"body":{"components/TutorialPage.html":{}}}],["eingeben",{"_index":1534,"title":{},"body":{"components/PasswordPage.html":{}}}],["einladung",{"_index":1339,"title":{},"body":{"components/InvitePage.html":{}}}],["einmalig",{"_index":2160,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["einnahme",{"_index":2154,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["einnahmen",{"_index":1080,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"components/TutorialPage.html":{}}}],["einstellungen",{"_index":1484,"title":{},"body":{"components/OptionsPage.html":{}}}],["element",{"_index":196,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["element(by.deepcss('app",{"_index":325,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TutorialPage.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email.tolocalelowercase",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["entered",{"_index":1513,"title":{},"body":{"components/PasswordPage.html":{}}}],["enthalten",{"_index":902,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["entire",{"_index":1863,"title":{},"body":{"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["entry.user.id",{"_index":2225,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["entrycomponents",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["entsteht",{"_index":2637,"title":{},"body":{"index.html":{}}}],["entwicklung",{"_index":2614,"title":{},"body":{"index.html":{}}}],["environment",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["erfolgreich",{"_index":858,"title":{},"body":{"injectables/FriendsService.html":{},"components/InvitePage.html":{}}}],["ermöglicht",{"_index":2379,"title":{},"body":{"components/TutorialPage.html":{}}}],["error",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/LoginPage.html":{},"components/PasswordPage.html":{},"components/RegisterPage.html":{}}}],["error.code",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["errormessage",{"_index":928,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["errors",{"_index":753,"title":{},"body":{"components/FriendsPage.html":{},"components/PasswordPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["errors.get(\"addfriendsoutput",{"_index":794,"title":{},"body":{"components/FriendsPage.html":{}}}],["errors.get('amount",{"_index":2157,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["errors.get('group",{"_index":2153,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["errors.get('newpassword1",{"_index":1545,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get('newpassword2",{"_index":1546,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get('oldpassword",{"_index":1544,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get('purpose",{"_index":2156,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["errors.get(\\'amount",{"_index":2171,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["errors.get(\\'group",{"_index":2169,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["errors.get(\\'newpassword1",{"_index":1549,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get(\\'newpassword2",{"_index":1550,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get(\\'oldpassword",{"_index":1548,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get(\\'purpose",{"_index":2170,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["erstelle",{"_index":2482,"title":{},"body":{"injectables/UserService.html":{}}}],["erstellen",{"_index":909,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["ersteller",{"_index":2259,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["erstellt",{"_index":2421,"title":{},"body":{"components/TutorialPage.html":{}}}],["erstellte",{"_index":2418,"title":{},"body":{"components/TutorialPage.html":{}}}],["es",{"_index":1037,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["everyone",{"_index":2039,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{}}}],["existiert",{"_index":1333,"title":{},"body":{"components/InvitePage.html":{}}}],["existing",{"_index":968,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":811,"title":{},"body":{"injectables/FriendsService.html":{}}}],["expense",{"_index":1375,"title":{},"body":{"components/LoginPage.html":{}}}],["expenses",{"_index":1925,"title":{},"body":{"injectables/StatisticsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":113,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":281,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["eye",{"_index":1369,"title":{},"body":{"components/LoginPage.html":{}}}],["f.id",{"_index":152,"title":{},"body":{"components/AddMembersPage.html":{}}}],["fair",{"_index":2166,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TutorialPage.html":{}}}],["fairlydistributedcosts",{"_index":2272,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["fairlydistributedprice",{"_index":2046,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["falsch",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordPage.html":{}}}],["false",{"_index":94,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendProfilePage.html":{},"injectables/FriendsService.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":813,"title":{},"body":{"injectables/FriendsService.html":{}}}],["fehler",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["felder",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["fertig",{"_index":2426,"title":{},"body":{"components/TutorialPage.html":{}}}],["festival",{"_index":2630,"title":{},"body":{"index.html":{}}}],["fields",{"_index":2322,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filechooser",{"_index":2597,"title":{},"body":{"dependencies.html":{}}}],["filesystem",{"_index":2602,"title":{},"body":{"dependencies.html":{}}}],["fill",{"_index":2276,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["filter",{"_index":90,"title":{},"body":{"components/AddMembersPage.html":{}}}],["filteredfriendsandmembers",{"_index":34,"title":{},"body":{"components/AddMembersPage.html":{}}}],["filteredgroups",{"_index":1129,"title":{},"body":{"components/GroupListPage.html":{}}}],["filters",{"_index":70,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["finally",{"_index":2246,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["find",{"_index":434,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{}}}],["findbyemail",{"_index":2464,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":2473,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":427,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":428,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["findgroup",{"_index":1308,"title":{},"body":{"components/InvitePage.html":{}}}],["finds",{"_index":431,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["finish",{"_index":2059,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["finished",{"_index":2009,"title":{},"body":{"classes/Transaction-1.html":{}}}],["firebase",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"components/GroupCreatePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"dependencies.html":{}}}],["firebaseconfig",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":2032,"title":{},"body":{"classes/Transaction-1.html":{}}}],["firstmsg",{"_index":1587,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["fit",{"_index":1193,"title":{},"body":{"injectables/GroupService.html":{},"classes/SimpleTransaction.html":{}}}],["flag",{"_index":2038,"title":{},"body":{"classes/Transaction-1.html":{}}}],["folgende",{"_index":180,"title":{},"body":{"components/AddMembersPage.html":{}}}],["follow",{"_index":2360,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["font",{"_index":594,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["for(const",{"_index":1237,"title":{},"body":{"injectables/GroupService.html":{}}}],["for(let",{"_index":846,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{}}}],["forgotpassword",{"_index":1379,"title":{},"body":{"components/LoginPage.html":{}}}],["format",{"_index":949,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["formatrhythm",{"_index":2183,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formatrhythm(rhythm",{"_index":2191,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formatrhythm(transaction.rhythm",{"_index":2260,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formattype",{"_index":2184,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formattype(transaction.type",{"_index":2256,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formattype(type",{"_index":2197,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formsmodule",{"_index":270,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["formular",{"_index":2411,"title":{},"body":{"components/TutorialPage.html":{}}}],["forward",{"_index":963,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["found",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["frame",{"_index":961,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["fremde",{"_index":1689,"title":{},"body":{"components/PrivacyPage.html":{}}}],["freund",{"_index":1012,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TutorialPage.html":{}}}],["freunde",{"_index":181,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/PrivacyPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["freunden",{"_index":2385,"title":{},"body":{"components/TutorialPage.html":{}}}],["freundesliste",{"_index":2397,"title":{},"body":{"components/TutorialPage.html":{}}}],["friend",{"_index":67,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["friend.displayname",{"_index":191,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friend.displayname}\\n",{"_index":186,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friend.id",{"_index":153,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friend.tostring",{"_index":131,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendbttn",{"_index":754,"title":{},"body":{"components/FriendsPage.html":{}}}],["friendbttn(id",{"_index":765,"title":{},"body":{"components/FriendsPage.html":{}}}],["friendismember",{"_index":129,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendlist",{"_index":1660,"title":{},"body":{"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["friendprofilepage",{"_index":206,"title":{"components/FriendProfilePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["friendprofilepagemodule",{"_index":741,"title":{"modules/FriendProfilePageModule.html":{}},"body":{"modules/FriendProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["friendprofilepageroutingmodule",{"_index":745,"title":{"modules/FriendProfilePageRoutingModule.html":{}},"body":{"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["friends",{"_index":71,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AppRoutingModule.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"injectables/FriendsService.html":{},"components/ProfilePage.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["friends'},{'name",{"_index":209,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["friends.page",{"_index":802,"title":{},"body":{"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{}}}],["friends.page.html",{"_index":750,"title":{},"body":{"components/FriendsPage.html":{}}}],["friends.page.scss",{"_index":749,"title":{},"body":{"components/FriendsPage.html":{}}}],["friendsandmembers",{"_index":35,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendservice.addfriend",{"_index":759,"title":{},"body":{"components/FriendsPage.html":{}}}],["friendspage",{"_index":208,"title":{"components/FriendsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["friendspagemodule",{"_index":796,"title":{"modules/FriendsPageModule.html":{}},"body":{"modules/FriendsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["friendspageroutingmodule",{"_index":800,"title":{"modules/FriendsPageRoutingModule.html":{}},"body":{"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["friendsservice",{"_index":676,"title":{"injectables/FriendsService.html":{}},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"coverage.html":{}}}],["friendswithopentransactions",{"_index":159,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendswithopentransactions.foreach(friend",{"_index":185,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendswithopentransactions.length",{"_index":169,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendswithopentransactions.push(friend",{"_index":168,"title":{},"body":{"components/AddMembersPage.html":{}}}],["fromgroup",{"_index":1072,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{}}}],["full",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":48,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["functionality",{"_index":634,"title":{},"body":{"components/FriendProfilePage.html":{},"injectables/GroupService.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["functions",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/GroupCreatePage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/UserService.html":{}}}],["further",{"_index":2281,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["furthermore",{"_index":639,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["fälligkeitsdatum",{"_index":1625,"title":{},"body":{"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["fügen",{"_index":1009,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["fügt",{"_index":2625,"title":{},"body":{"index.html":{}}}],["für",{"_index":1688,"title":{},"body":{"components/PrivacyPage.html":{},"index.html":{}}}],["g",{"_index":1051,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"miscellaneous/variables.html":{}}}],["g.data().members",{"_index":1238,"title":{},"body":{"injectables/GroupService.html":{}}}],["g.id",{"_index":1241,"title":{},"body":{"injectables/GroupService.html":{}}}],["geben",{"_index":1015,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{}}}],["gefunden",{"_index":2151,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["gelangen",{"_index":2396,"title":{},"body":{"components/TutorialPage.html":{}}}],["geld",{"_index":2341,"title":{},"body":{"components/TransactionStakesPage.html":{},"index.html":{}}}],["gemacht",{"_index":1681,"title":{},"body":{"components/PrivacyPage.html":{}}}],["generate",{"_index":579,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["gesamt",{"_index":1902,"title":{},"body":{"components/StatisticsPage.html":{}}}],["gesamtbetrag",{"_index":2340,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["getall",{"_index":1182,"title":{},"body":{"injectables/GroupService.html":{}}}],["getallexpensesoftime",{"_index":1917,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallexpensesoftime(days",{"_index":1922,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallincomeoftime",{"_index":1918,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallincomeoftime(days",{"_index":1929,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallselfmadetransactionsoftime",{"_index":1919,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallselfmadetransactionsoftime(userid",{"_index":1931,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getcurrentamount",{"_index":2319,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["getdays",{"_index":1920,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getdays(date1",{"_index":1933,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getgroupbyid",{"_index":1183,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupbyid(id",{"_index":1206,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupsbyuserid",{"_index":1184,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupsbyuserid(id",{"_index":1208,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupstatistics",{"_index":1921,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getgroupstatistics(transactions",{"_index":1940,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getparagraphtext",{"_index":319,"title":{},"body":{"classes/AppPage.html":{}}}],["gets",{"_index":763,"title":{},"body":{"components/FriendsPage.html":{},"injectables/GroupService.html":{}}}],["getting",{"_index":2612,"title":{"index.html":{}},"body":{}}],["gid",{"_index":1985,"title":{},"body":{"classes/Transaction.html":{}}}],["given",{"_index":760,"title":{},"body":{"components/FriendsPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{}}}],["going",{"_index":2076,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["good",{"_index":1281,"title":{},"body":{"injectables/GroupService.html":{}}}],["graph",{"_index":2648,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":734,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["grmny",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":19,"title":{"classes/Group.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["group(\"0\",\"\",[],undefined",{"_index":1312,"title":{},"body":{"components/InvitePage.html":{}}}],["group.creator",{"_index":1232,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.creator.id",{"_index":1279,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.id",{"_index":1163,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{}}}],["group.members",{"_index":1233,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.members.foreach(m",{"_index":1242,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.members.foreach(member",{"_index":1158,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{}}}],["group.members.push(user",{"_index":1277,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.members.splice(index",{"_index":1266,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.model",{"_index":2027,"title":{},"body":{"classes/Transaction-1.html":{}}}],["group.name",{"_index":1106,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{}}}],["group/add",{"_index":1215,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupchoice.name",{"_index":2150,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["groupcollection",{"_index":1178,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupcreatepage",{"_index":210,"title":{"components/GroupCreatePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["groupcreatepagemodule",{"_index":911,"title":{"modules/GroupCreatePageModule.html":{}},"body":{"modules/GroupCreatePageModule.html":{},"modules.html":{},"overview.html":{}}}],["groupcreatepageroutingmodule",{"_index":915,"title":{"modules/GroupCreatePageRoutingModule.html":{}},"body":{"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["groupdetailspage",{"_index":212,"title":{"components/GroupDetailsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["groupdetailspagemodule",{"_index":1118,"title":{"modules/GroupDetailsPageModule.html":{}},"body":{"modules/GroupDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["groupdetailspageroutingmodule",{"_index":1122,"title":{"modules/GroupDetailsPageRoutingModule.html":{}},"body":{"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["groupfound",{"_index":1306,"title":{},"body":{"components/InvitePage.html":{}}}],["groupid",{"_index":1048,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{}}}],["grouplistpage",{"_index":214,"title":{"components/GroupListPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["grouplistpagemodule",{"_index":1170,"title":{"modules/GroupListPageModule.html":{}},"body":{"modules/GroupListPageModule.html":{},"modules.html":{},"overview.html":{}}}],["grouplistpageroutingmodule",{"_index":1174,"title":{"modules/GroupListPageRoutingModule.html":{}},"body":{"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["groupname",{"_index":1588,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{}}}],["groupparam",{"_index":1272,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups",{"_index":1126,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{}}}],["groups.foreach(group",{"_index":1156,"title":{},"body":{"components/GroupListPage.html":{}}}],["groups.push(group",{"_index":1250,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups.push(this.creategroup(g.data",{"_index":1240,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups[i",{"_index":1263,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups[i].creator",{"_index":1253,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups[i].members",{"_index":1257,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups[i].members[j",{"_index":1259,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupservice",{"_index":886,"title":{"injectables/GroupService.html":{}},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"coverage.html":{}}}],["groupsizegreaterone",{"_index":160,"title":{},"body":{"components/AddMembersPage.html":{}}}],["gruppe",{"_index":908,"title":{},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["gruppen",{"_index":1169,"title":{},"body":{"components/GroupListPage.html":{},"index.html":{}}}],["größer",{"_index":2338,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["haben",{"_index":1042,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["haben:\\n",{"_index":184,"title":{},"body":{"components/AddMembersPage.html":{}}}],["hallo",{"_index":1616,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["handler",{"_index":1033,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["handlesubmit",{"_index":2273,"title":{},"body":{"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["hasstake",{"_index":2178,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["header",{"_index":1020,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["height",{"_index":726,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/ProfilePage.html":{},"components/TutorialPage.html":{}}}],["helps",{"_index":2217,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["here",{"_index":661,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["hidepassword",{"_index":1383,"title":{},"body":{"components/LoginPage.html":{}}}],["hides",{"_index":56,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["hinzu",{"_index":1014,"title":{},"body":{"components/GroupDetailsPage.html":{},"index.html":{}}}],["hinzufügen",{"_index":190,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendsPage.html":{},"components/MemberViewPage.html":{},"components/TutorialPage.html":{}}}],["hinzugefügt",{"_index":859,"title":{},"body":{"injectables/FriendsService.html":{}}}],["hkywbms6a4cwqi820gixl0",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hold",{"_index":1799,"title":{},"body":{"classes/Statistic.html":{}}}],["home",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"classes/SimpleTransaction.html":{}}}],["home'},{'name",{"_index":217,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["home.page",{"_index":1297,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["homepage",{"_index":216,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["homepagemodule",{"_index":1290,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":1294,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":195,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["https://bit.ly/2s904cs",{"_index":710,"title":{},"body":{"components/FriendProfilePage.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["icon",{"_index":1363,"title":{},"body":{"components/LoginPage.html":{},"components/TutorialPage.html":{}}}],["iconname",{"_index":1352,"title":{},"body":{"components/LoginPage.html":{}}}],["icons",{"_index":644,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["iconscol",{"_index":738,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["id",{"_index":433,"title":{},"body":{"injectables/ArwardService.html":{},"classes/Award.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/MemberViewPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identification",{"_index":1928,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["identifier",{"_index":2504,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":817,"title":{},"body":{"injectables/FriendsService.html":{}}}],["identify",{"_index":770,"title":{},"body":{"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Transaction-1.html":{}}}],["identisch",{"_index":1746,"title":{},"body":{"components/RegisterPage.html":{}}}],["if(!alreadyfriends",{"_index":853,"title":{},"body":{"injectables/FriendsService.html":{}}}],["if(!back",{"_index":1098,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(!transaction.finished",{"_index":1055,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(back",{"_index":1095,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(containsuser",{"_index":1261,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(creator.id",{"_index":1254,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(group",{"_index":1330,"title":{},"body":{"components/InvitePage.html":{}}}],["if(group.creator.id",{"_index":1264,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(group.members",{"_index":1157,"title":{},"body":{"components/GroupListPage.html":{}}}],["if(group.members.length",{"_index":1265,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(index",{"_index":2496,"title":{},"body":{"injectables/UserService.html":{}}}],["if(member.id",{"_index":1260,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(member.tostring",{"_index":1239,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(members",{"_index":1405,"title":{},"body":{"components/MemberViewPage.html":{}}}],["if(opentransactions",{"_index":1035,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(p.user.id",{"_index":2253,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["if(ret",{"_index":1374,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["if(this.alltransactions.length",{"_index":1058,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.authservice.currentuser",{"_index":2248,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["if(this.group",{"_index":1071,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.group.members",{"_index":892,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["if(this.group.members.length",{"_index":1006,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.group.name",{"_index":890,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["if(this.group.name.length",{"_index":1005,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.inputtype",{"_index":1371,"title":{},"body":{"components/LoginPage.html":{}}}],["if(this.password",{"_index":1740,"title":{},"body":{"components/RegisterPage.html":{}}}],["if(this.piechart",{"_index":1076,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.platform.is('desktop",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.transaction.amount",{"_index":2128,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["if(this.transaction.creator.id",{"_index":2249,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["if(this.transaction.participation.length",{"_index":2328,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["if(this.view",{"_index":1073,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(u",{"_index":848,"title":{},"body":{"injectables/FriendsService.html":{}}}],["if(user.id",{"_index":1230,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(user1.friends[i",{"_index":864,"title":{},"body":{"injectables/FriendsService.html":{}}}],["if(user1.id",{"_index":861,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ignore",{"_index":114,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["ihnen",{"_index":2380,"title":{},"body":{"components/TutorialPage.html":{}}}],["ihre",{"_index":2412,"title":{},"body":{"components/TutorialPage.html":{}}}],["ihrem",{"_index":2391,"title":{},"body":{"components/TutorialPage.html":{}}}],["ihren",{"_index":2384,"title":{},"body":{"components/TutorialPage.html":{}}}],["ihrer",{"_index":1013,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TutorialPage.html":{}}}],["image",{"_index":527,"title":{},"body":{"classes/Award.html":{},"components/OptionsPage.html":{}}}],["image.base64string",{"_index":1478,"title":{},"body":{"components/OptionsPage.html":{}}}],["imagepicker",{"_index":2600,"title":{},"body":{"dependencies.html":{}}}],["imagepublic",{"_index":2443,"title":{},"body":{"classes/User.html":{}}}],["implements",{"_index":20,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["import",{"_index":99,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"injectables/UserService.html":{}}}],["import('./auth/change",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/login/login.module').then",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/register/register.module').then",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./group/add",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./group/group",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./group/invite/invite.module').then",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./group/member",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./home/home.module').then",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./payment",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/friend",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/friends/friends.module').then",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/options/options.module').then",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/password/password.module').then",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/payment/payment.module').then",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/privacy/privacy.module').then",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile/profile.module').then",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/statistics/statistics.module').then",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./transaction/transaction",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tutorial/tutorial.module').then",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":660,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["imports",{"_index":266,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["income",{"_index":1782,"title":{},"body":{"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionDetailsPage.html":{}}}],["incomes",{"_index":1867,"title":{},"body":{"components/StatisticsPage.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AddMembersPage.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["individually",{"_index":2080,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["indiviudally",{"_index":2085,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["information",{"_index":649,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["initialization",{"_index":1872,"title":{},"body":{"components/StatisticsPage.html":{}}}],["initialized",{"_index":1870,"title":{},"body":{"components/StatisticsPage.html":{}}}],["initializes",{"_index":1509,"title":{},"body":{"components/PasswordPage.html":{}}}],["injectable",{"_index":417,"title":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":419,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":600,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TransactionStakesPage.html":{}}}],["inputfield",{"_index":757,"title":{},"body":{"components/FriendsPage.html":{}}}],["inputs",{"_index":2060,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["inputtype",{"_index":1353,"title":{},"body":{"components/LoginPage.html":{}}}],["inserted",{"_index":1521,"title":{},"body":{"components/PasswordPage.html":{}}}],["insgesamt",{"_index":989,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["intern",{"_index":2195,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["invite",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{}}}],["invite'},{'name",{"_index":219,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["invite.page",{"_index":1347,"title":{},"body":{"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{}}}],["invite.page.html",{"_index":1305,"title":{},"body":{"components/InvitePage.html":{}}}],["invite.page.scss",{"_index":1304,"title":{},"body":{"components/InvitePage.html":{}}}],["invitepage",{"_index":218,"title":{"components/InvitePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["invitepagemodule",{"_index":1341,"title":{"modules/InvitePageModule.html":{}},"body":{"modules/InvitePageModule.html":{},"modules.html":{},"overview.html":{}}}],["invitepageroutingmodule",{"_index":1345,"title":{"modules/InvitePageRoutingModule.html":{}},"body":{"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["involved",{"_index":2220,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["ion",{"_index":326,"title":{},"body":{"classes/AppPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendsPage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/TutorialPage.html":{}}}],["ionic",{"_index":636,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":104,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":272,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["ionicmodule.forroot",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["ionsearchbar",{"_index":82,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["ionviewdidleave",{"_index":1166,"title":{},"body":{"components/GroupListPage.html":{}}}],["ionviewwillenter",{"_index":628,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["ios",{"_index":2620,"title":{},"body":{"index.html":{}}}],["isfriend",{"_index":625,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["isfriends",{"_index":806,"title":{},"body":{"injectables/FriendsService.html":{}}}],["isfriends(user1",{"_index":819,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ist",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionStakesPage.html":{},"index.html":{}}}],["it's",{"_index":1764,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["item.creator.id",{"_index":1982,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["item.displayname",{"_index":795,"title":{},"body":{"components/FriendsPage.html":{}}}],["item2",{"_index":695,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["j",{"_index":1256,"title":{},"body":{"injectables/GroupService.html":{}}}],["ja",{"_index":1467,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["jahr",{"_index":991,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["jey1ddqvhv9minknpocc",{"_index":2484,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":1302,"title":{},"body":{"components/InvitePage.html":{}}}],["json.parse(localstorage.getitem('otheruser",{"_index":2223,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["json.parse(route.snapshot.parammap.get('fairlydistributedprice",{"_index":2295,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["json.stringify(this.fairlydistributedprice",{"_index":2143,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["json.stringify(this.user",{"_index":1463,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["json.stringify(this.userold",{"_index":1464,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["justify",{"_index":740,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["jährlich",{"_index":2164,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["kann",{"_index":174,"title":{},"body":{"components/AddMembersPage.html":{},"components/PrivacyPage.html":{},"index.html":{}}}],["karte",{"_index":1567,"title":{},"body":{"components/PaymentPage.html":{}}}],["keep",{"_index":1664,"title":{},"body":{"components/PrivacyPage.html":{}}}],["keine",{"_index":835,"title":{},"body":{"injectables/FriendsService.html":{},"components/TransactionCreatePage.html":{}}}],["klicken",{"_index":2394,"title":{},"body":{"components/TutorialPage.html":{}}}],["kreditcard",{"_index":2444,"title":{},"body":{"classes/User.html":{}}}],["kreditkarte",{"_index":1568,"title":{},"body":{"components/PaymentPage.html":{}}}],["können",{"_index":2399,"title":{},"body":{"components/TutorialPage.html":{}}}],["label",{"_index":1083,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{}}}],["labels",{"_index":1079,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["lade",{"_index":1320,"title":{},"body":{"components/InvitePage.html":{}}}],["lang",{"_index":906,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["last",{"_index":1953,"title":{},"body":{"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"classes/TransactionTracker.html":{}}}],["lastdate",{"_index":2355,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["lastmonthcost",{"_index":1803,"title":{},"body":{"classes/Statistic.html":{}}}],["lastmonthincome",{"_index":1804,"title":{},"body":{"classes/Statistic.html":{}}}],["lastmonthtotal",{"_index":1805,"title":{},"body":{"classes/Statistic.html":{}}}],["lastsixmonthscost",{"_index":1806,"title":{},"body":{"classes/Statistic.html":{}}}],["lastsixmonthsincome",{"_index":1807,"title":{},"body":{"classes/Statistic.html":{}}}],["lastsixmonthstotal",{"_index":1808,"title":{},"body":{"classes/Statistic.html":{}}}],["lastthreemonthscost",{"_index":1809,"title":{},"body":{"classes/Statistic.html":{}}}],["lastthreemonthsincome",{"_index":1810,"title":{},"body":{"classes/Statistic.html":{}}}],["lastthreemonthstotal",{"_index":1811,"title":{},"body":{"classes/Statistic.html":{}}}],["lastweekcost",{"_index":1812,"title":{},"body":{"classes/Statistic.html":{}}}],["lastweekincome",{"_index":1813,"title":{},"body":{"classes/Statistic.html":{}}}],["lastweektotal",{"_index":1814,"title":{},"body":{"classes/Statistic.html":{}}}],["lastyearcost",{"_index":1815,"title":{},"body":{"classes/Statistic.html":{}}}],["lastyearincome",{"_index":1816,"title":{},"body":{"classes/Statistic.html":{}}}],["lastyeartotal",{"_index":1817,"title":{},"body":{"classes/Statistic.html":{}}}],["later",{"_index":2078,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["leave",{"_index":956,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["leavegroup",{"_index":937,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["left",{"_index":730,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["legend",{"_index":194,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["length",{"_index":1515,"title":{},"body":{"components/PasswordPage.html":{}}}],["lets",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{}}}],["letzte",{"_index":992,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["letzter",{"_index":996,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["letztes",{"_index":990,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["link",{"_index":1303,"title":{},"body":{"components/InvitePage.html":{}}}],["linking",{"_index":424,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{}}}],["links",{"_index":2393,"title":{},"body":{"components/TutorialPage.html":{}}}],["list",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{}}}],["list'},{'name",{"_index":215,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["list.module').then",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["list.module.ts",{"_index":1175,"title":{},"body":{"modules/GroupListPageModule.html":{}}}],["list.page",{"_index":1176,"title":{},"body":{"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{}}}],["list.page.html",{"_index":1128,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.scss",{"_index":1127,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts",{"_index":1125,"title":{},"body":{"components/GroupListPage.html":{},"coverage.html":{}}}],["list.page.ts:120",{"_index":1135,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:128",{"_index":1139,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:22",{"_index":1146,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:23",{"_index":1143,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:24",{"_index":1141,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:25",{"_index":1142,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:26",{"_index":1144,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:44",{"_index":1140,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:46",{"_index":1147,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:56",{"_index":1137,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:63",{"_index":1136,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:71",{"_index":1133,"title":{},"body":{"components/GroupListPage.html":{}}}],["list/group",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"coverage.html":{}}}],["lists",{"_index":2471,"title":{},"body":{"injectables/UserService.html":{}}}],["literal",{"_index":2012,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionParticipantsPage.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":650,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["loading",{"_index":1285,"title":{},"body":{"injectables/GroupService.html":{},"components/InvitePage.html":{}}}],["loading.cssclass",{"_index":1318,"title":{},"body":{"components/InvitePage.html":{}}}],["loading.dismiss",{"_index":1334,"title":{},"body":{"components/InvitePage.html":{}}}],["loading.duration",{"_index":1322,"title":{},"body":{"components/InvitePage.html":{}}}],["loading.message",{"_index":1319,"title":{},"body":{"components/InvitePage.html":{}}}],["loading.present",{"_index":1325,"title":{},"body":{"components/InvitePage.html":{}}}],["locally",{"_index":2057,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["log",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":664,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["loggout",{"_index":1663,"title":{},"body":{"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["logic",{"_index":2075,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["login",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{}}}],["login'},{'name",{"_index":221,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["login(email",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["login.page",{"_index":1391,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":1351,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1350,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":220,"title":{"components/LoginPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":1385,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpageroutingmodule",{"_index":1389,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["logout",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":1358,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["long",{"_index":1286,"title":{},"body":{"injectables/GroupService.html":{}}}],["längeren",{"_index":1017,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["löschen",{"_index":1021,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{}}}],["m",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.addmemberspagemodule",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.changepasswordpagemodule",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.friendprofilepagemodule",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.friendspagemodule",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.groupcreatepagemodule",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.groupdetailspagemodule",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.grouplistpagemodule",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.invitepagemodule",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.memberviewpagemodule",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.optionspagemodule",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.passwordpagemodule",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.paymentpagemodule",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.paymentreminderpagemodule",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.privacypagemodule",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.statisticspagemodule",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.transactioncreatepagemodule",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.transactiondetailspagemodule",{"_index":371,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.transactionparticipantspagemodule",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.transactionstakespagemodule",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.tutorialpagemodule",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["makes",{"_index":80,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{},"components/LoginPage.html":{}}}],["man",{"_index":2627,"title":{},"body":{"index.html":{}}}],["manage",{"_index":422,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{}}}],["map",{"_index":775,"title":{},"body":{"components/FriendsPage.html":{},"components/PasswordPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["margin",{"_index":609,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["mark",{"_index":2096,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["marked",{"_index":2042,"title":{},"body":{"classes/Transaction-1.html":{}}}],["match",{"_index":1517,"title":{},"body":{"components/PasswordPage.html":{}}}],["matching",{"_index":251,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.round(((date2",{"_index":1975,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["math.round(((newestdate",{"_index":1847,"title":{},"body":{"classes/Statistic.html":{}}}],["math.round(costs",{"_index":1980,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["math.round(sum*100)/100",{"_index":2335,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["math.round(transaction.amount",{"_index":1948,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["max",{"_index":728,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionCreatePage.html":{}}}],["maxdate",{"_index":2047,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["measurementid",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":62,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["member.displayname",{"_index":910,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{},"components/TransactionDetailsPage.html":{}}}],["member.id",{"_index":124,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/GroupService.html":{}}}],["member.tostring",{"_index":1159,"title":{},"body":{"components/GroupListPage.html":{}}}],["members",{"_index":18,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/MemberViewPage.html":{}}}],["members'},{'name",{"_index":200,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["members.length",{"_index":1406,"title":{},"body":{"components/MemberViewPage.html":{}}}],["members.module').then",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["members.module.ts",{"_index":264,"title":{},"body":{"modules/AddMembersPageModule.html":{}}}],["members.page",{"_index":274,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"injectables/GroupService.html":{}}}],["members.page.html",{"_index":28,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.scss",{"_index":26,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts",{"_index":12,"title":{},"body":{"components/AddMembersPage.html":{},"coverage.html":{}}}],["members.page.ts:103",{"_index":69,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:111",{"_index":54,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:121",{"_index":76,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:133",{"_index":59,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:146",{"_index":47,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:23",{"_index":91,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:27",{"_index":93,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:31",{"_index":92,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:35",{"_index":84,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:39",{"_index":88,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:43",{"_index":95,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:84",{"_index":83,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:86",{"_index":97,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:96",{"_index":79,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.push(u",{"_index":1244,"title":{},"body":{"injectables/GroupService.html":{}}}],["members.push(user",{"_index":1229,"title":{},"body":{"injectables/GroupService.html":{}}}],["members/add",{"_index":11,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["memberviewpage",{"_index":222,"title":{"components/MemberViewPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["memberviewpagemodule",{"_index":1411,"title":{"modules/MemberViewPageModule.html":{}},"body":{"modules/MemberViewPageModule.html":{},"modules.html":{},"overview.html":{}}}],["memberviewpageroutingmodule",{"_index":1415,"title":{"modules/MemberViewPageRoutingModule.html":{}},"body":{"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["menu",{"_index":2098,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["message",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/PasswordPage.html":{},"components/RegisterPage.html":{}}}],["message/text",{"_index":1520,"title":{},"body":{"components/PasswordPage.html":{}}}],["messages",{"_index":2095,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["messagingsenderid",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["met",{"_index":546,"title":{},"body":{"injectables/BadgeService.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/AddMembersPage.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["mind",{"_index":900,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["miscellaneous",{"_index":2653,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":542,"title":{},"body":{"injectables/BadgeService.html":{}}}],["mit",{"_index":2383,"title":{},"body":{"components/TutorialPage.html":{},"index.html":{}}}],["mitglied",{"_index":901,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["mitglieder",{"_index":1107,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["mitte",{"_index":2409,"title":{},"body":{"components/TutorialPage.html":{}}}],["mobiler",{"_index":2615,"title":{},"body":{"index.html":{}}}],["modal",{"_index":1269,"title":{},"body":{"injectables/GroupService.html":{}}}],["modal.ondiddismiss",{"_index":1275,"title":{},"body":{"injectables/GroupService.html":{}}}],["modal.present",{"_index":1274,"title":{},"body":{"injectables/GroupService.html":{}}}],["modalcontroller",{"_index":102,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/PaymentReminderPage.html":{}}}],["model",{"_index":1767,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["models/award.model",{"_index":439,"title":{},"body":{"injectables/ArwardService.html":{},"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["models/group.model",{"_index":110,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{}}}],["models/statistics.model",{"_index":1003,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/StatisticsService.html":{}}}],["models/transaction.model",{"_index":553,"title":{},"body":{"injectables/BadgeService.html":{},"components/GroupDetailsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["models/transactiontracker.model",{"_index":2074,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["models/user.model",{"_index":107,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"injectables/UserService.html":{}}}],["module",{"_index":253,"title":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{}},"body":{}}],["modules",{"_index":255,"title":{"modules.html":{}},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monat",{"_index":997,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["monate",{"_index":994,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["monatlich",{"_index":2163,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["month",{"_index":1967,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["monthly",{"_index":2236,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["months",{"_index":1960,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["more",{"_index":2193,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["msg",{"_index":171,"title":{},"body":{"components/AddMembersPage.html":{},"components/PaymentReminderPage.html":{}}}],["muss",{"_index":899,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["möchtest",{"_index":1029,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{}}}],["n",{"_index":1628,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["nach",{"_index":2415,"title":{},"body":{"components/TutorialPage.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["namen",{"_index":1018,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["nasty",{"_index":1667,"title":{},"body":{"components/PrivacyPage.html":{}}}],["native/core",{"_index":2585,"title":{},"body":{"dependencies.html":{}}}],["native/file",{"_index":2587,"title":{},"body":{"dependencies.html":{}}}],["native/image",{"_index":2589,"title":{},"body":{"dependencies.html":{}}}],["navcontroller",{"_index":583,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["navctrl",{"_index":585,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["navigate",{"_index":1456,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{}}}],["navigated",{"_index":1433,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["navigates",{"_index":767,"title":{},"body":{"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["navigateto",{"_index":320,"title":{},"body":{"classes/AppPage.html":{}}}],["navparams",{"_index":103,"title":{},"body":{"components/AddMembersPage.html":{},"components/PaymentReminderPage.html":{}}}],["navparams.get('amount",{"_index":1610,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('currentuserparam",{"_index":120,"title":{},"body":{"components/AddMembersPage.html":{}}}],["navparams.get('displayname_currentuser",{"_index":1614,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('displayname_otheruser",{"_index":1604,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('duedate",{"_index":1612,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('groupname",{"_index":1606,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('groupparam",{"_index":118,"title":{},"body":{"components/AddMembersPage.html":{}}}],["navparams.get('purpose",{"_index":1608,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["ndern",{"_index":1486,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{}}}],["nderungen",{"_index":1465,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["needed",{"_index":421,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionParticipantsPage.html":{}}}],["needs",{"_index":951,"title":{},"body":{"components/GroupDetailsPage.html":{},"classes/TransactionTracker.html":{}}}],["nein",{"_index":1482,"title":{},"body":{"components/OptionsPage.html":{}}}],["neu",{"_index":1377,"title":{},"body":{"components/LoginPage.html":{},"components/MemberViewPage.html":{}}}],["neue",{"_index":2149,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["neuen",{"_index":2407,"title":{},"body":{"components/TutorialPage.html":{}}}],["neues",{"_index":586,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/PasswordPage.html":{}}}],["new",{"_index":17,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["new(group",{"_index":1210,"title":{},"body":{"injectables/GroupService.html":{}}}],["newestdate",{"_index":1818,"title":{},"body":{"classes/Statistic.html":{}}}],["newgroup",{"_index":1245,"title":{},"body":{"injectables/GroupService.html":{}}}],["newgroups",{"_index":1155,"title":{},"body":{"components/GroupListPage.html":{}}}],["newgroups.foreach(group",{"_index":1161,"title":{},"body":{"components/GroupListPage.html":{}}}],["newgroups.push(group",{"_index":1160,"title":{},"body":{"components/GroupListPage.html":{}}}],["newlines",{"_index":1632,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["newpassword1",{"_index":1503,"title":{},"body":{"components/PasswordPage.html":{}}}],["newpassword2",{"_index":1504,"title":{},"body":{"components/PasswordPage.html":{}}}],["newselectedmembers",{"_index":36,"title":{},"body":{"components/AddMembersPage.html":{}}}],["next",{"_index":2058,"title":{},"body":{"components/TransactionCreatePage.html":{},"classes/TransactionTracker.html":{}}}],["nextdate",{"_index":2356,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["nextpage",{"_index":2050,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["ngmodule",{"_index":267,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["ngoninit",{"_index":189,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["nicht",{"_index":175,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/InvitePage.html":{},"components/PasswordPage.html":{},"components/PrivacyPage.html":{},"components/RegisterPage.html":{}}}],["noch",{"_index":179,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"index.html":{}}}],["notpaid",{"_index":2179,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["now",{"_index":2091,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["null",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["number",{"_index":973,"title":{},"body":{"components/GroupDetailsPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{}}}],["nun",{"_index":2401,"title":{},"body":{"components/TutorialPage.html":{}}}],["nutzer",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{}}}],["oben",{"_index":2392,"title":{},"body":{"components/TutorialPage.html":{}}}],["object",{"_index":1192,"title":{},"body":{"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":1205,"title":{},"body":{"injectables/GroupService.html":{}}}],["occuring",{"_index":2093,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["oder",{"_index":2631,"title":{},"body":{"index.html":{}}}],["offene",{"_index":182,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{}}}],["ohne",{"_index":1409,"title":{},"body":{"components/MemberViewPage.html":{}}}],["old",{"_index":1196,"title":{},"body":{"injectables/GroupService.html":{},"components/PasswordPage.html":{}}}],["olddate",{"_index":950,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["oldpassword",{"_index":1505,"title":{},"body":{"components/PasswordPage.html":{}}}],["oldtransactions",{"_index":929,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["once",{"_index":2081,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["one",{"_index":1518,"title":{},"body":{"components/PasswordPage.html":{},"components/TransactionDetailsPage.html":{}}}],["ones",{"_index":543,"title":{},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{}}}],["oninit",{"_index":21,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["open",{"_index":165,"title":{},"body":{"components/AddMembersPage.html":{}}}],["opened",{"_index":648,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["opens",{"_index":1441,"title":{},"body":{"components/OptionsPage.html":{}}}],["option",{"_index":1419,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["optional",{"_index":66,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["options",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["options'},{'name",{"_index":225,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["options.page",{"_index":1500,"title":{},"body":{"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{}}}],["options.page.html",{"_index":1421,"title":{},"body":{"components/OptionsPage.html":{}}}],["options.page.scss",{"_index":1420,"title":{},"body":{"components/OptionsPage.html":{}}}],["optionspage",{"_index":224,"title":{"components/OptionsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["optionspagemodule",{"_index":1494,"title":{"modules/OptionsPageModule.html":{}},"body":{"modules/OptionsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["optionspageroutingmodule",{"_index":1498,"title":{"modules/OptionsPageRoutingModule.html":{}},"body":{"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["original",{"_index":2362,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["originaltransaction",{"_index":2357,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["otheruser",{"_index":1774,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["otheruserid",{"_index":2180,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["otherwise",{"_index":665,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["out",{"_index":263,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"overview.html":{}}}],["outcome",{"_index":1852,"title":{},"body":{"components/StatisticsPage.html":{}}}],["outcomes",{"_index":1868,"title":{},"body":{"components/StatisticsPage.html":{}}}],["outgoing",{"_index":1775,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["outline",{"_index":1370,"title":{},"body":{"components/LoginPage.html":{}}}],["output",{"_index":839,"title":{},"body":{"injectables/FriendsService.html":{}}}],["overview",{"_index":2208,"title":{"overview.html":{}},"body":{"components/TransactionDetailsPage.html":{},"overview.html":{}}}],["owner",{"_index":2201,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["p",{"_index":1752,"title":{},"body":{"components/RegisterPage.html":{}}}],["p.paid",{"_index":2252,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["p.stake",{"_index":1979,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["p.user.id",{"_index":1978,"title":{},"body":{"injectables/StatisticsService.html":{},"components/TransactionDetailsPage.html":{}}}],["package",{"_index":2572,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":597,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["page",{"_index":621,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["paid",{"_index":2010,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["paidandnotaccepted",{"_index":2181,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["paidentry",{"_index":2120,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["param",{"_index":148,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":1437,"title":{},"body":{"components/OptionsPage.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["part",{"_index":1768,"title":{},"body":{"classes/SimpleTransaction.html":{},"classes/Transaction-1.html":{}}}],["participant",{"_index":2219,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["participant.participates",{"_index":2299,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participant.user.displayname",{"_index":2308,"title":{},"body":{"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["participant.user.username",{"_index":2342,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["participants",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{}}}],["participants'},{'name",{"_index":243,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["participants.module').then(m",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["participants.module.ts",{"_index":2314,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{}}}],["participants.page",{"_index":2315,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{}}}],["participants.page.html",{"_index":2270,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.scss",{"_index":2269,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts",{"_index":2268,"title":{},"body":{"components/TransactionParticipantsPage.html":{},"coverage.html":{}}}],["participants.page.ts:100",{"_index":2283,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:18",{"_index":2287,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:19",{"_index":2289,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:20",{"_index":2290,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:21",{"_index":2288,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:22",{"_index":2291,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:46",{"_index":2275,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:65",{"_index":2278,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:92",{"_index":2284,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants/transaction",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"coverage.html":{}}}],["participates",{"_index":2293,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participation",{"_index":2011,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionParticipantsPage.html":{}}}],["participation.stake",{"_index":2334,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["passed",{"_index":2077,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["passing",{"_index":768,"title":{},"body":{"components/FriendsPage.html":{}}}],["password",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"components/PaymentPage.html":{},"components/RegisterPage.html":{}}}],["password'},{'name",{"_index":205,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["password).then(ret",{"_index":1373,"title":{},"body":{"components/LoginPage.html":{}}}],["password.module').then",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password.module.ts",{"_index":617,"title":{},"body":{"modules/ChangePasswordPageModule.html":{}}}],["password.page",{"_index":618,"title":{},"body":{"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{}}}],["password.page.html",{"_index":581,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/PasswordPage.html":{}}}],["password.page.scss",{"_index":580,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/PasswordPage.html":{}}}],["password.page.ts",{"_index":578,"title":{},"body":{"components/ChangePasswordPage.html":{},"coverage.html":{}}}],["password.page.ts:18",{"_index":582,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password/change",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"coverage.html":{}}}],["passwordchange",{"_index":1424,"title":{},"body":{"components/OptionsPage.html":{}}}],["passwordpage",{"_index":226,"title":{"components/PasswordPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["passwordpagemodule",{"_index":1551,"title":{"modules/PasswordPageModule.html":{}},"body":{"modules/PasswordPageModule.html":{},"modules.html":{},"overview.html":{}}}],["passwordpageroutingmodule",{"_index":1555,"title":{"modules/PasswordPageRoutingModule.html":{}},"body":{"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["passwords",{"_index":1516,"title":{},"body":{"components/PasswordPage.html":{}}}],["passwordtext",{"_index":1547,"title":{},"body":{"components/PasswordPage.html":{}}}],["passwort",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/RegisterPage.html":{}}}],["passwörter",{"_index":1745,"title":{},"body":{"components/RegisterPage.html":{}}}],["past",{"_index":2087,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["path",{"_index":279,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["pathmatch",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pay",{"_index":2216,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["payment",{"_index":230,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["payment'},{'name",{"_index":228,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["payment.page",{"_index":1576,"title":{},"body":{"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{}}}],["payment.page.html",{"_index":1560,"title":{},"body":{"components/PaymentPage.html":{}}}],["payment.page.scss",{"_index":1559,"title":{},"body":{"components/PaymentPage.html":{}}}],["paymentdescription",{"_index":629,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["paymentdescription(name",{"_index":666,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["paymentpage",{"_index":227,"title":{"components/PaymentPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["paymentpagemodule",{"_index":1570,"title":{"modules/PaymentPageModule.html":{}},"body":{"modules/PaymentPageModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentpageroutingmodule",{"_index":1574,"title":{"modules/PaymentPageRoutingModule.html":{}},"body":{"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentreminderpage",{"_index":229,"title":{"components/PaymentReminderPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["paymentreminderpagemodule",{"_index":1640,"title":{"modules/PaymentReminderPageModule.html":{}},"body":{"modules/PaymentReminderPageModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentreminderpageroutingmodule",{"_index":1644,"title":{"modules/PaymentReminderPageRoutingModule.html":{}},"body":{"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["paypal",{"_index":1569,"title":{},"body":{"components/PaymentPage.html":{},"classes/User.html":{}}}],["pays",{"_index":2082,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["paytransaction",{"_index":2185,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["pending",{"_index":1776,"title":{},"body":{"classes/SimpleTransaction.html":{},"classes/Transaction.html":{}}}],["per",{"_index":1780,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["period",{"_index":1859,"title":{},"body":{"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["persist",{"_index":2465,"title":{},"body":{"injectables/UserService.html":{}}}],["persist(id",{"_index":2476,"title":{},"body":{"injectables/UserService.html":{}}}],["photo",{"_index":1442,"title":{},"body":{"components/OptionsPage.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["pichart",{"_index":1874,"title":{},"body":{"components/StatisticsPage.html":{}}}],["picked",{"_index":2079,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["picker",{"_index":2590,"title":{},"body":{"dependencies.html":{}}}],["pickers",{"_index":2088,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["picture",{"_index":2035,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["pie",{"_index":930,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["pieces",{"_index":1866,"title":{},"body":{"components/StatisticsPage.html":{}}}],["piechart",{"_index":931,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["platform",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["plugin",{"_index":1449,"title":{},"body":{"components/OptionsPage.html":{},"dependencies.html":{}}}],["plugins",{"_index":1092,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["plus",{"_index":2404,"title":{},"body":{"components/TutorialPage.html":{}}}],["position",{"_index":1093,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/StatisticsPage.html":{}}}],["pre",{"_index":1635,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["preloadallmodules",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":548,"title":{},"body":{"injectables/BadgeService.html":{}}}],["pressed",{"_index":964,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["prevent",{"_index":2086,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["price",{"_index":2029,"title":{},"body":{"classes/Transaction-1.html":{}}}],["privacy",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OptionsPage.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{}}}],["privacy'},{'name",{"_index":233,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["privacy.page",{"_index":1699,"title":{},"body":{"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{}}}],["privacy.page.html",{"_index":1649,"title":{},"body":{"components/PrivacyPage.html":{}}}],["privacy.page.scss",{"_index":1648,"title":{},"body":{"components/PrivacyPage.html":{}}}],["privacypage",{"_index":232,"title":{"components/PrivacyPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["privacypagemodule",{"_index":1693,"title":{"modules/PrivacyPageModule.html":{}},"body":{"modules/PrivacyPageModule.html":{},"modules.html":{},"overview.html":{}}}],["privacypageroutingmodule",{"_index":1697,"title":{"modules/PrivacyPageRoutingModule.html":{}},"body":{"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["private",{"_index":31,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["privatsphäre",{"_index":1487,"title":{},"body":{"components/OptionsPage.html":{},"components/PrivacyPage.html":{}}}],["probably",{"_index":1772,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["problems",{"_index":1873,"title":{},"body":{"components/StatisticsPage.html":{}}}],["production",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":1720,"title":{},"body":{"components/ProfilePage.html":{},"components/TutorialPage.html":{}}}],["profilbild",{"_index":1691,"title":{},"body":{"components/PrivacyPage.html":{}}}],["profile",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/StatisticsPage.html":{}}}],["profile'},{'name",{"_index":207,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["profile.module').then",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.module.ts",{"_index":746,"title":{},"body":{"modules/FriendProfilePageModule.html":{}}}],["profile.page",{"_index":747,"title":{},"body":{"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":623,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":622,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["profile.page.ts",{"_index":620,"title":{},"body":{"components/FriendProfilePage.html":{},"coverage.html":{}}}],["profile.page.ts:116",{"_index":630,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:127",{"_index":633,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:145",{"_index":668,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:26",{"_index":670,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:27",{"_index":673,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:28",{"_index":672,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:29",{"_index":671,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:68",{"_index":647,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile/friend",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"coverage.html":{}}}],["profiledescriptioncol",{"_index":731,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["profileimagechange",{"_index":1425,"title":{},"body":{"components/OptionsPage.html":{}}}],["profileimg",{"_index":724,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["profileimgcol",{"_index":727,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["profilepage",{"_index":234,"title":{"components/ProfilePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["profilepagemodule",{"_index":1721,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepageroutingmodule",{"_index":1725,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepic",{"_index":2445,"title":{},"body":{"classes/User.html":{}}}],["profilesettings",{"_index":1702,"title":{},"body":{"components/ProfilePage.html":{}}}],["progressive",{"_index":2617,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":323,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":654,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["providedin",{"_index":440,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":116,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"classes/Group.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionStakesPage.html":{},"classes/User.html":{}}}],["purchasedate",{"_index":1986,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["purpose",{"_index":655,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["push",{"_index":77,"title":{},"body":{"components/AddMembersPage.html":{}}}],["quality",{"_index":1473,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["querystring",{"_index":1326,"title":{},"body":{"components/InvitePage.html":{}}}],["querystring.split",{"_index":1328,"title":{},"body":{"components/InvitePage.html":{}}}],["r.displayname.tolowercase().includes(this.#searchbar.value.tolowercase",{"_index":145,"title":{},"body":{"components/AddMembersPage.html":{}}}],["r.name.tolowercase().includes(this.#searchbar.value.tolowercase",{"_index":1151,"title":{},"body":{"components/GroupListPage.html":{}}}],["radius",{"_index":605,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["random",{"_index":844,"title":{},"body":{"injectables/FriendsService.html":{}}}],["readable",{"_index":2194,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["received",{"_index":2030,"title":{},"body":{"classes/Transaction-1.html":{}}}],["rechnungen",{"_index":1043,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["rechnungen/einnahmen",{"_index":2623,"title":{},"body":{"index.html":{}}}],["rechnungsdatum",{"_index":2158,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["rechts",{"_index":2406,"title":{},"body":{"components/TutorialPage.html":{}}}],["redirectto",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/TutorialPage.html":{}}}],["register'},{'name",{"_index":236,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["register(email",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.page",{"_index":1759,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":1730,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":1729,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerpage",{"_index":235,"title":{"components/RegisterPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["registerpagemodule",{"_index":1753,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpageroutingmodule",{"_index":1757,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["registers",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterPage.html":{}}}],["registrieren",{"_index":1747,"title":{},"body":{"components/RegisterPage.html":{}}}],["reminder",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{}}}],["reminder'},{'name",{"_index":231,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["reminder.module').then",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reminder.module.ts",{"_index":1645,"title":{},"body":{"modules/PaymentReminderPageModule.html":{}}}],["reminder.page",{"_index":1646,"title":{},"body":{"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{}}}],["reminder.page.html",{"_index":1582,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.scss",{"_index":1581,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts",{"_index":1579,"title":{},"body":{"components/PaymentReminderPage.html":{},"coverage.html":{}}}],["reminder.page.ts:14",{"_index":1596,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:15",{"_index":1599,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:16",{"_index":1600,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:17",{"_index":1594,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:18",{"_index":1597,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:19",{"_index":1595,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:20",{"_index":1598,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:21",{"_index":1601,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:22",{"_index":1602,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:48",{"_index":1592,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder/payment",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"coverage.html":{}}}],["remove",{"_index":2203,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["removedfriend",{"_index":158,"title":{},"body":{"components/AddMembersPage.html":{}}}],["removedfriend.push(friend",{"_index":163,"title":{},"body":{"components/AddMembersPage.html":{}}}],["removepicture",{"_index":2186,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["reoccurance",{"_index":2034,"title":{},"body":{"classes/Transaction-1.html":{}}}],["reoccurring",{"_index":2353,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["repeated",{"_index":1738,"title":{},"body":{"components/RegisterPage.html":{}}}],["representation",{"_index":2196,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["representing",{"_index":2007,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["represents",{"_index":1927,"title":{},"body":{"injectables/StatisticsService.html":{},"components/TransactionParticipantsPage.html":{},"classes/TransactionTracker.html":{}}}],["require",{"_index":2569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":646,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["requirements",{"_index":545,"title":{},"body":{"injectables/BadgeService.html":{}}}],["res",{"_index":788,"title":{},"body":{"components/FriendsPage.html":{},"components/StatisticsPage.html":{}}}],["res.data",{"_index":445,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["res.id",{"_index":447,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{}}}],["reset",{"_index":262,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"overview.html":{}}}],["respective",{"_index":1860,"title":{},"body":{"components/StatisticsPage.html":{}}}],["responsive",{"_index":1091,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["rest",{"_index":2414,"title":{},"body":{"components/TutorialPage.html":{}}}],["result",{"_index":250,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.data",{"_index":1276,"title":{},"body":{"injectables/GroupService.html":{}}}],["result.friends.indexof(user.id",{"_index":2495,"title":{},"body":{"injectables/UserService.html":{}}}],["result.friends.splice(index",{"_index":2497,"title":{},"body":{"injectables/UserService.html":{}}}],["results",{"_index":252,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resulttype",{"_index":1475,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["ret",{"_index":155,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["ret.awards",{"_index":838,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.awardspublic",{"_index":837,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.description",{"_index":834,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.descriptionpublic",{"_index":833,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.id",{"_index":446,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{}}}],["ret.imagepublic",{"_index":831,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.profilepic",{"_index":832,"title":{},"body":{"injectables/FriendsService.html":{}}}],["return",{"_index":157,"title":{},"body":{"components/AddMembersPage.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":52,"title":{},"body":{"components/AddMembersPage.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["rgba(104",{"_index":1086,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["rgba(237",{"_index":1089,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["rhythm",{"_index":1987,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{}}}],["rhythmus",{"_index":2159,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["right",{"_index":733,"title":{},"body":{"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["role",{"_index":1031,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["root",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":202,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["route",{"_index":685,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["router",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["routereusestrategy",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":277,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":280,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":276,"title":{"routes.html":{}},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":273,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["routing.module.ts",{"_index":275,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["row",{"_index":739,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["rsl",{"_index":1468,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["rsl.role",{"_index":1469,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["rxjs",{"_index":1148,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{},"dependencies.html":{}}}],["rückgängig",{"_index":1680,"title":{},"body":{"components/PrivacyPage.html":{}}}],["same",{"_index":2083,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["sanitizer",{"_index":684,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["sanitizer:domsanitizer",{"_index":1404,"title":{},"body":{"components/MemberViewPage.html":{}}}],["satistics",{"_index":550,"title":{},"body":{"injectables/BadgeService.html":{}}}],["save",{"_index":1436,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{}}}],["savealert",{"_index":1426,"title":{},"body":{"components/OptionsPage.html":{}}}],["savealert(site",{"_index":1452,"title":{},"body":{"components/OptionsPage.html":{}}}],["savebtn",{"_index":1427,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["saved",{"_index":1447,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{}}}],["saves",{"_index":1444,"title":{},"body":{"components/OptionsPage.html":{}}}],["saving",{"_index":2092,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["sb",{"_index":98,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["sb.setfocus",{"_index":140,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["schließen",{"_index":718,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["schnell",{"_index":2381,"title":{},"body":{"components/TutorialPage.html":{}}}],["schritt",{"_index":2388,"title":{},"body":{"components/TutorialPage.html":{}}}],["schuldet",{"_index":2642,"title":{},"body":{"index.html":{}}}],["schwach",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["search",{"_index":73,"title":{},"body":{"components/AddMembersPage.html":{},"components/InvitePage.html":{}}}],["searchbar",{"_index":32,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["searchbar(sb",{"_index":139,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["searchbarvisible",{"_index":37,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["secondmsg",{"_index":1589,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["secondpassword",{"_index":1731,"title":{},"body":{"components/RegisterPage.html":{}}}],["see",{"_index":547,"title":{},"body":{"injectables/BadgeService.html":{},"components/GroupDetailsPage.html":{}}}],["sehen",{"_index":2420,"title":{},"body":{"components/TutorialPage.html":{}}}],["sein",{"_index":907,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["selbst",{"_index":1903,"title":{},"body":{"components/StatisticsPage.html":{}}}],["select",{"_index":43,"title":{},"body":{"components/AddMembersPage.html":{}}}],["select(friend",{"_index":75,"title":{},"body":{"components/AddMembersPage.html":{}}}],["selectallusers",{"_index":2048,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["selected",{"_index":50,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["self",{"_index":1853,"title":{},"body":{"components/StatisticsPage.html":{}}}],["send",{"_index":1580,"title":{},"body":{"components/PaymentReminderPage.html":{},"components/TransactionDetailsPage.html":{}}}],["senden",{"_index":587,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["sequence",{"_index":1665,"title":{},"body":{"components/PrivacyPage.html":{}}}],["service",{"_index":1915,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["services",{"_index":651,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["services/auth.service",{"_index":109,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["services/friends.service",{"_index":677,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{}}}],["services/group.service",{"_index":887,"title":{},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{}}}],["services/statistics.service",{"_index":1002,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["services/transaction.service",{"_index":112,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["services/user.service",{"_index":679,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["set",{"_index":138,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/StatisticsPage.html":{}}}],["setbadges",{"_index":538,"title":{},"body":{"injectables/BadgeService.html":{}}}],["setbadges(user",{"_index":539,"title":{},"body":{"injectables/BadgeService.html":{}}}],["sets",{"_index":959,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["setsearchbar(sb",{"_index":96,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["settimeout",{"_index":1094,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["setvisible",{"_index":44,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["showgroup",{"_index":1132,"title":{},"body":{"components/GroupListPage.html":{}}}],["showgroup(group",{"_index":1138,"title":{},"body":{"components/GroupListPage.html":{}}}],["showing",{"_index":2036,"title":{},"body":{"classes/Transaction-1.html":{}}}],["shown",{"_index":2214,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["shows",{"_index":919,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{}}}],["sicher",{"_index":1025,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["sichtbar",{"_index":1690,"title":{},"body":{"components/PrivacyPage.html":{}}}],["sie",{"_index":1010,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TutorialPage.html":{}}}],["simple",{"_index":1765,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["simpletransaction",{"_index":1761,"title":{"classes/SimpleTransaction.html":{}},"body":{"classes/SimpleTransaction.html":{},"coverage.html":{}}}],["simpletransactions",{"_index":1763,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["simply",{"_index":1432,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["site",{"_index":1455,"title":{},"body":{"components/OptionsPage.html":{}}}],["size",{"_index":595,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["slider",{"_index":2286,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["slides",{"_index":2427,"title":{},"body":{"components/TutorialPage.html":{}}}],["snapshot",{"_index":1222,"title":{},"body":{"injectables/GroupService.html":{}}}],["snapshot.data",{"_index":1225,"title":{},"body":{"injectables/GroupService.html":{}}}],["snapshot.docs.map(doc",{"_index":1247,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["snapshot.id",{"_index":1226,"title":{},"body":{"injectables/GroupService.html":{}}}],["solid",{"_index":602,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{}}}],["somewhat",{"_index":843,"title":{},"body":{"injectables/FriendsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["spa",{"_index":2424,"title":{},"body":{"components/TutorialPage.html":{}}}],["space",{"_index":1634,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["spans",{"_index":1943,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["spec\\.ts",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":2218,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["specifies",{"_index":1926,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["speichern",{"_index":1470,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["spot",{"_index":845,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/.../environment.prod.ts",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:8",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/change",{"_index":577,"title":{},"body":{"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/auth/login/login",{"_index":1392,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/auth/login/login.module.ts",{"_index":1390,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/auth/login/login.page.ts",{"_index":1349,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/auth/login/login.page.ts:18",{"_index":1359,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:22",{"_index":1366,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:26",{"_index":1365,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:30",{"_index":1362,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:34",{"_index":1360,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:47",{"_index":1355,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:62",{"_index":1357,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/register/register",{"_index":1760,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/auth/register/register.module.ts",{"_index":1758,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/auth/register/register.page.ts",{"_index":1728,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/auth/register/register.page.ts:18",{"_index":1739,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:22",{"_index":1733,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:26",{"_index":1736,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:30",{"_index":1737,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:34",{"_index":1734,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:44",{"_index":1732,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/group/add",{"_index":10,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/group/group",{"_index":875,"title":{},"body":{"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/group/invite/invite",{"_index":1348,"title":{},"body":{"modules/InvitePageRoutingModule.html":{}}}],["src/app/group/invite/invite.module.ts",{"_index":1346,"title":{},"body":{"modules/InvitePageModule.html":{}}}],["src/app/group/invite/invite.page.ts",{"_index":1301,"title":{},"body":{"components/InvitePage.html":{},"coverage.html":{}}}],["src/app/group/invite/invite.page.ts:20",{"_index":1311,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:21",{"_index":1313,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:22",{"_index":1315,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:23",{"_index":1314,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:60",{"_index":1310,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:85",{"_index":1309,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/member",{"_index":1393,"title":{},"body":{"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/home/home",{"_index":1300,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/home/home.module.ts",{"_index":1296,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page.ts",{"_index":2520,"title":{},"body":{"coverage.html":{}}}],["src/app/models/award.model.ts",{"_index":526,"title":{},"body":{"classes/Award.html":{},"coverage.html":{}}}],["src/app/models/award.model.ts:1",{"_index":529,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/award.model.ts:4",{"_index":532,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/award.model.ts:5",{"_index":531,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/award.model.ts:6",{"_index":534,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/award.model.ts:7",{"_index":533,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/group.model.ts",{"_index":867,"title":{},"body":{"classes/Group.html":{},"coverage.html":{}}}],["src/app/models/group.model.ts:3",{"_index":869,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:4",{"_index":871,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:5",{"_index":873,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:6",{"_index":872,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:7",{"_index":870,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/simpletransaction.model.ts",{"_index":1762,"title":{},"body":{"classes/SimpleTransaction.html":{},"coverage.html":{}}}],["src/app/models/simpletransaction.model.ts:10",{"_index":1789,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:11",{"_index":1787,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:12",{"_index":1793,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:13",{"_index":1792,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:14",{"_index":1791,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:15",{"_index":1790,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:16",{"_index":1788,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:17",{"_index":1777,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/statistics.model.ts",{"_index":1798,"title":{},"body":{"classes/Statistic.html":{},"coverage.html":{}}}],["src/app/models/statistics.model.ts:10",{"_index":1826,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:11",{"_index":1824,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:12",{"_index":1825,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:14",{"_index":1840,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:15",{"_index":1838,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:16",{"_index":1839,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:18",{"_index":1832,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:19",{"_index":1830,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:20",{"_index":1831,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:22",{"_index":1835,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:23",{"_index":1833,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:24",{"_index":1834,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:26",{"_index":1829,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:27",{"_index":1827,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:28",{"_index":1828,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:30",{"_index":1837,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:31",{"_index":1836,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:32",{"_index":1822,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:6",{"_index":1842,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:7",{"_index":1841,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:8",{"_index":1843,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/transaction.model",{"_index":1882,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/models/transaction.model.ts",{"_index":2006,"title":{},"body":{"classes/Transaction-1.html":{},"coverage.html":{}}}],["src/app/models/transaction.model.ts:10",{"_index":2014,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:11",{"_index":2024,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:12",{"_index":2026,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:13",{"_index":2023,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:14",{"_index":2016,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:15",{"_index":2025,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:16",{"_index":2022,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:17",{"_index":2015,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:18",{"_index":2017,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:20",{"_index":2021,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:21",{"_index":2013,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:22",{"_index":2020,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:8",{"_index":2019,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:9",{"_index":2018,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transactiontracker.model.ts",{"_index":2352,"title":{},"body":{"classes/TransactionTracker.html":{},"coverage.html":{}}}],["src/app/models/transactiontracker.model.ts:10",{"_index":2364,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:11",{"_index":2366,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:12",{"_index":2367,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:13",{"_index":2363,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:14",{"_index":2359,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:8",{"_index":2365,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:9",{"_index":2368,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/user.model",{"_index":678,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["src/app/models/user.model.ts",{"_index":2436,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:1",{"_index":2446,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:10",{"_index":2450,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:11",{"_index":2454,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:12",{"_index":2459,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:13",{"_index":2460,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:14",{"_index":2458,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:15",{"_index":2448,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:16",{"_index":2449,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:17",{"_index":2452,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:3",{"_index":2457,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":2453,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:5",{"_index":2455,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:6",{"_index":2456,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:7",{"_index":2447,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:8",{"_index":2461,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:9",{"_index":2451,"title":{},"body":{"classes/User.html":{}}}],["src/app/payment",{"_index":1578,"title":{},"body":{"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/profile/friend",{"_index":619,"title":{},"body":{"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"coverage.html":{}}}],["src/app/profile/friends/friends",{"_index":803,"title":{},"body":{"modules/FriendsPageRoutingModule.html":{}}}],["src/app/profile/friends/friends.module.ts",{"_index":801,"title":{},"body":{"modules/FriendsPageModule.html":{}}}],["src/app/profile/friends/friends.page.ts",{"_index":748,"title":{},"body":{"components/FriendsPage.html":{},"coverage.html":{}}}],["src/app/profile/friends/friends.page.ts:20",{"_index":777,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:21",{"_index":772,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:22",{"_index":774,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:23",{"_index":773,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:24",{"_index":776,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:50",{"_index":771,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:74",{"_index":766,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:83",{"_index":755,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/options/options",{"_index":1501,"title":{},"body":{"modules/OptionsPageRoutingModule.html":{}}}],["src/app/profile/options/options.module.ts",{"_index":1499,"title":{},"body":{"modules/OptionsPageModule.html":{}}}],["src/app/profile/options/options.page.ts",{"_index":1418,"title":{},"body":{"components/OptionsPage.html":{},"coverage.html":{}}}],["src/app/profile/options/options.page.ts:111",{"_index":1440,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:123",{"_index":1438,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:130",{"_index":1435,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:137",{"_index":1439,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:148",{"_index":1453,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:19",{"_index":1458,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:20",{"_index":1459,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:44",{"_index":1434,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:61",{"_index":1428,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:86",{"_index":1457,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/password/password",{"_index":1557,"title":{},"body":{"modules/PasswordPageRoutingModule.html":{}}}],["src/app/profile/password/password.module.ts",{"_index":1556,"title":{},"body":{"modules/PasswordPageModule.html":{}}}],["src/app/profile/password/password.page.ts",{"_index":1502,"title":{},"body":{"components/PasswordPage.html":{},"coverage.html":{}}}],["src/app/profile/password/password.page.ts:15",{"_index":1525,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:16",{"_index":1523,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:17",{"_index":1524,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:18",{"_index":1522,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:33",{"_index":1508,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:44",{"_index":1506,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:68",{"_index":1512,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/payment/payment",{"_index":1577,"title":{},"body":{"modules/PaymentPageRoutingModule.html":{}}}],["src/app/profile/payment/payment.module.ts",{"_index":1575,"title":{},"body":{"modules/PaymentPageModule.html":{}}}],["src/app/profile/payment/payment.page.ts",{"_index":1558,"title":{},"body":{"components/PaymentPage.html":{},"coverage.html":{}}}],["src/app/profile/payment/payment.page.ts:18",{"_index":1564,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/payment/payment.page.ts:19",{"_index":1565,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/payment/payment.page.ts:41",{"_index":1562,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/payment/payment.page.ts:58",{"_index":1561,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/payment/payment.page.ts:83",{"_index":1563,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/privacy/privacy",{"_index":1700,"title":{},"body":{"modules/PrivacyPageRoutingModule.html":{}}}],["src/app/profile/privacy/privacy.module.ts",{"_index":1698,"title":{},"body":{"modules/PrivacyPageModule.html":{}}}],["src/app/profile/privacy/privacy.page.ts",{"_index":1647,"title":{},"body":{"components/PrivacyPage.html":{},"coverage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:118",{"_index":1657,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:141",{"_index":1653,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:20",{"_index":1673,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:21",{"_index":1674,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:49",{"_index":1671,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:66",{"_index":1652,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:91",{"_index":1672,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/profile/profile",{"_index":1727,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/profile/profile/profile.module.ts",{"_index":1726,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/profile/profile/profile.page.ts",{"_index":1701,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/profile/profile/profile.page.ts:112",{"_index":1706,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:123",{"_index":1707,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:23",{"_index":1709,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:24",{"_index":1710,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:54",{"_index":1705,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:77",{"_index":1704,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:84",{"_index":1708,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:95",{"_index":1703,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/statistics/statistics",{"_index":1913,"title":{},"body":{"modules/StatisticsPageRoutingModule.html":{}}}],["src/app/profile/statistics/statistics.module.ts",{"_index":1911,"title":{},"body":{"modules/StatisticsPageModule.html":{}}}],["src/app/profile/statistics/statistics.page.ts",{"_index":1849,"title":{},"body":{"components/StatisticsPage.html":{},"coverage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:22",{"_index":1881,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:23",{"_index":1880,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:24",{"_index":1875,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:25",{"_index":1876,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:26",{"_index":1879,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:27",{"_index":1877,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:29",{"_index":1878,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:54",{"_index":1869,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:75",{"_index":1856,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:90",{"_index":1865,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/services/auth.service.ts",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:113",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:127",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:70",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:99",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/award.service",{"_index":675,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["src/app/services/award.service.ts",{"_index":420,"title":{},"body":{"injectables/ArwardService.html":{},"coverage.html":{}}}],["src/app/services/award.service.ts:14",{"_index":436,"title":{},"body":{"injectables/ArwardService.html":{}}}],["src/app/services/award.service.ts:29",{"_index":430,"title":{},"body":{"injectables/ArwardService.html":{}}}],["src/app/services/badge.service",{"_index":682,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["src/app/services/badge.service.ts",{"_index":536,"title":{},"body":{"injectables/BadgeService.html":{},"coverage.html":{}}}],["src/app/services/badge.service.ts:30",{"_index":541,"title":{},"body":{"injectables/BadgeService.html":{}}}],["src/app/services/friends.service.ts",{"_index":804,"title":{},"body":{"injectables/FriendsService.html":{},"coverage.html":{}}}],["src/app/services/friends.service.ts:104",{"_index":825,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:113",{"_index":815,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:16",{"_index":827,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:34",{"_index":818,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:58",{"_index":810,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:92",{"_index":821,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/group.service.ts",{"_index":1177,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/services/group.service.ts:112",{"_index":1195,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:129",{"_index":1201,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:159",{"_index":1203,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:19",{"_index":1214,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:191",{"_index":1186,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:209",{"_index":1188,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:218",{"_index":1190,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:39",{"_index":1204,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:47",{"_index":1211,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:55",{"_index":1213,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:63",{"_index":1199,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:71",{"_index":1207,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:93",{"_index":1209,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/statistics.service",{"_index":1883,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/services/statistics.service.ts",{"_index":1914,"title":{},"body":{"injectables/StatisticsService.html":{},"coverage.html":{}}}],["src/app/services/statistics.service.ts:102",{"_index":1930,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:125",{"_index":1932,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:18",{"_index":1941,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:67",{"_index":1935,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:79",{"_index":1924,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/transaction.service",{"_index":681,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["src/app/services/transaction.service.ts",{"_index":2550,"title":{},"body":{"coverage.html":{}}}],["src/app/services/user.service",{"_index":106,"title":{},"body":{"components/AddMembersPage.html":{},"components/StatisticsPage.html":{}}}],["src/app/services/user.service.ts",{"_index":2462,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:107",{"_index":2474,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:13",{"_index":2479,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":2477,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:52",{"_index":2475,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:64",{"_index":2478,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:72",{"_index":2468,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:80",{"_index":2470,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:97",{"_index":2466,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/transaction.model.ts",{"_index":1984,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/app/transaction.model.ts:10",{"_index":1998,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:11",{"_index":1995,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:12",{"_index":1989,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:2",{"_index":1993,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:3",{"_index":1992,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:4",{"_index":1990,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:5",{"_index":1997,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:6",{"_index":1999,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:7",{"_index":1994,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:8",{"_index":1996,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:9",{"_index":1991,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction/transaction",{"_index":2044,"title":{},"body":{"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/tutorial/tutorial",{"_index":2435,"title":{},"body":{"modules/TutorialPageRoutingModule.html":{}}}],["src/app/tutorial/tutorial.module.ts",{"_index":2433,"title":{},"body":{"modules/TutorialPageModule.html":{}}}],["src/app/tutorial/tutorial.page.ts",{"_index":2374,"title":{},"body":{"components/TutorialPage.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2564,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stake",{"_index":2040,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["stakeentry",{"_index":2118,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["stakes",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{}}}],["stakes'},{'name",{"_index":245,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["stakes.module').then(m",{"_index":374,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["stakes.module.ts",{"_index":2350,"title":{},"body":{"modules/TransactionStakesPageModule.html":{}}}],["stakes.page",{"_index":2351,"title":{},"body":{"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{}}}],["stakes.page.html",{"_index":2318,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.scss",{"_index":2317,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts",{"_index":2316,"title":{},"body":{"components/TransactionStakesPage.html":{},"coverage.html":{}}}],["stakes.page.ts:17",{"_index":2326,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts:18",{"_index":2325,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts:44",{"_index":2320,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts:53",{"_index":2323,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts:80",{"_index":2324,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes/transaction",{"_index":373,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"coverage.html":{}}}],["stands",{"_index":1862,"title":{},"body":{"components/StatisticsPage.html":{}}}],["startdate",{"_index":1819,"title":{},"body":{"classes/Statistic.html":{}}}],["started",{"_index":2613,"title":{"index.html":{}},"body":{}}],["startseite",{"_index":2419,"title":{},"body":{"components/TutorialPage.html":{}}}],["statements",{"_index":2505,"title":{},"body":{"coverage.html":{}}}],["statistic",{"_index":932,"title":{"classes/Statistic.html":{}},"body":{"components/GroupDetailsPage.html":{},"classes/Statistic.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["statistic(new",{"_index":1946,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.alltimecost",{"_index":1951,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.alltimeincome",{"_index":1952,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.alltimetotal",{"_index":1949,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastmonthcost",{"_index":1969,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastmonthincome",{"_index":1970,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastmonthtotal",{"_index":1968,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastsixmonthscost",{"_index":1962,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastsixmonthsincome",{"_index":1963,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastsixmonthstotal",{"_index":1961,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastthreemonthscost",{"_index":1965,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastthreemonthsincome",{"_index":1966,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastthreemonthstotal",{"_index":1964,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastweekcost",{"_index":1973,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastweekincome",{"_index":1974,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastweektotal",{"_index":1972,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastyearcost",{"_index":1958,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastyearincome",{"_index":1959,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastyeartotal",{"_index":1957,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistics",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"injectables/StatisticsService.html":{}}}],["statistics'},{'name",{"_index":238,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["statistics.page",{"_index":1912,"title":{},"body":{"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{}}}],["statistics.page.html",{"_index":1851,"title":{},"body":{"components/StatisticsPage.html":{}}}],["statistics.page.scss",{"_index":1850,"title":{},"body":{"components/StatisticsPage.html":{}}}],["statistics.service",{"_index":552,"title":{},"body":{"injectables/BadgeService.html":{}}}],["statisticspage",{"_index":237,"title":{"components/StatisticsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["statisticspagemodule",{"_index":1906,"title":{"modules/StatisticsPageModule.html":{}},"body":{"modules/StatisticsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["statisticspageroutingmodule",{"_index":1910,"title":{"modules/StatisticsPageRoutingModule.html":{}},"body":{"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["statisticsservice",{"_index":551,"title":{"injectables/StatisticsService.html":{}},"body":{"injectables/BadgeService.html":{},"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["statistik",{"_index":1112,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["statistiken",{"_index":1899,"title":{},"body":{"components/StatisticsPage.html":{}}}],["stats",{"_index":554,"title":{},"body":{"injectables/BadgeService.html":{},"components/StatisticsPage.html":{}}}],["stats:statisticsservice",{"_index":555,"title":{},"body":{"injectables/BadgeService.html":{}}}],["statsarray",{"_index":933,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["statsarray[currentstats",{"_index":1117,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["statsbutton",{"_index":938,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["statsbutton(back",{"_index":957,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["step",{"_index":1659,"title":{},"body":{"components/PrivacyPage.html":{}}}],["still",{"_index":1783,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["stimmt",{"_index":1540,"title":{},"body":{"components/PasswordPage.html":{}}}],["storagebucket",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":652,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["string",{"_index":429,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["strukturierte",{"_index":2638,"title":{},"body":{"index.html":{}}}],["style",{"_index":1491,"title":{},"body":{"components/OptionsPage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["sub",{"_index":688,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["sub.unsubscribe",{"_index":712,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["subgroups",{"_index":1130,"title":{},"body":{"components/GroupListPage.html":{}}}],["subscription",{"_index":1145,"title":{},"body":{"components/GroupListPage.html":{}}}],["successful",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendsPage.html":{}}}],["sum",{"_index":2332,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["super",{"_index":2417,"title":{},"body":{"components/TutorialPage.html":{}}}],["support",{"_index":2645,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2646,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1669,"title":{},"body":{"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{}}}],["switchtostats",{"_index":939,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["tab",{"_index":2207,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["table",{"_index":2571,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2570,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1901,"title":{},"body":{"components/StatisticsPage.html":{}}}],["takepicture",{"_index":2051,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["takes",{"_index":756,"title":{},"body":{"components/FriendsPage.html":{},"injectables/GroupService.html":{}}}],["targeted",{"_index":2215,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["teilnehmer",{"_index":2307,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["teilnehmern",{"_index":2634,"title":{},"body":{"index.html":{}}}],["telerik",{"_index":2599,"title":{},"body":{"dependencies.html":{}}}],["temp",{"_index":1224,"title":{},"body":{"injectables/GroupService.html":{}}}],["temp.creator.tostring",{"_index":1231,"title":{},"body":{"injectables/GroupService.html":{}}}],["temp.members",{"_index":1227,"title":{},"body":{"injectables/GroupService.html":{}}}],["temp.name",{"_index":1234,"title":{},"body":{"injectables/GroupService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["text",{"_index":590,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{}}}],["textarea",{"_index":1637,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["then((result",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(async",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(data",{"_index":2145,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["then(snapshot",{"_index":2501,"title":{},"body":{"injectables/UserService.html":{}}}],["thirdmsg",{"_index":1590,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.#searchbar",{"_index":141,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["this.#searchbar.value",{"_index":146,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["this.accepted",{"_index":2232,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.addfriendsoutput",{"_index":778,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.af.authstate.subscribe(afuser",{"_index":1884,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.af.authstate.subscribe(user",{"_index":689,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.af.authstate.subscribe(useraf",{"_index":1711,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.alertcontroller.create",{"_index":1019,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.allselected",{"_index":2306,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.alltransactions",{"_index":1047,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.alltransactions.push(transaction",{"_index":1054,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.amount",{"_index":1609,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.amount}€\\n",{"_index":1624,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.auth.createuserwithemailandpassword(email",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.currentuser.then(user",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.sendpasswordresetemail(email).then",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.signinwithemailandpassword(email.tolocalelowercase",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.signout",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.currentuser).updatepassword(this.newpassword1",{"_index":1543,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.authservice.currentuser.id",{"_index":2250,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.authservice.delete",{"_index":1686,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.authservice.login(email",{"_index":1372,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.logout",{"_index":1687,"title":{},"body":{"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["this.authservice.register(this.email",{"_index":1742,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.awardservice.findbyid(element).then(item",{"_index":704,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["this.badges",{"_index":696,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["this.badges.push(item",{"_index":705,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["this.badgeservice.setbadges(item2",{"_index":699,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.badgeservice.setbadges(user",{"_index":1715,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.calculatestakes",{"_index":2304,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.changestats(30",{"_index":1890,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.checkselectedfriendscontainfriend(friend",{"_index":149,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.createdate",{"_index":2373,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["this.createpiechart",{"_index":1075,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.createpiechart(30",{"_index":1889,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.creator",{"_index":2005,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["this.currentcost",{"_index":1063,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentincome",{"_index":1065,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentstats",{"_index":1097,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentstats>0",{"_index":1096,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currenttotal",{"_index":1061,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currenttransactions",{"_index":1045,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currenttransactions.push(transaction",{"_index":1056,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentuser",{"_index":119,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.currentuser).then(friend",{"_index":783,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.currentuser).then(item2",{"_index":693,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.currentuser).then(members",{"_index":889,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["this.currentuser).then(opentransactions",{"_index":1041,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentuser.friends",{"_index":130,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.currentuser.id",{"_index":123,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendProfilePage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.currentuser.id).then(res",{"_index":787,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.delete(group",{"_index":1268,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.deleteuserfromgroup(user",{"_index":1262,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.displayname_currentuser",{"_index":1613,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.displayname_otheruser",{"_index":1603,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.displayname_otheruser},\\n",{"_index":1617,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.duedate",{"_index":1611,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.errormessage",{"_index":1036,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.errors.clear",{"_index":1530,"title":{},"body":{"components/PasswordPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["this.errors.set(\"addfriendsoutput",{"_index":789,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.errors.set(\"addfriendsoutputcolor",{"_index":790,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.errors.set('amount",{"_index":2127,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["this.errors.set('newpassword1",{"_index":1536,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.errors.set('newpassword2",{"_index":1538,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.errors.set('oldpassword",{"_index":1532,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.errors.set('purpose",{"_index":2126,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.errors.size",{"_index":1542,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.fairlydistributedcosts",{"_index":2294,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.fairlydistributedprice",{"_index":2144,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.filteredfriendsandmembers",{"_index":143,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.filteredfriendsandmembers.push(member",{"_index":126,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.filteredfriendsandmembers.push(user",{"_index":136,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.filteredgroups",{"_index":1149,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.filteredgroups.length",{"_index":1165,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.filteredgroups.splice(0",{"_index":1164,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.findbyid(friend).then(result",{"_index":2494,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findgroup",{"_index":1317,"title":{},"body":{"components/InvitePage.html":{}}}],["this.finished",{"_index":2043,"title":{},"body":{"classes/Transaction-1.html":{}}}],["this.firstmsg",{"_index":1615,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.friends",{"_index":780,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.friends.push(friend",{"_index":784,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.friendsandmembers",{"_index":147,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.friendsandmembers.filter(r",{"_index":144,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.friendsandmembers.push(member",{"_index":125,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.friendsandmembers.push(user",{"_index":135,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.friendsservice.addfriend(this.addfriendinput",{"_index":786,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.friendsservice.addfriend(this.user.email",{"_index":713,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.friendsservice.findbyid(element",{"_index":782,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.friendsservice.findbyid(item[0",{"_index":692,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.friendsservice.isfriends(this.user",{"_index":701,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.fromgroup",{"_index":2100,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.getcurrentamount",{"_index":2336,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.getdays(new",{"_index":1955,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["this.gid",{"_index":2000,"title":{},"body":{"classes/Transaction.html":{}}}],["this.group",{"_index":117,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"classes/Transaction-1.html":{}}}],["this.group.creator",{"_index":894,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["this.group.id",{"_index":1070,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.group.members",{"_index":121,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/InvitePage.html":{}}}],["this.group.members.foreach(friend",{"_index":161,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.group.members.foreach(member",{"_index":122,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.group.members.length",{"_index":893,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["this.group.members.push(this.currentuser",{"_index":895,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["this.group.members.splice(0",{"_index":1407,"title":{},"body":{"components/MemberViewPage.html":{}}}],["this.group.members[i].id",{"_index":1335,"title":{},"body":{"components/InvitePage.html":{}}}],["this.group.name",{"_index":1028,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.group.name.length",{"_index":891,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["this.groupcollection",{"_index":1216,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.add(this.copyandprepare(group",{"_index":1219,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.doc(group.id).delete",{"_index":1221,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.doc(group.id).update(this.copyandprepare(group",{"_index":1220,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.doc(id).get().topromise",{"_index":1223,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.get().topromise",{"_index":1246,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.get().topromise().then(doc",{"_index":1235,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.valuechanges({idfield",{"_index":1218,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupfound",{"_index":1331,"title":{},"body":{"components/InvitePage.html":{}}}],["this.groupname",{"_index":1605,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{}}}],["this.groupname}\\n",{"_index":1620,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.groups",{"_index":1152,"title":{},"body":{"components/GroupListPage.html":{},"components/TransactionCreatePage.html":{}}}],["this.groups.filter(r",{"_index":1150,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.groups.push(this.groupservice.creategroup(group",{"_index":1162,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.groupservice.addmembers(this.group",{"_index":888,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["this.groupservice.addusertogroup(this.group,this.currentuser",{"_index":1337,"title":{},"body":{"components/InvitePage.html":{}}}],["this.groupservice.delete(this.group",{"_index":1039,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.groupservice.deleteuserfromallgroups(this.user",{"_index":1684,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.groupservice.deleteuserfromgroup(this.currentuser",{"_index":1044,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.groupservice.getall().subscribe(groups",{"_index":1154,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.groupservice.getgroupbyid(groupid).then(g",{"_index":1050,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["this.groupservice.getgroupbyid(groupid[1]).then(group",{"_index":1329,"title":{},"body":{"components/InvitePage.html":{}}}],["this.groupservice.getgroupbyid(this.route.snapshot.parammap.get('groupid')).then(group",{"_index":2101,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.groupservice.getgroupsbyuserid(this.currentuser.id).then(groups",{"_index":2114,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.groupservice.new(this.group",{"_index":896,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["this.groupservice.update(this.group",{"_index":1007,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["this.hasstake",{"_index":2226,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.iconname",{"_index":1368,"title":{},"body":{"components/LoginPage.html":{}}}],["this.id",{"_index":1794,"title":{},"body":{"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.income",{"_index":1891,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.inputtype",{"_index":1367,"title":{},"body":{"components/LoginPage.html":{}}}],["this.isfriend",{"_index":700,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.isfriends(curuser",{"_index":852,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.isfriends(ret",{"_index":830,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.lastdate",{"_index":2371,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["this.message",{"_index":1332,"title":{},"body":{"components/InvitePage.html":{}}}],["this.modalcontroller.create",{"_index":1270,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.modalcontroller.dismiss(msg",{"_index":1629,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.modalcontroller.dismiss(this.newselectedmembers",{"_index":188,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.navctrl.back",{"_index":897,"title":{},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{}}}],["this.navctrl.pop",{"_index":2140,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.newestdate",{"_index":1845,"title":{},"body":{"classes/Statistic.html":{}}}],["this.newpassword1",{"_index":1527,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.newpassword1.length",{"_index":1535,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.newpassword2",{"_index":1528,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.newpassword2.length",{"_index":1537,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.newselectedmembers",{"_index":150,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.filter(f",{"_index":151,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.foreach(f",{"_index":156,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.includes(friend",{"_index":162,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.length",{"_index":128,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.push(friend",{"_index":154,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.splice(0",{"_index":127,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.nextdate",{"_index":2372,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["this.notpaid",{"_index":2233,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.oldpassword",{"_index":1526,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.oldpassword.length",{"_index":1531,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.oldtransactions",{"_index":1046,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.oldtransactions.push(transaction",{"_index":1057,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.originaltransaction",{"_index":2370,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["this.otheruser",{"_index":1797,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["this.otheruserid",{"_index":2222,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.outcome",{"_index":1894,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.outgoing",{"_index":1796,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["this.paidandnotaccepted",{"_index":2229,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.participants",{"_index":2302,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.participants.length",{"_index":2301,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.participants.push(participant.user",{"_index":2300,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.participation.foreach(participant",{"_index":2298,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.participation.push({user",{"_index":2297,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.password",{"_index":1743,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.pending",{"_index":1795,"title":{},"body":{"classes/SimpleTransaction.html":{},"classes/Transaction.html":{}}}],["this.photo",{"_index":2004,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.pie",{"_index":1077,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["this.pie.data.datasets.foreach((dataset",{"_index":1898,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.pie.update",{"_index":1100,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["this.purchasedate",{"_index":2002,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.purpose",{"_index":1607,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.purpose}\\n",{"_index":1622,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.rhythm",{"_index":2003,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["this.route.params.subscribe(item",{"_index":691,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.route.snapshot.parammap.get('fromgroup",{"_index":2099,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":1049,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["this.router.navigate(['friend",{"_index":785,"title":{},"body":{"components/FriendsPage.html":{},"components/MemberViewPage.html":{}}}],["this.router.navigate(['friends",{"_index":1716,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.router.navigate(['group",{"_index":1168,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.router.navigate(['home",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.router.navigate(['login",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['member",{"_index":1069,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.router.navigate(['options",{"_index":1529,"title":{},"body":{"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["this.router.navigate(['profile",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/OptionsPage.html":{}}}],["this.router.navigate(['transaction",{"_index":1068,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.router.navigate(['tutorial",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate([site",{"_index":1483,"title":{},"body":{"components/OptionsPage.html":{}}}],["this.savealert(\"payment",{"_index":1479,"title":{},"body":{"components/OptionsPage.html":{}}}],["this.savealert('password",{"_index":1480,"title":{},"body":{"components/OptionsPage.html":{}}}],["this.savealert('privacy",{"_index":1481,"title":{},"body":{"components/OptionsPage.html":{}}}],["this.searchbarvisible",{"_index":142,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["this.secondmsg",{"_index":1627,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.secondpassword",{"_index":1741,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.selectallusers",{"_index":2141,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.self",{"_index":1896,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.stake",{"_index":2227,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.startdate",{"_index":1844,"title":{},"body":{"classes/Statistic.html":{}}}],["this.statistic",{"_index":1059,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.statistic.alltimecost",{"_index":1064,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.statistic.alltimeincome",{"_index":1066,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.statistic.alltimetotal",{"_index":1062,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.statisticsservice.getgroupstatistics(this.alltransactions",{"_index":1060,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.stats.getallexpensesoftime(7",{"_index":572,"title":{},"body":{"injectables/BadgeService.html":{}}}],["this.stats.getallexpensesoftime(days",{"_index":1895,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.stats.getallincomeoftime",{"_index":567,"title":{},"body":{"injectables/BadgeService.html":{}}}],["this.stats.getallincomeoftime(days",{"_index":1892,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.stats.getallselfmadetransactionsoftime(this.user.id",{"_index":1897,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.stats.getallselfmadetransactionsoftime(user.id",{"_index":556,"title":{},"body":{"injectables/BadgeService.html":{}}}],["this.subgroups",{"_index":1153,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.subgroups.unsubscribe",{"_index":1167,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.thirdmsg",{"_index":1618,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.timespan",{"_index":1846,"title":{},"body":{"classes/Statistic.html":{}}}],["this.transaction",{"_index":2103,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transaction.accepted",{"_index":2112,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.accepted.push(acceptedentry",{"_index":2123,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transaction.accepted.push({user",{"_index":2330,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.transaction.amount",{"_index":2115,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transaction.creator.id",{"_index":2119,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transaction.group",{"_index":2102,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.group.members",{"_index":2117,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.group.members.foreach(user",{"_index":2296,"title":{},"body":{"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transaction.group.members.length",{"_index":2116,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transaction.paid",{"_index":2111,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.paid.foreach(p",{"_index":2251,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transaction.paid.push(paidentry",{"_index":2124,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transaction.paid.push({user",{"_index":2331,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.transaction.participation",{"_index":2113,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.participation.foreach(entry",{"_index":2224,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transaction.participation.foreach(participation",{"_index":2333,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.transaction.participation.push(stakeentry",{"_index":2122,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transaction.participation.push({user",{"_index":2329,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.transaction.photo",{"_index":2146,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.transaction.purpose",{"_index":2125,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.rhythm",{"_index":2129,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transactions",{"_index":1888,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.transactionservice.checkalltransactionsfinishedingroup(this.group).then(opentransactions",{"_index":1034,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.transactionservice.checktransactionsfinishedingroupbyuser(this.group",{"_index":167,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{}}}],["this.transactionservice.delete(this.transaction.id",{"_index":2240,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.deletealltransactionsbyuser(this.user",{"_index":1683,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.transactionservice.deletetracker(tracker",{"_index":2245,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.findtrackerbyid(this.transaction.id).then(tracker",{"_index":2244,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.getalltransactionbygroup(this.group).then(transactions",{"_index":1052,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.transactionservice.getlocally",{"_index":2221,"title":{},"body":{"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transactionservice.getrhythmmiliseconds(this.transaction.rhythm",{"_index":2137,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transactionservice.getstakeforuser(this.currentuser",{"_index":2228,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.gettransactionbyid(docref.id).then((doc",{"_index":2130,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transactionservice.hasuserpaid(this.currentuser.id",{"_index":2230,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.persist(this.transaction).then(docref",{"_index":2305,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.transactionservice.persisttracker(tracker",{"_index":2139,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transactionservice.savelocally(this.transaction",{"_index":2142,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transactionservice.savelocally(transaction",{"_index":1067,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.transactionservice.update(this.transaction",{"_index":2247,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.waspaymentaccepted(this.currentuser.id",{"_index":2231,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionsservice.getalltransactionbyuser(item2",{"_index":697,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.transactionsservice.getalltransactionbyuser(user",{"_index":1714,"title":{},"body":{"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["this.type",{"_index":2001,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.update(curuser",{"_index":857,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.update(group",{"_index":1267,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.update(result",{"_index":2498,"title":{},"body":{"injectables/UserService.html":{}}}],["this.update(u",{"_index":856,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.user",{"_index":694,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["this.user.awards.foreach(element",{"_index":703,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["this.user.awardspublic",{"_index":711,"title":{},"body":{"components/FriendProfilePage.html":{},"components/PrivacyPage.html":{}}}],["this.user.awardspublicfriends",{"_index":702,"title":{},"body":{"components/FriendProfilePage.html":{},"components/PrivacyPage.html":{}}}],["this.user.description",{"_index":707,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.user.descriptionpublic",{"_index":706,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.user.ec_card",{"_index":1717,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.id)[0",{"_index":1893,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.user.imagepublic",{"_index":708,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.user.kreditcard",{"_index":1718,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.paypal",{"_index":1719,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.profilepic",{"_index":709,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{}}}],["this.usercollection",{"_index":442,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["this.usercollection.doc(id).delete",{"_index":2492,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usercollection.doc(id).get().topromise().then(res",{"_index":444,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["this.usercollection.doc(id).set(this.copyandprepare(user",{"_index":2491,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usercollection.doc(user.id).update(this.copyandprepare(user",{"_index":865,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["this.usercollection.get",{"_index":2499,"title":{},"body":{"injectables/UserService.html":{}}}],["this.username).then(ret",{"_index":1744,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.userold",{"_index":1462,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["this.userservice.delete(this.user.id",{"_index":1685,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.userservice.deleteuserfromfriends(this.user",{"_index":1682,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.userservice.findbyemail(email.tolocalelowercase()).then(async",{"_index":840,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.userservice.findbyid(afuser.uid).then(user",{"_index":1886,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.userservice.findbyid(currentuserid).then(async",{"_index":850,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.userservice.findbyid(friend.tostring()).then(user",{"_index":134,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.userservice.findbyid(groups[i].creator.tostring()).then(creator",{"_index":1252,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.userservice.findbyid(groups[i].members[j].tostring()).then(member",{"_index":1258,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.userservice.findbyid(m.tostring()).then(u",{"_index":1243,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.userservice.findbyid(member.tostring()).then(user",{"_index":1228,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.userservice.findbyid(result.user.uid).then(user",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyid(user.uid).then(result",{"_index":690,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.userservice.findbyid(user.uid).then(value",{"_index":779,"title":{},"body":{"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["this.userservice.findbyid(useraf.uid).then(user",{"_index":1713,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.userservice.persist(result.user.uid",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(this.user",{"_index":1471,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["this.userservice.update(user",{"_index":576,"title":{},"body":{"injectables/BadgeService.html":{}}}],["this.view",{"_index":1074,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["tied",{"_index":1786,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["time",{"_index":960,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["timespan",{"_index":1820,"title":{},"body":{"classes/Statistic.html":{}}}],["title",{"_index":593,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["today",{"_index":1945,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["toggleselectall",{"_index":2274,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["top",{"_index":598,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{}}}],["topromise",{"_index":2500,"title":{},"body":{"injectables/UserService.html":{}}}],["total",{"_index":2028,"title":{},"body":{"classes/Transaction-1.html":{}}}],["tracker",{"_index":2132,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["transaction",{"_index":240,"title":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"coverage.html":{}}}],["transaction.accepted",{"_index":1785,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["transaction.amount",{"_index":1116,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["transaction.creator",{"_index":2134,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["transaction.creator.displayname",{"_index":1115,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["transaction.group.name",{"_index":2152,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["transaction.id",{"_index":1778,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["transaction.model",{"_index":2369,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["transaction.paid",{"_index":1784,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["transaction.participation",{"_index":1779,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["transaction.purchasedate",{"_index":1823,"title":{},"body":{"classes/Statistic.html":{},"injectables/StatisticsService.html":{}}}],["transaction.purpose",{"_index":1114,"title":{},"body":{"components/GroupDetailsPage.html":{},"classes/SimpleTransaction.html":{},"components/TransactionDetailsPage.html":{}}}],["transaction.type",{"_index":1950,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["transaction/transaction",{"_index":1298,"title":{},"body":{"modules/HomePageModule.html":{}}}],["transactioncreatepage",{"_index":239,"title":{"components/TransactionCreatePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["transactioncreatepagemodule",{"_index":1295,"title":{"modules/TransactionCreatePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules.html":{},"overview.html":{}}}],["transactioncreatepageroutingmodule",{"_index":2176,"title":{"modules/TransactionCreatePageRoutingModule.html":{}},"body":{"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactiondetailspage",{"_index":241,"title":{"components/TransactionDetailsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["transactiondetailspagemodule",{"_index":2263,"title":{"modules/TransactionDetailsPageModule.html":{}},"body":{"modules/TransactionDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["transactiondetailspageroutingmodule",{"_index":2267,"title":{"modules/TransactionDetailsPageRoutingModule.html":{}},"body":{"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionparticipantspage",{"_index":242,"title":{"components/TransactionParticipantsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["transactionparticipantspagemodule",{"_index":2309,"title":{"modules/TransactionParticipantsPageModule.html":{}},"body":{"modules/TransactionParticipantsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionparticipantspageroutingmodule",{"_index":2313,"title":{"modules/TransactionParticipantsPageRoutingModule.html":{}},"body":{"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactions",{"_index":540,"title":{},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionParticipantsPage.html":{},"classes/TransactionTracker.html":{}}}],["transactions.foreach(item",{"_index":1981,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["transactions.foreach(transaction",{"_index":1053,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/StatisticsService.html":{}}}],["transactionservice",{"_index":111,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"coverage.html":{}}}],["transactionservice.getlocally",{"_index":2327,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["transactionservice.getstakeforuser(member",{"_index":2262,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["transactionsservice",{"_index":683,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["transactionstakespage",{"_index":244,"title":{"components/TransactionStakesPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["transactionstakespagemodule",{"_index":2345,"title":{"modules/TransactionStakesPageModule.html":{}},"body":{"modules/TransactionStakesPageModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionstakespageroutingmodule",{"_index":2349,"title":{"modules/TransactionStakesPageRoutingModule.html":{}},"body":{"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactiontracker",{"_index":2073,"title":{"classes/TransactionTracker.html":{}},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"coverage.html":{}}}],["transactiontracker(transaction",{"_index":2133,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["transaktion",{"_index":1108,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["transaktion:\\n",{"_index":1619,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["transaktionen",{"_index":183,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"index.html":{}}}],["transcation",{"_index":2037,"title":{},"body":{"classes/Transaction-1.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["true",{"_index":132,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PrivacyPage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"miscellaneous/variables.html":{}}}],["true).then(res",{"_index":1887,"title":{},"body":{"components/StatisticsPage.html":{}}}],["true).then(transactions",{"_index":698,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["ts",{"_index":1316,"title":{},"body":{"components/InvitePage.html":{},"classes/Statistic.html":{},"injectables/StatisticsService.html":{}}}],["tslib",{"_index":2608,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":247,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{}}}],["tutorial.page",{"_index":2434,"title":{},"body":{"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["tutorial.page.html",{"_index":2376,"title":{},"body":{"components/TutorialPage.html":{}}}],["tutorial.page.scss",{"_index":2375,"title":{},"body":{"components/TutorialPage.html":{}}}],["tutorialpage",{"_index":246,"title":{"components/TutorialPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tutorialpagemodule",{"_index":2428,"title":{"modules/TutorialPageModule.html":{}},"body":{"modules/TutorialPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tutorialpageroutingmodule",{"_index":2432,"title":{"modules/TutorialPageRoutingModule.html":{}},"body":{"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["two",{"_index":822,"title":{},"body":{"injectables/FriendsService.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["typ",{"_index":2255,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["täglich",{"_index":2161,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["u",{"_index":847,"title":{},"body":{"injectables/FriendsService.html":{}}}],["u.friends.push(currentuserid",{"_index":855,"title":{},"body":{"injectables/FriendsService.html":{}}}],["unbekannter",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["und",{"_index":1905,"title":{},"body":{"components/StatisticsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["undefined",{"_index":849,"title":{},"body":{"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{}}}],["unfilters",{"_index":1134,"title":{},"body":{"components/GroupListPage.html":{}}}],["ungültige",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["unsere",{"_index":2378,"title":{},"body":{"components/TutorialPage.html":{}}}],["unserer",{"_index":2425,"title":{},"body":{"components/TutorialPage.html":{}}}],["unten",{"_index":2405,"title":{},"body":{"components/TutorialPage.html":{}}}],["up",{"_index":2361,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["update",{"_index":807,"title":{},"body":{"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["update(group",{"_index":1212,"title":{},"body":{"injectables/GroupService.html":{}}}],["update(user",{"_index":824,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":826,"title":{},"body":{"injectables/FriendsService.html":{},"components/StatisticsPage.html":{}}}],["updates",{"_index":967,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["upload",{"_index":2206,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["usage",{"_index":1771,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["use",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["useclass",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":15,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["user",{"_index":51,"title":{"classes/User.html":{}},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.awards",{"_index":2483,"title":{},"body":{"injectables/UserService.html":{}}}],["user.awards.includes(\"2jgbrlrtuci9cjxxwv5g",{"_index":559,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.includes(\"dhiv113gmkqmxesxqf2k",{"_index":565,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.includes(\"fdb031aej8qazbadvia8",{"_index":570,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.includes(\"knugsj8xbsuwc0yvdysu",{"_index":563,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.includes(\"pthz34gvf4eb6qlxpavv",{"_index":574,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"2jgbrlrtuci9cjxxwv5g",{"_index":560,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"dhiv113gmkqmxesxqf2k",{"_index":566,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"fdb031aej8qazbadvia8",{"_index":571,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"knugsj8xbsuwc0yvdysu",{"_index":564,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"pthz34gvf4eb6qlxpavv",{"_index":575,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awardspublic",{"_index":1654,"title":{},"body":{"components/PrivacyPage.html":{},"injectables/UserService.html":{}}}],["user.awardspublicfriends",{"_index":1655,"title":{},"body":{"components/PrivacyPage.html":{},"injectables/UserService.html":{}}}],["user.cash",{"_index":2486,"title":{},"body":{"injectables/UserService.html":{}}}],["user.delete().then",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.description",{"_index":723,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["user.descriptionpublic",{"_index":2485,"title":{},"body":{"injectables/UserService.html":{}}}],["user.displayname",{"_index":722,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["user.ec_card",{"_index":2487,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email",{"_index":2481,"title":{},"body":{"injectables/UserService.html":{}}}],["user.friends",{"_index":2472,"title":{},"body":{"injectables/UserService.html":{}}}],["user.friends.foreach(friend",{"_index":2493,"title":{},"body":{"injectables/UserService.html":{}}}],["user.friends.length",{"_index":561,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.id",{"_index":1255,"title":{},"body":{"injectables/GroupService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"injectables/UserService.html":{}}}],["user.id)[0",{"_index":568,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.imagepublic",{"_index":2490,"title":{},"body":{"injectables/UserService.html":{}}}],["user.kreditcard",{"_index":2489,"title":{},"body":{"injectables/UserService.html":{}}}],["user.model",{"_index":874,"title":{},"body":{"classes/Group.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["user.paypal",{"_index":2488,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepic",{"_index":2480,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{}}}],["user1",{"_index":823,"title":{},"body":{"injectables/FriendsService.html":{}}}],["user1.friends",{"_index":863,"title":{},"body":{"injectables/FriendsService.html":{}}}],["user2",{"_index":820,"title":{},"body":{"injectables/FriendsService.html":{}}}],["user2.id",{"_index":862,"title":{},"body":{"injectables/FriendsService.html":{}}}],["useraf",{"_index":1712,"title":{},"body":{"components/ProfilePage.html":{}}}],["usercollection",{"_index":426,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["userid",{"_index":1923,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["username",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterPage.html":{},"injectables/UserService.html":{}}}],["userold",{"_index":1422,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["users",{"_index":812,"title":{},"body":{"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["userservice",{"_index":105,"title":{"injectables/UserService.html":{}},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uses",{"_index":86,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{}}}],["value",{"_index":72,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"miscellaneous/variables.html":{}}}],["value.friends.foreach(async",{"_index":781,"title":{},"body":{"components/FriendsPage.html":{}}}],["var",{"_index":198,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["variable",{"_index":1448,"title":{},"body":{"components/OptionsPage.html":{},"coverage.html":{}}}],["variables",{"_index":653,"title":{"miscellaneous/variables.html":{}},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"miscellaneous/variables.html":{}}}],["varibals",{"_index":1510,"title":{},"body":{"components/PasswordPage.html":{}}}],["vereinfacht.man",{"_index":2624,"title":{},"body":{"index.html":{}}}],["vergessen",{"_index":1376,"title":{},"body":{"components/LoginPage.html":{}}}],["verlassen",{"_index":1040,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["version",{"_index":1766,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["verwefen",{"_index":1466,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["via",{"_index":631,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["viel",{"_index":2423,"title":{},"body":{"components/TutorialPage.html":{}}}],["view",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["view'},{'name",{"_index":223,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["view.module').then",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["view.module.ts",{"_index":1416,"title":{},"body":{"modules/MemberViewPageModule.html":{}}}],["view.page",{"_index":1417,"title":{},"body":{"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{}}}],["view.page.html",{"_index":1396,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.scss",{"_index":1395,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts",{"_index":1394,"title":{},"body":{"components/MemberViewPage.html":{},"coverage.html":{}}}],["view.page.ts:23",{"_index":1403,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts:24",{"_index":1402,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts:25",{"_index":1401,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts:55",{"_index":1398,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts:89",{"_index":1400,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view/member",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":100,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/StatisticsPage.html":{}}}],["viewchild('piechart",{"_index":986,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["viewchild(ionsearchbar",{"_index":137,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["viewed",{"_index":2188,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["viewmembers",{"_index":940,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["viewtransaction",{"_index":941,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["viewtransaction(transaction",{"_index":970,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["viewuser",{"_index":1397,"title":{},"body":{"components/MemberViewPage.html":{}}}],["viewuser(id",{"_index":1399,"title":{},"body":{"components/MemberViewPage.html":{}}}],["visibility",{"_index":1364,"title":{},"body":{"components/LoginPage.html":{}}}],["visible",{"_index":81,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{},"components/LoginPage.html":{}}}],["visible/disguised",{"_index":1356,"title":{},"body":{"components/LoginPage.html":{}}}],["void",{"_index":57,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["von",{"_index":2344,"title":{},"body":{"components/TransactionStakesPage.html":{},"index.html":{}}}],["vorhanden",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/PaymentPage.html":{}}}],["way",{"_index":1282,"title":{},"body":{"injectables/GroupService.html":{}}}],["web",{"_index":2618,"title":{},"body":{"index.html":{}}}],["week",{"_index":1971,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["weekly",{"_index":2235,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["weight",{"_index":735,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["well",{"_index":1656,"title":{},"body":{"components/PrivacyPage.html":{}}}],["wem",{"_index":2641,"title":{},"body":{"index.html":{}}}],["wenn",{"_index":2389,"title":{},"body":{"components/TutorialPage.html":{}}}],["wer",{"_index":2643,"title":{},"body":{"index.html":{}}}],["werden",{"_index":177,"title":{},"body":{"components/AddMembersPage.html":{},"components/PrivacyPage.html":{}}}],["werden.dadurch",{"_index":2636,"title":{},"body":{"index.html":{}}}],["wg.in",{"_index":2632,"title":{},"body":{"index.html":{}}}],["whether",{"_index":663,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["white",{"_index":1633,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["whose",{"_index":2041,"title":{},"body":{"classes/Transaction-1.html":{}}}],["width",{"_index":607,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["wie",{"_index":2628,"title":{},"body":{"index.html":{}}}],["wiederholen",{"_index":1539,"title":{},"body":{"components/PasswordPage.html":{},"components/RegisterPage.html":{}}}],["wiederkehren",{"_index":2241,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["willkommen",{"_index":2377,"title":{},"body":{"components/TutorialPage.html":{}}}],["window.location.search",{"_index":1327,"title":{},"body":{"components/InvitePage.html":{}}}],["wird",{"_index":2622,"title":{},"body":{"index.html":{}}}],["wirklich",{"_index":1678,"title":{},"body":{"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{}}}],["without",{"_index":1197,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["woche",{"_index":998,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["work",{"_index":549,"title":{},"body":{"injectables/BadgeService.html":{}}}],["wrap",{"_index":1636,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["wöchentlich",{"_index":2162,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["yc5ccl30k1",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":1954,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["yearly",{"_index":2237,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["years",{"_index":2090,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["yes",{"_index":530,"title":{},"body":{"classes/Award.html":{},"classes/Group.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["z.b",{"_index":2629,"title":{},"body":{"index.html":{}}}],["zahlungserinnerung",{"_index":1630,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["zahlungsmittel",{"_index":1485,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{}}}],["zeichen",{"_index":905,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["zeitraum",{"_index":1900,"title":{},"body":{"components/StatisticsPage.html":{}}}],["zone.js",{"_index":2610,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":261,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"overview.html":{}}}],["zu",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"components/TutorialPage.html":{}}}],["zum",{"_index":1749,"title":{},"body":{"components/RegisterPage.html":{}}}],["zurück",{"_index":588,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["zweck",{"_index":1621,"title":{},"body":{"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddMembersPage.html":{"url":"components/AddMembersPage.html","title":"component - AddMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/add-members/add-members.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is used to add new members to the group\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-members\n            \n\n            \n                styleUrls\n                ./add-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #searchbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                filteredFriendsAndMembers\n                            \n                            \n                                friendsAndMembers\n                            \n                            \n                                group\n                            \n                            \n                                newSelectedMembers\n                            \n                            \n                                searchbarVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                cancelSearch\n                            \n                            \n                                checkSelectedFriendsContainFriend\n                            \n                            \n                                doSearch\n                            \n                            \n                                select\n                            \n                            \n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchbar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:146\n                \n            \n\n\n            \n                \n                    This function adds the new selected user to the group\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSearch\n                        \n                    \n                \n            \n            \n                \ncancelSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:111\n                \n            \n\n\n            \n                \n                    This function deactivates the searchbar and hides it\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkSelectedFriendsContainFriend\n                        \n                    \n                \n            \n            \n                \ncheckSelectedFriendsContainFriend(friend: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:133\n                \n            \n\n\n            \n                \n                    This function checks if the selected user is already a group member\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    friend\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe selected user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doSearch\n                        \n                    \n                \n            \n            \n                \ndoSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:103\n                \n            \n\n\n            \n                \n                    this function filters the friends and members with the value in search bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n            \n                \nselect(friend: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:121\n                \n            \n\n\n            \n                \n                    This function is used to push or deleted the selected friend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    friend\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe selected user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVisible\n                        \n                    \n                \n            \n            \n                \nsetVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:96\n                \n            \n\n\n            \n                \n                    this function makes the searchbar visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #searchbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonSearchbar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:35\n                        \n                    \n\n            \n                \n                    the user who currently uses the app\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFriendsAndMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:39\n                        \n                    \n\n            \n                \n                    array of all friends and members with filter from searchbar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendsAndMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:23\n                        \n                    \n\n            \n                \n                    array of all friends and group members\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:31\n                        \n                    \n\n            \n                \n                    the selected group from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSelectedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:27\n                        \n                    \n\n            \n                \n                    new selected user for group\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchbarVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:43\n                        \n                    \n\n            \n                \n                    boolean if searchbar visible or not\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchbar\n                    \n                \n\n\n                \n                    \n                        setsearchbar(sb: IonSearchbar)\n                    \n                \n                            \n                                \n                                    Defined in src/app/group/add-members/add-members.page.ts:86\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            sb\n                                                    \n                                                            \n                                                                        IonSearchbar\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {IonSearchbar, ModalController, NavParams} from \"@ionic/angular\";\nimport {UserService} from 'src/app/services/user.service';\nimport {User} from \"../../models/user.model\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Group} from \"../../models/group.model\";\nimport {TransactionService} from \"../../services/transaction.service\";\n\n/**\n * This class is used to add new members to the group\n */\n@Component({\n  selector: 'app-add-members',\n  templateUrl: './add-members.page.html',\n  styleUrls: ['./add-members.page.scss'],\n})\n\nexport class AddMembersPage implements OnInit {\n\n  /**\n   array of all friends and group members\n   */\n  friendsAndMembers: User[] = [];\n  /**\n   new selected user for group\n   */\n  newSelectedMembers: User[] = [];\n  /**\n   the selected group from user\n   */\n  group: Group;\n  /**\n   the user who currently uses the app\n   */\n  currentUser: User;\n  /**\n   array of all friends and members with filter from searchbar\n   */\n  filteredFriendsAndMembers: User[] = [];\n  /**\n   boolean if searchbar visible or not\n   */\n  searchbarVisible = false;\n\n  /**\n   * @ignore\n   */\n  constructor(private modalController: ModalController,\n              public navParams: NavParams,\n              public authService: AuthService,\n              public transactionService: TransactionService,\n              public userService: UserService) {\n    this.group = navParams.get('groupParam');\n    this.currentUser = navParams.get('currentUserParam');\n    if (this.group.members) {\n      this.group.members.forEach(member => {\n        if (this.currentUser.id != member.id) {\n          this.friendsAndMembers.push(member);\n          this.filteredFriendsAndMembers.push(member);\n        }\n      });\n      this.newSelectedMembers.splice(0, this.newSelectedMembers.length, ...this.group.members);\n    }\n    let friendIsMember;\n    for (let friend of this.currentUser.friends) {\n      friendIsMember = false;\n      if (this.group.members) {\n        for (let member of this.group.members) {\n          if (friend.toString() == member.id) {\n            friendIsMember = true;\n            break;\n          }\n        }\n      }\n      if (!friendIsMember) {\n        this.userService.findById(friend.toString()).then(user => {\n          this.friendsAndMembers.push(user);\n          this.filteredFriendsAndMembers.push(user);\n        });\n      }\n    }\n  }\n\n  #searchbar: IonSearchbar;\n  @ViewChild(IonSearchbar)\n  set searchbar(sb: IonSearchbar) {\n    if (sb) {\n      sb.setFocus();\n      this.#searchbar = sb;\n    }\n  }\n\n  /**\n   * this function makes the searchbar visible\n   */\n  setVisible() {\n    this.searchbarVisible = true;\n  }\n\n  /**\n   * this function filters the friends and members with the value in search bar\n   */\n  doSearch() {\n    this.filteredFriendsAndMembers = this.friendsAndMembers.filter(r =>\n      r.displayName.toLowerCase().includes(this.#searchbar.value.toLowerCase()))\n  }\n\n  /**\n   * This function deactivates the searchbar and hides it\n   */\n  cancelSearch() {\n    this.#searchbar.value = \"\";\n    this.filteredFriendsAndMembers = this.friendsAndMembers;\n    this.searchbarVisible = false;\n  }\n\n  /**\n   * This function is used to push or deleted the selected friend\n   * @param friend - the selected user\n   */\n  select(friend: User) {\n    if (this.checkSelectedFriendsContainFriend(friend)) {\n      this.newSelectedMembers = this.newSelectedMembers.filter(f => f.id != friend.id);\n    } else {\n      this.newSelectedMembers.push(friend);\n    }\n  }\n\n  /**\n   * This function checks if the selected user is already a group member\n   * @param friend - the selected user\n   */\n  checkSelectedFriendsContainFriend(friend: User): boolean {\n    let ret = false;\n    this.newSelectedMembers.forEach(f => {\n      if (f.id == friend.id) {\n        ret = true;\n      }\n    });\n    return ret;\n  }\n\n  /**\n   * This function adds the new selected user to the group\n   */\n  async add() {\n    let removedFriend: User[] = [];\n    let friendsWithOpenTransactions: User[] = [];\n    let groupSizeGreaterOne: boolean = true;\n    if (this.group.members) {\n      this.group.members.forEach(friend => {\n        if (!this.newSelectedMembers.includes(friend)) {\n          removedFriend.push(friend);\n        }\n      });\n      for (const friend of removedFriend) {\n        let open = await this.transactionService.checkTransactionsFinishedInGroupByUser(this.group, friend);\n        if (open) {\n          friendsWithOpenTransactions.push(friend);\n        }\n      }\n    } else {\n      groupSizeGreaterOne = false;\n    }\n    if (groupSizeGreaterOne && friendsWithOpenTransactions.length > 0) {\n      let msg = `Diese Auswahl kann nicht bestätigt werden, da noch folgende Freunde offene Transaktionen haben:\\n`;\n      friendsWithOpenTransactions.forEach(friend => {\n        msg += `${friend.displayName}\\n`\n      });\n      this.newSelectedMembers = this.group.members;\n      alert(msg)\n    } else {\n      await this.modalController.dismiss(this.newSelectedMembers);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Freunde hinzufügen\n    \n      \n    \n    \n    \n  \n\n\n\n  \n    \n      \n        {{friend.displayName}}\n      \n      \n    \n  \n  \n    Abbrechen\n    \n      Bestätigen\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./add-members.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Freunde hinzufügen                                            {{friend.displayName}}                        Abbrechen          Bestätigen      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddMembersPageModule.html":{"url":"modules/AddMembersPageModule.html","title":"module - AddMembersPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AddMembersPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AddMembersPageModule\n\n\n\ncluster_AddMembersPageModule_declarations\n\n\n\ncluster_AddMembersPageModule_imports\n\n\n\n\nAddMembersPage\n\nAddMembersPage\n\n\n\nAddMembersPageModule\n\nAddMembersPageModule\n\nAddMembersPageModule -->\n\nAddMembersPage->AddMembersPageModule\n\n\n\n\n\nAddMembersPageRoutingModule\n\nAddMembersPageRoutingModule\n\nAddMembersPageModule -->\n\nAddMembersPageRoutingModule->AddMembersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/add-members/add-members.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddMembersPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddMembersPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddMembersPageRoutingModule } from './add-members-routing.module';\n\nimport { AddMembersPage } from './add-members.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddMembersPageRoutingModule\n  ],\n  declarations: [AddMembersPage]\n})\nexport class AddMembersPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddMembersPageRoutingModule.html":{"url":"modules/AddMembersPageRoutingModule.html","title":"module - AddMembersPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AddMembersPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/add-members/add-members-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddMembersPage } from './add-members.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddMembersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddMembersPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {AngularFireModule} from \"@angular/fire\";\nimport {AngularFirestoreModule} from \"@angular/fire/firestore\";\nimport {AngularFireAuthModule} from \"@angular/fire/auth\";\nimport {environment} from \"../environments/environment\";\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AppRoutingModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParagraphText\n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'group-create',\n    loadChildren: () => \"import('./group/group-create/group-create.module').then( m => m.GroupCreatePageModule)\"\n  },\n  {\n    path: 'group-list',\n    loadChildren: () => \"import('./group/group-list/group-list.module').then( m => m.GroupListPageModule)\"\n  },\n  {\n    path: 'group-details',\n    loadChildren: () => \"import('./group/group-details/group-details.module').then( m => m.GroupDetailsPageModule)\"\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile/profile.module').then( m => m.ProfilePageModule)\"\n  },\n  {\n    path: 'statistics',\n    loadChildren: () => \"import('./profile/statistics/statistics.module').then( m => m.StatisticsPageModule)\"\n  },\n  {\n    path: 'friends',\n    loadChildren: () => \"import('./profile/friends/friends.module').then( m => m.FriendsPageModule)\"\n  },\n  {\n    path: 'options',\n    loadChildren: () => \"import('./profile/options/options.module').then( m => m.OptionsPageModule)\"\n  },\n  {\n    path: 'transaction-create',\n    loadChildren: () => \"import('./transaction/transaction-create/transaction-create.module').then( m => m.TransactionCreatePageModule)\"\n  },\n  {\n    path: 'transaction-participants',\n    loadChildren: () => \"import('./transaction/transaction-participants/transaction-participants.module').then(m => m.TransactionParticipantsPageModule)\"\n  },\n  {\n    path: 'transaction-details',\n    loadChildren: () => \"import('./transaction/transaction-details/transaction-details.module').then( m => m.TransactionDetailsPageModule)\"\n  },\n  {\n    path: 'transaction-stakes',\n    loadChildren: () => \"import('./transaction/transaction-stakes/transaction-stakes.module').then(m => m.TransactionStakesPageModule)\"\n  },\n  {\n    path: 'password',\n    loadChildren: () => \"import('./profile/password/password.module').then( m => m.PasswordPageModule)\"\n  },\n  {\n    path: 'payment',\n    loadChildren: () => \"import('./profile/payment/payment.module').then( m => m.PaymentPageModule)\"\n  },\n  {\n    path: 'privacy',\n    loadChildren: () => \"import('./profile/privacy/privacy.module').then( m => m.PrivacyPageModule)\"\n  },\n  {\n    path: 'friend-profile',\n    loadChildren: () => \"import('./profile/friend-profile/friend-profile.module').then( m => m.FriendProfilePageModule)\"\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('./auth/register/register.module').then( m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./auth/login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'change-password',\n    loadChildren: () => \"import('./auth/change-password/change-password.module').then( m => m.ChangePasswordPageModule)\"\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./auth/login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('./auth/register/register.module').then( m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'change-password',\n    loadChildren: () => \"import('./auth/change-password/change-password.module').then( m => m.ChangePasswordPageModule)\"\n  },\n  {\n    path: 'add-members',\n    loadChildren: () => \"import('./group/add-members/add-members.module').then( m => m.AddMembersPageModule)\"\n  },\n  {\n    path: 'member-view',\n    loadChildren: () => \"import('./group/member-view/member-view.module').then( m => m.MemberViewPageModule)\"\n  },\n  {\n    path: 'payment-reminder',\n    loadChildren: () => \"import('./payment-reminder/payment-reminder.module').then( m => m.PaymentReminderPageModule)\"\n  },\n  {\n    path: 'tutorial',\n    loadChildren: () => \"import('./tutorial/tutorial.module').then( m => m.TutorialPageModule)\"\n  },\n  {\n    path: 'invite',\n    loadChildren: () => \"import('./group/invite/invite.module').then( m => m.InvitePageModule)\"\n  },\n\n\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArwardService.html":{"url":"injectables/ArwardService.html","title":"injectable - ArwardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArwardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/award.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is needed to manage awards, with linking of the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/award.service.ts:29\n                \n            \n\n\n            \n                \n                    The function finds an Achievements by its id and returns it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to find the Achievements by their id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/award.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Award } from '../models/award.model';\n\n/**\n * This class is needed to manage awards, with linking of the database.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ArwardService {\n  userCollection: AngularFirestoreCollection;\n\n  /**\n   * @ignore\n   * @param afs \n   */\n  constructor(private afs: AngularFirestore) {\n    this.userCollection = afs.collection('Achievement');\n  }\n\n  /**\n   * The function finds an Achievements by its id and returns it.\n   * @param id Needed to find the Achievements by their id.\n   * @returns \n   */\n  findById(id: string) {\n    return this.userCollection.doc(id).get().toPromise().then(res => {\n      const ret = res.data();\n      ret.id = res.id;\n      return ret;\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                functions for the authentication of a user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                delete\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:127\n                \n            \n\n\n            \n                \n                    lets the user change his password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:113\n                \n            \n\n\n            \n                \n                    lets the user delete his profile from the database\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    lets the user log into firebase\nreturns a error message if not successful\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from the user\n\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npassword from the user\nreturns a error message if not successful\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:99\n                \n            \n\n\n            \n                \n                    lets the user log out of firebase\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:33\n                \n            \n\n\n            \n                \n                    registers a user with firebase\nreturns a error message if not successful\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from the user\n\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npassword from the user\n\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nusername from the user\nreturns a error message if not successful\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {Router} from \"@angular/router\";\nimport { UserService } from './user.service';\nimport {Platform} from \"@ionic/angular\";\n\n/**\n * functions for the authentication of a user\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentUser = null;\n\n  /**\n   * @ignore\n   * @param auth\n   * @param router\n   * @param userservice\n   * @param platform\n   */\n  constructor(private auth: AngularFireAuth, private router: Router, private userservice: UserService, public platform: Platform) {\n  }\n\n  /**\n   * registers a user with firebase\n   * @param email - email from the user\n   * @param password - password from the user\n   * @param username - username from the user\n   * returns a error message if not successful\n   */\n  async register(email: string, password: string, username: string): Promise{\n    let message: string;\n    await this.auth.createUserWithEmailAndPassword(email, password)\n      .then(async (result) => {\n        await this.userservice.persist(result.user.uid, email.toLocaleLowerCase(), username)\n        this.userservice.findById(result.user.uid).then(user => {\n          this.currentUser = user;\n          if(this.platform.is('desktop')){\n            this.router.navigate(['profile']);\n          }else{\n            this.router.navigate(['tutorial']);\n          }\n        });\n      })\n      .catch((error) => {\n        if (error.code === 'auth/invalid-email') {\n          message = 'ungültige E-mail';\n        } else if (error.code === 'auth/email-already-in-use') {\n          message = 'Nutzer bereits vorhanden';\n        } else if (error.code === 'auth/weak-password') {\n          message = 'Das Passwort ist zu schwach.';\n        } else if (error.code === 'auth/argument-error'){\n          message = 'Bitte alle Felder ausfüllen'\n        } else {\n          console.log(error.code);\n          message = 'unbekannter Fehler';\n        }\n      });\n    return message;\n  }\n\n  /**\n   * lets the user log into firebase\n   * @param email - email from the user\n   * @param password - password from the user\n   * returns a error message if not successful\n   */\n  login(email: string, password: string): Promise{\n    return this.auth.signInWithEmailAndPassword(email.toLocaleLowerCase(), password)\n      .then((result) => {\n        this.userservice.findById(result.user.uid).then(user => {\n          this.currentUser = user;\n\n          this.router.navigate(['home']);\n        });\n      })\n      .catch((error) => {\n        if (error.code === 'auth/invalid-email') {\n          return 'ungültige E-mail';\n        } else if (error.code === 'auth/wrong-password') {\n          return 'Passwort falsch'\n        } else if (error.code === 'auth/user-not-found') {\n          return 'Nutzer nicht vorhanden';\n        } else if (error.code === 'auth/argument-error'){\n          return 'Bitte alle Felder ausfüllen'\n        } else {\n          console.log(error.code);\n          return 'unbekannter Fehler';\n        }\n      })\n  }\n\n\n  /**\n   * lets the user log out of firebase\n   */\n  logout() {\n    this.auth.signOut()\n      .then((result) => {\n        this.currentUser = null;\n        this.router.navigate(['login'])\n      })\n      .catch((error) => {\n        console.log(error.message);\n      })\n  }\n\n  /**\n   * lets the user delete his profile from the database\n   */\n  delete(){\n    this.auth.currentUser.then(user => {\n      user.delete().then(() => {\n        // User deleted.\n      }).catch((error) => {\n        console.log(error.message);\n      });\n    });\n  }\n\n  /**\n   * lets the user change his password\n   * @param email - email from user\n   */\n  changePassword(email){\n    this.auth.sendPasswordResetEmail(email).then(() => {\n        this.router.navigate(['login']);\n      }\n    ).catch((error) => {\n      console.log(error)\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Award.html":{"url":"classes/Award.html","title":"class - Award","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Award\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/award.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                image\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string, description?: string, name?: string, image?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/award.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        image\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/award.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/award.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/award.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/award.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Award {\n\n    constructor(\n        public id?: string,\n        public description?: string,\n        public name?: string,\n        public image?: string,    \n        ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BadgeService.html":{"url":"injectables/BadgeService.html","title":"injectable - BadgeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BadgeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/badge.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is needed to manage the allocation of awards, with linking of the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setBadges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setBadges\n                        \n                    \n                \n            \n            \n                \nsetBadges(user: User, transactions: Transaction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/badge.service.ts:30\n                \n            \n\n\n            \n                \n                    This function checks which awards the user has and adds missing ones as needed.\nAwards will only be added if the requirements are met.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to see which awards are present and add the missing ones.\n\n                                    \n                                \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Are needed to work with the satistics functions\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { UserService } from './user.service';\nimport { User } from \"../models/user.model\";\nimport { StatisticsService } from \"./statistics.service\";\nimport { Transaction } from \"../models/transaction.model\";\n\n/**\n * This class is needed to manage the allocation of awards, with linking of the database.\n */\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class BadgeService {\n\n    /**\n     * @ignore\n     * @param userservice \n     * @param stats \n     */\n    constructor(private userservice: UserService, private stats:StatisticsService) { }\n\n    /**\n     * This function checks which awards the user has and adds missing ones as needed. \n     * Awards will only be added if the requirements are met.\n     * @param user Needed to see which awards are present and add the missing ones.\n     * @param transactions Are needed to work with the satistics functions\n     */\n    setBadges(user: User, transactions: Transaction[]) {\n        if (this.stats.getAllSelfmadeTransactionsOfTime(user.id, -1, transactions) >= 50 && !user.awards.includes(\"2jgBrLRTucI9CjxxWv5g\")) {\n            user.awards.push(\"2jgBrLRTucI9CjxxWv5g\");\n        }\n\n        if (user.friends.length >= 10 && !user.awards.includes(\"KNUGSj8xbsuwc0YvdYsU\")) {\n            user.awards.push(\"KNUGSj8xbsuwc0YvdYsU\");\n        }\n\n        if (this.stats.getAllSelfmadeTransactionsOfTime(user.id, -1, transactions) >= 10 && !user.awards.includes(\"dHIv113GmkQMxesxqF2K\")) {\n            user.awards.push(\"dHIv113GmkQMxesxqF2K\");\n        }\n\n        if (this.stats.getAllIncomeOfTime(-1, transactions, user.id)[0] >= 100 && !user.awards.includes(\"fdb031aej8qazbadvIA8\")) {\n            user.awards.push(\"fdb031aej8qazbadvIA8\");\n        }\n\n        if (this.stats.getAllExpensesOfTime(7, transactions, user.id)[0] >= 1000 && !user.awards.includes(\"pthZ34GVf4eB6qlXPAvv\")) {\n            user.awards.push(\"pthZ34GVf4eB6qlXPAvv\");\n        }\n        this.userservice.update(user);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPage.html":{"url":"components/ChangePasswordPage.html","title":"component - ChangePasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/change-password/change-password.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is used to generate a new password\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                ./change-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/change-password/change-password.page.ts:18\n                        \n                    \n\n            \n                \n                    email for the new password\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {NavController} from \"@ionic/angular\";\n\n/**\n * This class is used to generate a new password\n */\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n\n  /**\n   email for the new password\n   */\n  email: string;\n\n  /**\n   * @ignore\n   */\n  constructor(public authService: AuthService, public navCtrl: NavController) { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  Neues Passwort senden\n  \n  \n  \n    \n      Senden\n    \n  \n  \n    Zurück\n  \n\n\n\n    \n\n    \n                \n                    ./change-password.page.scss\n                \n                ion-content {\n  text-align: center;\n  .title {\n    font-size: 30px;\n    padding-top: 200px;\n  }\n  ion-input {\n    border: solid 1px #0d0d0d;\n    border-radius: 10px;\n    width: 60%;\n    margin: 20px auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Neues Passwort senden                Senden            Zurück  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChangePasswordPageModule.html":{"url":"modules/ChangePasswordPageModule.html","title":"module - ChangePasswordPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ChangePasswordPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChangePasswordPageModule\n\n\n\ncluster_ChangePasswordPageModule_declarations\n\n\n\ncluster_ChangePasswordPageModule_imports\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nChangePasswordPageModule\n\nChangePasswordPageModule\n\nChangePasswordPageModule -->\n\nChangePasswordPage->ChangePasswordPageModule\n\n\n\n\n\nChangePasswordPageRoutingModule\n\nChangePasswordPageRoutingModule\n\nChangePasswordPageModule -->\n\nChangePasswordPageRoutingModule->ChangePasswordPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/change-password/change-password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChangePasswordPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChangePasswordPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangePasswordPageRoutingModule } from './change-password-routing.module';\n\nimport { ChangePasswordPage } from './change-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChangePasswordPageRoutingModule\n  ],\n  declarations: [ChangePasswordPage]\n})\nexport class ChangePasswordPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChangePasswordPageRoutingModule.html":{"url":"modules/ChangePasswordPageRoutingModule.html","title":"module - ChangePasswordPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ChangePasswordPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/change-password/change-password-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangePasswordPage } from './change-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangePasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangePasswordPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendProfilePage.html":{"url":"components/FriendProfilePage.html","title":"component - FriendProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/friend-profile/friend-profile.page.ts\n\n\n\n    \n        Description\n    \n    \n        The class is needed for the Friend Profile Page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friend-profile\n            \n\n            \n                styleUrls\n                ./friend-profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./friend-profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                badges\n                            \n                            \n                                currentUser\n                            \n                            \n                                isfriend\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                    Async\n                                badgeDescription\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                paymentDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFriend\n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friend-profile/friend-profile.page.ts:116\n                \n            \n\n\n            \n                \n                    Friends can be added via the function.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        badgeDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    badgeDescription(badgename, badgeDescription)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friend-profile/friend-profile.page.ts:127\n                \n            \n\n\n            \n                \n                    This functionality creates an Ionic alert, this contains only a title and a description,\nfurthermore there is a close button to close the Ionic alert. Used when you click on\nthe badge icons.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    badgename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the title.\n\n                                    \n                                \n                                \n                                    badgeDescription\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the description.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friend-profile/friend-profile.page.ts:68\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. The archievments are also\ncalculated and if there should be there are new ones, these\nare stored in the data base. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        paymentDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    paymentDescription(name: string, discription: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friend-profile/friend-profile.page.ts:145\n                \n            \n\n\n            \n                \n                    This functionality creates an Ionic alert, this contains only a title and a description,\nfurthermore there is a close button to close the Ionic alert. Used when clicking on\nthe icons of the payment methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the title.\n\n                                    \n                                \n                                \n                                    discription\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the description.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        badges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Award[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friend-profile/friend-profile.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friend-profile/friend-profile.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isfriend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friend-profile/friend-profile.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friend-profile/friend-profile.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Award } from '../../models/award.model';\nimport { ArwardService } from 'src/app/services/award.service';\nimport { FriendsService } from '../../services/friends.service';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { AuthService } from \"../../services/auth.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { BadgeService } from 'src/app/services/badge.service';\nimport { NavController } from '@ionic/angular';\n\n/**\n * The class is needed for the Friend Profile Page.\n */\n\n@Component({\n  selector: 'app-friend-profile',\n  templateUrl: './friend-profile.page.html',\n  styleUrls: ['./friend-profile.page.scss'],\n})\n\nexport class FriendProfilePage {\n  badges: Award[] = [];\n  user: User = new User();\n  isfriend = false;\n  currentUser: User;\n\n  /**\n   * @ignore\n   * @param transactionsservice \n   * @param sanitizer \n   * @param route \n   * @param router \n   * @param awardService \n   * @param af \n   * @param userService \n   * @param friendsService \n   * @param authService \n   * @param badgeService \n   */\n\n  constructor(\n    private transactionsservice: TransactionService,\n    public sanitizer: DomSanitizer,\n    private route: ActivatedRoute,\n    public router: Router,\n    private awardService: ArwardService,\n    private af: AngularFireAuth,\n    private userService: UserService,\n    private friendsService: FriendsService,\n    private authService: AuthService,\n    private badgeService: BadgeService,\n    private navCtrl: NavController\n  ) { }\n\n  /**\n   * When the page is opened, all the required information \n   * is loaded from the services and stored in the variables \n   * provided for this purpose. The archievments are also \n   * calculated and if there should be there are new ones, these \n   * are stored in the data base. Important here is the check \n   * whether the user is logged in, otherwise no data will be loaded.\n   */\n\n  ionViewWillEnter() {\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          this.route.params.subscribe(item => {\n            this.friendsService.findById(item[0], this.currentUser).then(item2 => {\n              this.user = { ...item2 };\n              this.badges = [];\n\n              this.transactionsservice.getAllTransactionByUser(item2, true).then(transactions => {\n                this.badgeService.setBadges(item2, transactions);\n                this.isfriend = this.friendsService.isFriends(this.user, this.currentUser);\n                if (this.isfriend) {\n                  if (this.user.awardsPublicfriends) {\n                    this.user.awards.forEach(element => {\n                      this.awardService.findById(element).then(item => {\n                        this.badges.push(item);\n                      });\n                    });\n                  }\n                } else {\n                  if (!this.user.descriptionPublic) {\n                    this.user.description = \"\";\n                  }\n                  if (!this.user.imagePublic) {\n                    this.user.profilePic = \"https://bit.ly/2S904CS\";\n                  }\n                  if (this.user.awardsPublic) {\n                    this.user.awards.forEach(element => {\n                      this.awardService.findById(element).then(item => {\n                        this.badges.push(item);\n                      });\n                    });\n                  }\n                }\n              });\n            });\n          });\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n  /**\n  * Friends can be added via the function.\n  */\n  addFriend() {\n    this.friendsService.addFriend(this.user.email, this.currentUser.id);\n  }\n\n  /**\n   * This functionality creates an Ionic alert, this contains only a title and a description, \n   * furthermore there is a close button to close the Ionic alert. Used when you click on \n   * the badge icons.\n   * @param badgename Required for the title.\n   * @param badgeDescription Required for the description.\n   */\n  async badgeDescription(badgename, badgeDescription) {\n    const alert = document.createElement('ion-alert');\n    alert.header = badgename;\n    alert.message = badgeDescription;\n    alert.buttons = [{ text: \"schließen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    await alert.onDidDismiss();\n  }\n\n  /**\n   * This functionality creates an Ionic alert, this contains only a title and a description, \n   * furthermore there is a close button to close the Ionic alert. Used when clicking on \n   * the icons of the payment methods.\n   * @param name Required for the title.\n   * @param discription Required for the description.\n   */\n  async paymentDescription(name: string, discription: string) {\n    const alert = document.createElement('ion-alert');\n    alert.header = name;\n    alert.message = discription;\n    alert.buttons = [{ text: \"schließen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    await alert.onDidDismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Freunde\n    \n      \n    \n  \n\n\n\n  \n    \n      \n        \n      \n      \n        \n          \n            {{user.displayName}}\n          \n        \n        \n          \n            {{user.description}}\n          \n        \n      \n    \n\n    \n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n    \n\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./friend-profile.page.scss\n                \n                .profileImg {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n}\n\n.profileImgCol{\n    max-width: 110px;\n    //margin-left: auto;\n}\n\n.profileDescriptionCol{\n    max-width: 300px;\n    margin-left: 10px;\n    //margin-right: auto;\n}\n\n.grid{\n    margin-top: 20px;\n}\n\n.name{\n    font-weight: bold;\n}\n\n.icons{\n    max-width: 50px;\n    max-height: 50px;\n}\n\n.iconsCol{\n    margin-top: 10px;\n}\n\n.row{\n    justify-content: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Freunde                                                                              {{user.displayName}}                                                {{user.description}}                                                                                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendProfilePageModule.html":{"url":"modules/FriendProfilePageModule.html","title":"module - FriendProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FriendProfilePageModule\n\n\n\ncluster_FriendProfilePageModule_declarations\n\n\n\ncluster_FriendProfilePageModule_imports\n\n\n\n\nFriendProfilePage\n\nFriendProfilePage\n\n\n\nFriendProfilePageModule\n\nFriendProfilePageModule\n\nFriendProfilePageModule -->\n\nFriendProfilePage->FriendProfilePageModule\n\n\n\n\n\nFriendProfilePageRoutingModule\n\nFriendProfilePageRoutingModule\n\nFriendProfilePageModule -->\n\nFriendProfilePageRoutingModule->FriendProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/friend-profile/friend-profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FriendProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FriendProfilePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FriendProfilePageRoutingModule } from './friend-profile-routing.module';\n\nimport { FriendProfilePage } from './friend-profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FriendProfilePageRoutingModule\n  ],\n  declarations: [FriendProfilePage]\n})\nexport class FriendProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendProfilePageRoutingModule.html":{"url":"modules/FriendProfilePageRoutingModule.html","title":"module - FriendProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/friend-profile/friend-profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FriendProfilePage } from './friend-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FriendProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FriendProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendsPage.html":{"url":"components/FriendsPage.html","title":"component - FriendsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/friends/friends.page.ts\n\n\n\n    \n        Description\n    \n    \n        The class is needed for the Friend Page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friends\n            \n\n            \n                styleUrls\n                ./friends.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./friends.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addFriendInput\n                            \n                            \n                                addFriendsOutput\n                            \n                            \n                                currentUser\n                            \n                            \n                                errors\n                            \n                            \n                                friends\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                friendBttn\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFriend\n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friends/friends.page.ts:83\n                \n            \n\n\n            \n                \n                    Takes the email from the inputfield and calls friendService.addFriend with the given email.\nThe return value of friendService.addFriend (string which confirms if the action was successful)\ngets displayed via error.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendBttn\n                        \n                    \n                \n            \n            \n                \nfriendBttn(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friends/friends.page.ts:74\n                \n            \n\n\n            \n                \n                    This function navigates to the Friend-Profile page,\npassing on the ID of the clicked user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed to identify the clicked user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friends/friends.page.ts:50\n                \n            \n\n\n            \n                \n                    When the page is opened,\nall the required information is loaded from the services and\nstored in the variables provided for this purpose. Important\nhere is the check whether the user is logged in, otherwise\nno data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addFriendInput\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addFriendsOutput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { FriendsService } from '../../services/friends.service';\nimport { UserService } from '../../services/user.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NavController } from '@ionic/angular';\n\n/**\n * The class is needed for the Friend Page.\n */\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.page.html',\n  styleUrls: ['./friends.page.scss'],\n})\nexport class FriendsPage {\n  friends: User[] = [];\n  addFriendInput;\n  currentUser: User;\n  addFriendsOutput = \"\";\n  errors: Map = new Map();\n\n  /**\n   * @ignore\n   * @param sanitizer \n   * @param router \n   * @param af \n   * @param friendsService \n   * @param userService \n   */\n  constructor(\n    public sanitizer: DomSanitizer,\n    public router: Router,\n    private af: AngularFireAuth,\n    private friendsService: FriendsService,\n    private userService: UserService,\n    private navCtrl: NavController\n  ) { }\n\n  /**\n   * When the page is opened, \n   * all the required information is loaded from the services and \n   * stored in the variables provided for this purpose. Important \n   * here is the check whether the user is logged in, otherwise \n   * no data will be loaded.\n   */\n  ionViewWillEnter() {\n    this.addFriendsOutput = \"\";\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(value => {\n          this.currentUser = value;\n          sub.unsubscribe();\n          this.friends = [];\n          value.friends.forEach(async element => {\n            await this.friendsService.findById(element, this.currentUser).then(friend => {\n              this.friends.push(friend);\n            });\n          });\n        });\n      }\n    });\n  }\n\n\n  /**\n   * This function navigates to the Friend-Profile page, \n   * passing on the ID of the clicked user.\n   * @param id Is needed to identify the clicked user.\n   */\n  friendBttn(id: string) {\n    this.router.navigate(['friend-profile', [id]]);\n  }\n\n  /**\n   * Takes the email from the inputfield and calls friendService.addFriend with the given email.\n   * The return value of friendService.addFriend (string which confirms if the action was successful) \n   * gets displayed via error.\n   */\n  addFriend() {\n    this.friendsService.addFriend(this.addFriendInput, this.currentUser.id).then(res => {\n      this.addFriendsOutput = res;\n      this.errors.set(\"addFriendsOutput\", this.addFriendsOutput);\n      if (res === \"Nutzer nicht vorhanden\")\n        this.errors.set(\"addFriendsOutputColor\", \"var(--ion-color-danger)\");\n      else\n        this.errors.set(\"addFriendsOutputColor\", \"#006600\");\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Freunde\n  \n\n\n\n  \n    \n    Hinzufügen\n  \n  \n    {{errors.get(\"addFriendsOutput\")}}\n\n  \n    \n      \n        \n      \n      \n        {{item.displayName}}\n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./friends.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Freunde            Hinzufügen        {{errors.get(\"addFriendsOutput\")}}                                        {{item.displayName}}                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendsPageModule.html":{"url":"modules/FriendsPageModule.html","title":"module - FriendsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FriendsPageModule\n\n\n\ncluster_FriendsPageModule_declarations\n\n\n\ncluster_FriendsPageModule_imports\n\n\n\n\nFriendsPage\n\nFriendsPage\n\n\n\nFriendsPageModule\n\nFriendsPageModule\n\nFriendsPageModule -->\n\nFriendsPage->FriendsPageModule\n\n\n\n\n\nFriendsPageRoutingModule\n\nFriendsPageRoutingModule\n\nFriendsPageModule -->\n\nFriendsPageRoutingModule->FriendsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/friends/friends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FriendsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FriendsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FriendsPageRoutingModule } from './friends-routing.module';\n\nimport { FriendsPage } from './friends.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FriendsPageRoutingModule\n  ],\n  declarations: [FriendsPage]\n})\nexport class FriendsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendsPageRoutingModule.html":{"url":"modules/FriendsPageRoutingModule.html","title":"module - FriendsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/friends/friends-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FriendsPage } from './friends.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FriendsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FriendsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FriendsService.html":{"url":"injectables/FriendsService.html","title":"injectable - FriendsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FriendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/friends.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is needed to manage friends, with linking of the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFriend\n                            \n                            \n                                    Private\n                                copyAndPrepare\n                            \n                            \n                                findById\n                            \n                            \n                                isFriends\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addFriend\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFriend(email: string, currentUserID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:58\n                \n            \n\n\n            \n                \n                    Add a friend and check if he exists.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to find users by email.\n\n                                    \n                                \n                                \n                                    currentUserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to find users by email.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        String with feedback for user.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        copyAndPrepare\n                        \n                    \n                \n            \n            \n                \n                    \n                    copyAndPrepare(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:113\n                \n            \n\n\n            \n                \n                    Copy a User.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identifies user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        Copy of User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string, currentUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:34\n                \n            \n\n\n            \n                \n                    The function finds the friend and checks if he is a friend of the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to identify friend.\n\n                                    \n                                \n                                \n                                    currentUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to identify user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        User (the friend)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFriends\n                        \n                    \n                \n            \n            \n                \nisFriends(user1: User, user2: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:92\n                \n            \n\n\n            \n                \n                    Checks if two users are friends.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user1\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identifies user.\n\n                                    \n                                \n                                \n                                    user2\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identifies the other user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Boolean whether friend (true) or not (false).\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:104\n                \n            \n\n\n            \n                \n                    Updated user in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User to be updated in the database with the data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/friends.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { UserService } from \"./user.service\";\nimport {AuthService} from \"./auth.service\";\n\n/**\n * This class is needed to manage friends, with linking of the database.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FriendsService {\n  userCollection: AngularFirestoreCollection;\n\n  /**\n   * @ignore\n   * @param afs \n   * @param userService \n   * @param authService \n   */\n  constructor(private afs: AngularFirestore, private userService: UserService, private authService: AuthService) {\n    this.userCollection = afs.collection('User');\n  }\n\n  /**\n   * The function finds the friend and checks if he is a friend of the user.\n   * @param id Needed to identify friend.\n   * @param currentUser Needed to identify user.\n   * @returns User (the friend)\n   */\n  findById(id: string, currentUser: User) {\n    return this.userCollection.doc(id).get().toPromise().then(res => {\n      const ret = res.data();\n      ret.id = res.id;\n      const friends = this.isFriends(ret, currentUser);\n      if (!ret.imagePublic && !friends)\n        ret.profilePic = \"https://bit.ly/2S904CS\";\n\n      if (!ret.descriptionPublic && !friends)\n        ret.description = \"(keine Beschreibung)\";\n\n      if (!ret.awardsPublic && !friends)\n        ret.awards = [];\n\n      return ret;\n    });\n  }\n\n  /**\n   * Add a friend and check if he exists.\n   * @param email Needed to find users by email.\n   * @param currentUserID Needed to find users by email.\n   * @returns String with feedback for user.\n   */\n  async addFriend(email: string, currentUserID: string): Promise{\n    let output = \"Nutzer nicht vorhanden\"\n    return await this.userService.findByEmail(email.toLocaleLowerCase()).then(async user => {\n      let alreadyFriends = false;\n      //the actual user is in a somewhat random spot in the \"user\" array.\n      for(let u of user){\n        if(u != undefined) {\n\n                    await this.userService.findById(currentUserID).then(async curUser => {\n                      alreadyFriends = this.isFriends(curUser, u)\n                      if(!alreadyFriends) {\n                        curUser.friends.push(u.id);\n                        u.friends.push(currentUserID);\n                        this.update(u);\n                        this.update(curUser);\n                        output = \"erfolgreich hinzugefügt\";\n                      }\n                      else{\n                        output = \"bereits befreundet\";\n                      }\n                  });\n        }\n      }\n        return output;\n    });\n    return \"error\";\n  }\n\n  /**\n   * Checks if two users are friends.\n   * @param user1 Identifies user.\n   * @param user2 Identifies the other user\n   * @returns Boolean whether friend (true) or not (false).\n   */\n  isFriends(user1: User, user2: User): boolean{\n    if(user1.id == user2.id) return true;\n    for(let i in user1.friends){\n      if(user1.friends[i] === user2.id) return true;\n    }\n    return false;\n  }\n\n  /**\n   * Updated user in the database\n   * @param user User to be updated in the database with the data\n   */\n  update(user: User) {\n    this.userCollection.doc(user.id).update(this.copyAndPrepare(user));\n  }\n\n  /**\n   * Copy a User.\n   * @param user Identifies user.\n   * @returns Copy of User\n   */\n  private copyAndPrepare(user: User): User {\n    const copy = { ...user };\n    delete copy.id;\n    return copy;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Group.html":{"url":"classes/Group.html","title":"class - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                creator\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                members\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string, name?: string, members?: User[], creator?: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/group.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        User[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        creator\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from \"./user.model\";\n\nexport class Group {\n  constructor(public id?: string,\n              public name?: string,\n              public members?: User[],\n              public creator?: User) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCreatePage.html":{"url":"components/GroupCreatePage.html","title":"component - GroupCreatePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupCreatePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/group-create/group-create.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class has functions to create a new group\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-create\n            \n\n            \n                styleUrls\n                ./group-create.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./group-create.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                group\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                    Async\n                                addMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-create/group-create.page.ts:63\n                \n            \n\n\n            \n                \n                    adds the new created group to firebase\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMembers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-create/group-create.page.ts:54\n                \n            \n\n\n            \n                \n                    This function changes the group members to the new selected users\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-create/group-create.page.ts:25\n                        \n                    \n\n            \n                \n                    user who currently uses the app\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                \n                    \n                        Default value : new Group()\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-create/group-create.page.ts:29\n                        \n                    \n\n            \n                \n                    the new group that the user creates\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {User} from \"../../models/user.model\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ModalController, NavController} from \"@ionic/angular\";\nimport {GroupService} from \"../../services/group.service\";\nimport {Group} from \"../../models/group.model\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {UserService} from \"../../services/user.service\";\n\n/**\n * This class has functions to create a new group\n */\n@Component({\n  selector: 'app-group-create',\n  templateUrl: './group-create.page.html',\n  styleUrls: ['./group-create.page.scss'],\n})\n\nexport class GroupCreatePage implements OnInit {\n\n  /**\n   user who currently uses the app\n   */\n  currentUser: User;\n  /**\n   the new group that the user creates\n   */\n  group: Group = new Group();\n\n  /**\n   * @ignore\n   * @param activatedRoute\n   * @param modalController\n   * @param authService\n   * @param groupService\n   * @param af\n   * @param userService\n   * @param navCtrl\n   */\n  constructor(private activatedRoute: ActivatedRoute,\n              private modalController: ModalController,\n              private authService: AuthService,\n              private groupService: GroupService,\n              private af: AngularFireAuth,\n              private userService: UserService,\n              private navCtrl: NavController) {\n\n  }\n\n  /**\n   * This function changes the group members to the new selected users\n   */\n  async addMembers(){\n    this.groupService.addMembers(this.group, this.currentUser).then(members => {\n      this.group.members = members;\n    })\n  }\n\n  /**\n   * adds the new created group to firebase\n   */\n  add(){\n    if(this.group.name && this.group.name.length > 1){\n      if(this.group.members && this.group.members.length > 0){\n        this.group.creator = this.currentUser;\n        this.group.members.push(this.currentUser);\n        this.groupService.new(this.group);\n        this.navCtrl.back();\n      }else{\n        alert(\"Gruppe muss mind. 1 Mitglied enthalten.\")\n      }\n    }else{\n      alert(\"Gruppenname muss mind. 2 Zeichen lang sein.\")\n    }\n  }\n\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Gruppe erstellen\n  \n\n\n\n  \n    Name\n    \n    \n  \n\n  \n    Members\n    \n      \n    \n  \n\n  \n    \n      {{member.displayName}}\n    \n  \n  \n    Abbrechen\n    \n      Erstellen\n    \n  \n\n\n\n    \n\n    \n                \n                    ./group-create.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Gruppe erstellen        Name                Members                            {{member.displayName}}            Abbrechen          Erstellen      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCreatePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupCreatePageModule.html":{"url":"modules/GroupCreatePageModule.html","title":"module - GroupCreatePageModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupCreatePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupCreatePageModule\n\n\n\ncluster_GroupCreatePageModule_declarations\n\n\n\ncluster_GroupCreatePageModule_imports\n\n\n\n\nGroupCreatePage\n\nGroupCreatePage\n\n\n\nGroupCreatePageModule\n\nGroupCreatePageModule\n\nGroupCreatePageModule -->\n\nGroupCreatePage->GroupCreatePageModule\n\n\n\n\n\nGroupCreatePageRoutingModule\n\nGroupCreatePageRoutingModule\n\nGroupCreatePageModule -->\n\nGroupCreatePageRoutingModule->GroupCreatePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-create/group-create.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupCreatePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroupCreatePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupCreatePageRoutingModule } from './group-create-routing.module';\n\nimport { GroupCreatePage } from './group-create.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroupCreatePageRoutingModule\n  ],\n  declarations: [GroupCreatePage]\n})\nexport class GroupCreatePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupCreatePageRoutingModule.html":{"url":"modules/GroupCreatePageRoutingModule.html","title":"module - GroupCreatePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupCreatePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-create/group-create-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupCreatePage } from './group-create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupCreatePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupCreatePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupDetailsPage.html":{"url":"components/GroupDetailsPage.html","title":"component - GroupDetailsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupDetailsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/group-details/group-details.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class shows the details from the selected group\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-details\n            \n\n            \n                styleUrls\n                ./group-details.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./group-details.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTransactions\n                            \n                            \n                                currentCost\n                            \n                            \n                                currentIncome\n                            \n                            \n                                currentStats\n                            \n                            \n                                currentTotal\n                            \n                            \n                                currentTransactions\n                            \n                            \n                                currentUser\n                            \n                            \n                                errorMessage\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                oldTransactions\n                            \n                            \n                                pie\n                            \n                            \n                                pieChart\n                            \n                            \n                                statistic\n                            \n                            \n                                statsArray\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPieChart\n                            \n                            \n                                createTransaction\n                            \n                            \n                                dateFormat\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                leaveGroup\n                            \n                            \n                                statsButton\n                            \n                            \n                                switchToStats\n                            \n                            \n                                update\n                            \n                            \n                                viewMembers\n                            \n                            \n                                viewTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPieChart\n                        \n                    \n                \n            \n            \n                \ncreatePieChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:233\n                \n            \n\n\n            \n                \n                    creates a pie chart with the statistics of the group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTransaction\n                        \n                    \n                \n            \n            \n                \ncreateTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:208\n                \n            \n\n\n            \n                \n                    lets the user create a new transaction with the group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateFormat\n                        \n                    \n                \n            \n            \n                \ndateFormat(oldDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:317\n                \n            \n\n\n            \n                \n                    creates the desired date format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    oldDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndate format that needs to be changed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:93\n                \n            \n\n\n            \n                \n                    deletes the selected group\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        leaveGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    leaveGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:123\n                \n            \n\n\n            \n                \n                    lets the user leave the selected group\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statsButton\n                        \n                    \n                \n            \n            \n                \nstatsButton(back: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:266\n                \n            \n\n\n            \n                \n                    sets the time frame for the statistics of the group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    back\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nchecks if back or forward is pressed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchToStats\n                        \n                    \n                \n            \n            \n                \nswitchToStats()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:223\n                \n            \n\n\n            \n                \n                    lets the user see the statistics of the group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:77\n                \n            \n\n\n            \n                \n                    updates the existing group with new details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewMembers\n                        \n                    \n                \n            \n            \n                \nviewMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:201\n                \n            \n\n\n            \n                \n                    shows all members from the selected group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTransaction\n                        \n                    \n                \n            \n            \n                \nviewTransaction(transaction: Transaction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:193\n                \n            \n\n\n            \n                \n                    navigates to the selected transaction\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                Transaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nselected transaction\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allTransactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentTransactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldTransactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChart\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('pieChart')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Statistic\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statsArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"Insgesamt\", \"Letztes Jahr\", \"Letzte 6 Monate\", \"Letzte 3 Monate\", \"Letzter Monat\", \"Letzte Woche\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Group} from \"../../models/group.model\";\nimport {GroupService} from \"../../services/group.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AlertController, NavController} from \"@ionic/angular\";\nimport {User} from \"../../models/user.model\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Transaction} from \"../../models/transaction.model\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {UserService} from \"../../services/user.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {StatisticsService} from \"../../services/statistics.service\";\nimport {Statistic} from \"../../models/statistics.model\";\nimport Chart from \"chart.js/auto\";\n\n/**\n * This class shows the details from the selected group\n */\n@Component({\n  selector: 'app-group-details',\n  templateUrl: './group-details.page.html',\n  styleUrls: ['./group-details.page.scss'],\n})\nexport class GroupDetailsPage implements OnInit {\n\n  id: string;\n  group: Group;\n  currentUser: User;\n  allTransactions: Transaction[];\n  currentTransactions: Transaction[];\n  oldTransactions: Transaction[];\n  statistic: Statistic;\n  view = 0;\n  errorMessage: string;\n  statsArray = [\"Insgesamt\", \"Letztes Jahr\", \"Letzte 6 Monate\", \"Letzte 3 Monate\", \"Letzter Monat\", \"Letzte Woche\"]\n  currentStats = 0;\n  currentTotal = 0;\n  currentCost = 0;\n  currentIncome = 0;\n  pie: Chart;\n\n  @ViewChild('pieChart') pieChart;\n\n\n  /**\n   * @ignore\n   * @param groupService\n   * @param route\n   * @param navCtrl\n   * @param alertController\n   * @param authService\n   * @param af\n   * @param userService\n   * @param transactionService\n   * @param sanitizer\n   * @param statisticsService\n   * @param router\n   */\n  constructor(private groupService: GroupService,\n              private route: ActivatedRoute,\n              private navCtrl: NavController,\n              private alertController: AlertController,\n              private authService: AuthService,\n              private af: AngularFireAuth,\n              private userService: UserService,\n              private transactionService: TransactionService,\n              private sanitizer: DomSanitizer,\n              private statisticsService: StatisticsService,\n              private router: Router) {\n  }\n\n\n  /**\n   * updates the existing group with new details\n   */\n  update(){\n    if(this.group.name.length > 2){\n      if(this.group.members.length > 1){\n        this.groupService.update(this.group);\n        this.navCtrl.back();\n      } else {\n        alert(\"Bitte fügen Sie ein Freund Ihrer Gruppe hinzu.\")\n      }\n    } else{\n      alert(\"Bitte geben Sie einen längeren Namen ein.\")\n    }\n  }\n\n  /**\n   * deletes the selected group\n   */\n  async delete(): Promise{\n    const alert = await this.alertController.create({\n      header: 'Gruppe löschen',\n      message: `Bist du dir sicher, dass du die Gruppe ${this.group.name} löschen möchtest?`,\n      buttons: [\n        {\n          text: 'Abbrechen',\n          role: 'cancel',\n        },\n        {\n          text: 'Löschen',\n          handler: () => {\n            this.transactionService.checkAllTransactionsFinishedInGroup(this.group).then(openTransactions => {\n              if(openTransactions){\n                this.errorMessage = \"Es bestehen noch offene Transaktionen\";\n              }else{\n                this.groupService.delete(this.group);\n                this.navCtrl.back();\n              }\n            });\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  /**\n   * lets the user leave the selected group\n   */\n  async leaveGroup(): Promise{\n    const alert = await this.alertController.create({\n      header: 'Gruppe verlassen',\n      message: `Bist du dir sicher, dass du die Gruppe ${this.group.name} verlassen möchtest?`,\n      buttons: [\n        {\n          text: 'Abbrechen',\n          role: 'cancel',\n        },\n        {\n          text: 'Verlassen',\n          handler: () => {\n            this.transactionService.checkTransactionsFinishedInGroupByUser(this.group, this.currentUser).then(openTransactions => {\n              if(openTransactions){\n                this.errorMessage = \"Sie haben noch offene Rechnungen\"\n              }else{\n                this.groupService.deleteUserFromGroup(this.currentUser, this.group);\n                this.navCtrl.back();\n              }\n            });\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewWillEnter() {\n    this.currentTransactions = [];\n    this.oldTransactions = [];\n    this.allTransactions = [];\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          sub.unsubscribe();\n        });\n      }\n    });\n    const groupID = this.route.snapshot.paramMap.get('id');\n    this.groupService.getGroupById(groupID).then(g => {\n      this.group = g;\n      this.transactionService.getAllTransactionByGroup(this.group).then(transactions =>{\n        transactions.forEach(transaction =>{\n          this.allTransactions.push(transaction);\n          if(!transaction.finished){\n            this.currentTransactions.push(transaction);\n          }\n          else{\n            this.oldTransactions.push(transaction);\n          }\n        });\n        if(this.allTransactions.length >0){\n          this.statistic = this.statisticsService.getGroupStatistics(this.allTransactions);\n          this.currentTotal = this.statistic.allTimeTotal;\n          this.currentCost = this.statistic.allTimeCost;\n          this.currentIncome = this.statistic.allTimeIncome;\n        }\n      });\n    });\n  }\n\n  /**\n   * navigates to the selected transaction\n   * @param transaction - selected transaction\n   */\n  viewTransaction(transaction: Transaction) {\n    this.transactionService.saveLocally(transaction);\n    this.router.navigate(['transaction-details']);\n  }\n\n  /**\n   * shows all members from the selected group\n   */\n  viewMembers(){\n    this.router.navigate(['member-view', {id: this.group.id}])\n  }\n\n  /**\n   * lets the user create a new transaction with the group\n   */\n  createTransaction(){\n    if(this.group){\n      this.router.navigate(['transaction-create', {fromGroup: true, groupID: this.group.id}]);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * lets the user see the statistics of the group\n   */\n  switchToStats(){\n    if(this.view != 2) {\n      this.view = 2;\n      this.createPieChart();\n    }\n  }\n\n  /**\n   * creates a pie chart with the statistics of the group\n   */\n  createPieChart() {\n    if(this.pieChart != undefined) {\n      this.pie = new Chart(this.pieChart.nativeElement, {\n        type: 'pie',\n        data: {\n          labels: ['Einnahmen', 'Ausgaben'],\n          datasets: [\n            {\n              label: 'Dataset 1',\n              data: [this.currentIncome, this.currentCost],\n              backgroundColor: [\"rgba(104, 237, 136, 1)\", \"rgba(237, 104, 104, 1)\"],\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top',\n            }\n          }\n        },\n      });\n    }\n    else{\n      setTimeout( () => { this.createPieChart() }, 100 );\n    }\n  }\n\n  /**\n   * sets the time frame for the statistics of the group\n   * @param back - checks if back or forward is pressed\n   */\n  statsButton(back: boolean) {\n    if(back && this.currentStats>0) this.currentStats--;\n    else if(!back && this.currentStats {\n      dataset.data = [this.currentIncome, this.currentCost];\n    });\n    this.pie.update();\n  }\n\n  /**\n   * creates the desired date format\n   * @param oldDate - date format that needs to be changed\n   */\n  dateFormat(oldDate: string): string{\n    const d = new Date(oldDate);\n    return '' + d.getDate() + \".\" + (d.getMonth()+1) + '.' + d.getFullYear();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{group? group.name : \"\"}}\n  \n\n\n\n\n  \n    \n    Mitglieder\n  \n  \n    \n    Transaktion anlegen\n  \n\n  \n    \n    \n      \n        \n          Aktuell\n        \n        \n          Archiv\n        \n        \n          Statistik\n        \n      \n    \n    \n  \n    \n      \n        \n          \n            {{dateFormat(transaction.purchaseDate)}}\n          \n          \n            {{transaction.purpose}}\n            {{transaction.creator.displayName}}\n          \n          {{transaction.amount}}€\n          {{transaction.amount}}€\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{dateFormat(transaction.purchaseDate)}}\n          \n          \n            {{transaction.purpose}}\n            {{transaction.creator.displayName}}\n          \n          {{transaction.amount}}€\n          {{transaction.amount}}€\n        \n      \n    \n  \n  \n    \n      \n        \n          \n          {{statsArray[currentStats]}}\n          \n        \n      \n      \n        \n        {{currentTotal}} Transaktionen\n        \n      \n      \n        \n      \n    \n  \n  \n  \n    \n      \n        {{this.errorMessage}}\n      \n    \n  \n\n\n  \n    \n    Gruppe löschen\n  \n  \n    \n    Gruppe verlassen\n  \n\n\n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./group-details.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{group? group.name : \"\"}}            Mitglieder            Transaktion anlegen                                    Aktuell                          Archiv                          Statistik                                                                {{dateFormat(transaction.purchaseDate)}}                                {{transaction.purpose}}            {{transaction.creator.displayName}}                    {{transaction.amount}}€          {{transaction.amount}}€                                                              {{dateFormat(transaction.purchaseDate)}}                                {{transaction.purpose}}            {{transaction.creator.displayName}}                    {{transaction.amount}}€          {{transaction.amount}}€                                                            {{statsArray[currentStats]}}                                              {{currentTotal}} Transaktionen                                                              {{this.errorMessage}}                      Gruppe löschen            Gruppe verlassen                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupDetailsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupDetailsPageModule.html":{"url":"modules/GroupDetailsPageModule.html","title":"module - GroupDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupDetailsPageModule\n\n\n\ncluster_GroupDetailsPageModule_declarations\n\n\n\ncluster_GroupDetailsPageModule_imports\n\n\n\n\nGroupDetailsPage\n\nGroupDetailsPage\n\n\n\nGroupDetailsPageModule\n\nGroupDetailsPageModule\n\nGroupDetailsPageModule -->\n\nGroupDetailsPage->GroupDetailsPageModule\n\n\n\n\n\nGroupDetailsPageRoutingModule\n\nGroupDetailsPageRoutingModule\n\nGroupDetailsPageModule -->\n\nGroupDetailsPageRoutingModule->GroupDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-details/group-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroupDetailsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupDetailsPageRoutingModule } from './group-details-routing.module';\n\nimport { GroupDetailsPage } from './group-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroupDetailsPageRoutingModule\n  ],\n  declarations: [GroupDetailsPage]\n})\nexport class GroupDetailsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupDetailsPageRoutingModule.html":{"url":"modules/GroupDetailsPageRoutingModule.html","title":"module - GroupDetailsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupDetailsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-details/group-details-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupDetailsPage } from './group-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupDetailsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupListPage.html":{"url":"components/GroupListPage.html","title":"component - GroupListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/group-list/group-list.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class shows all groups the user is a member\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-list\n            \n\n            \n                styleUrls\n                ./group-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./group-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #searchbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                filteredGroups\n                            \n                            \n                                groups\n                            \n                            \n                                searchbarVisible\n                            \n                            \n                                subGroups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelSearch\n                            \n                            \n                                createGroup\n                            \n                            \n                                doSearch\n                            \n                            \n                                setVisible\n                            \n                            \n                                showGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchbar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSearch\n                        \n                    \n                \n            \n            \n                \ncancelSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:71\n                \n            \n\n\n            \n                \n                    hides searchbar and unfilters groups\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:120\n                \n            \n\n\n            \n                \n                    navigates to the page to create a new group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doSearch\n                        \n                    \n                \n            \n            \n                \ndoSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:63\n                \n            \n\n\n            \n                \n                    filters the groups with the value from searchbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVisible\n                        \n                    \n                \n            \n            \n                \nsetVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:56\n                \n            \n\n\n            \n                \n                    makes the searchbar visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGroup\n                        \n                    \n                \n            \n            \n                \nshowGroup(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:128\n                \n            \n\n\n            \n                \n                    navigates to the selected group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nselected group\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #searchbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonSearchbar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchbarVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchbar\n                    \n                \n\n\n                \n                    \n                        setsearchbar(sb: IonSearchbar)\n                    \n                \n                            \n                                \n                                    Defined in src/app/group/group-list/group-list.page.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            sb\n                                                    \n                                                            \n                                                                        IonSearchbar\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {Group} from \"../../models/group.model\";\nimport {GroupService} from \"../../services/group.service\";\nimport {User} from \"../../models/user.model\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {IonSearchbar} from \"@ionic/angular\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {UserService} from \"../../services/user.service\";\n\n/**\n * This class shows all groups the user is a member\n */\n@Component({\n  selector: 'app-group-list',\n  templateUrl: './group-list.page.html',\n  styleUrls: ['./group-list.page.scss'],\n})\nexport class GroupListPage implements OnInit {\n\n  subGroups: Subscription;\n  groups: Group[] = [];\n  currentUser: User;\n  filteredGroups: Group[] = [];\n  searchbarVisible = false;\n\n  /**\n   * @ignore\n   * @param groupService\n   * @param authService\n   * @param af\n   * @param userService\n   * @param router\n   */\n  constructor(private groupService: GroupService,\n              private authService: AuthService,\n              private af: AngularFireAuth,\n              private userService: UserService,\n              private router: Router) {\n\n  }\n\n  #searchbar: IonSearchbar;\n  @ViewChild(IonSearchbar)\n  set searchbar(sb: IonSearchbar) {\n    if (sb) {\n      sb.setFocus();\n      this.#searchbar = sb;\n    }\n  }\n\n  /**\n   * makes the searchbar visible\n   */\n  setVisible() {\n    this.searchbarVisible = true;\n  }\n\n  /**\n   * filters the groups with the value from searchbar\n   */\n  doSearch() {\n    this.filteredGroups = this.groups.filter(r =>\n      r.name.toLowerCase().includes(this.#searchbar.value.toLowerCase()));\n  }\n\n  /**\n   * hides searchbar and unfilters groups\n   */\n  cancelSearch() {\n    this.#searchbar.value = \"\";\n    this.filteredGroups = this.groups;\n    this.searchbarVisible = false;\n  }\n\n\n  /**\n   * @ignore\n   */\n  ionViewWillEnter() {\n    this.searchbarVisible = false;\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          sub.unsubscribe();\n          this.subGroups = this.groupService.getAll().subscribe(groups => {\n            let newGroups: any[] = [];\n            groups.forEach(group => {\n              if(group.members){\n                group.members.forEach(member => {\n                  if (member.toString() == this.currentUser.id) {\n                    newGroups.push(group)\n                  }\n                })\n              }\n            });\n            this.groups = [];\n            newGroups.forEach(group => {\n              this.groups.push(this.groupService.createGroup(group, group.id));\n            });\n            this.filteredGroups.splice(0, this.filteredGroups.length, ...this.groups);\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewDidLeave() {\n    this.subGroups.unsubscribe();\n  }\n\n  /**\n   * navigates to the page to create a new group\n   */\n  createGroup() {\n    this.router.navigate(['group-create'])\n  }\n\n  /**\n   * navigates to the selected group\n   * @param group - selected group\n   */\n  showGroup(group: Group) {\n    this.router.navigate(['group-details', {id: group.id}])\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    Gruppen\n    \n      \n    \n    \n    \n  \n\n\n\n  \n    \n      \n        {{group.name}}\n      \n    \n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./group-list.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Gruppen                                            {{group.name}}                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupListPageModule.html":{"url":"modules/GroupListPageModule.html","title":"module - GroupListPageModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupListPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupListPageModule\n\n\n\ncluster_GroupListPageModule_declarations\n\n\n\ncluster_GroupListPageModule_imports\n\n\n\n\nGroupListPage\n\nGroupListPage\n\n\n\nGroupListPageModule\n\nGroupListPageModule\n\nGroupListPageModule -->\n\nGroupListPage->GroupListPageModule\n\n\n\n\n\nGroupListPageRoutingModule\n\nGroupListPageRoutingModule\n\nGroupListPageModule -->\n\nGroupListPageRoutingModule->GroupListPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-list/group-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupListPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroupListPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupListPageRoutingModule } from './group-list-routing.module';\n\nimport { GroupListPage } from './group-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroupListPageRoutingModule\n  ],\n  declarations: [GroupListPage]\n})\nexport class GroupListPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupListPageRoutingModule.html":{"url":"modules/GroupListPageRoutingModule.html","title":"module - GroupListPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupListPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-list/group-list-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupListPage } from './group-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupListPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group.service.ts\n        \n\n\n            \n                Description\n            \n            \n                functions for groups\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                groupCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMembers\n                            \n                            \n                                addUserToGroup\n                            \n                            \n                                copyAndPrepare\n                            \n                            \n                                createGroup\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                deleteUserFromAllGroups\n                            \n                            \n                                deleteUserFromGroup\n                            \n                            \n                                getAll\n                            \n                            \n                                    Async\n                                getGroupById\n                            \n                            \n                                getGroupsByUserId\n                            \n                            \n                                new\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMembers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMembers(group: Group, currentUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:191\n                \n            \n\n\n            \n                \n                    add Members to a existing group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserToGroup\n                        \n                    \n                \n            \n            \n                \naddUserToGroup(group: Group, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:209\n                \n            \n\n\n            \n                \n                    add a user to a group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyAndPrepare\n                        \n                    \n                \n            \n            \n                \ncopyAndPrepare(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:218\n                \n            \n\n\n            \n                \n                    changing the group object to fit in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Group\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(group: Group, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:112\n                \n            \n\n\n            \n                \n                    creates new group with old group and id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nold group without id\n\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from group\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Group\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:63\n                \n            \n\n\n            \n                \n                    deletes a group in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngroup that gets deleted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUserFromAllGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserFromAllGroups(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:129\n                \n            \n\n\n            \n                \n                    deletes user from all groups\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserFromGroup\n                        \n                    \n                \n            \n            \n                \ndeleteUserFromGroup(user: User, group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:159\n                \n            \n\n\n            \n                \n                    deletes user from a group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:39\n                \n            \n\n\n            \n                \n                    get all groups from database\nreturns an Observable of a array of group\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGroupById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:71\n                \n            \n\n\n            \n                \n                    find group with id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from group\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupsByUserId\n                        \n                    \n                \n            \n            \n                \ngetGroupsByUserId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:93\n                \n            \n\n\n            \n                \n                    find all groups from a user\nreturns a array of all groups from user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from user\nreturns a array of all groups from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new\n                        \n                    \n                \n            \n            \n                \nnew(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:47\n                \n            \n\n\n            \n                \n                    creates a new group in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnew created group\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:55\n                \n            \n\n\n            \n                \n                    updates a group in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngroup with updates\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        groupCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/group.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {AngularFirestore, AngularFirestoreCollection} from '@angular/fire/firestore';\nimport {Group} from '../models/group.model';\nimport {AuthService} from './auth.service';\nimport {Observable} from 'rxjs';\nimport {User} from '../models/user.model';\nimport { UserService } from './user.service';\nimport {AddMembersPage} from '../group/add-members/add-members.page';\nimport {ModalController} from '@ionic/angular';\n\n/**\n * functions for groups\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  private groupCollection: AngularFirestoreCollection;\n\n  /**\n   * @ignore\n   * @param afs\n   * @param authService\n   * @param userService\n   * @param modalController\n   */\n  constructor(private afs: AngularFirestore,\n              private authService: AuthService,\n              private userService: UserService,\n              private modalController: ModalController) {\n    this.groupCollection = afs.collection('Group');\n  }\n\n  /**\n   * get all groups from database\n   * returns an Observable of a array of group\n   */\n  getAll(): Observable{\n    return this.groupCollection.valueChanges({idField: 'id'});\n  }\n\n  /**\n   * creates a new group in the database\n   * @param group - new created group\n   */\n  new(group: Group){\n    this.groupCollection.add(this.copyAndPrepare(group));\n  }\n\n  /**\n   * updates a group in the database\n   * @param group - group with updates\n   */\n  update(group: Group) {\n    this.groupCollection.doc(group.id).update(this.copyAndPrepare(group));\n  }\n\n  /**\n   * deletes a group in the database\n   * @param group - group that gets deleted\n   */\n  delete(group: Group){\n    this.groupCollection.doc(group.id).delete();\n  }\n\n  /**\n   * find group with id\n   * @param id - id from group\n   */\n  async getGroupById(id: string): Promise {\n    const snapshot = await this.groupCollection.doc(id).get().toPromise();\n    const temp: any = snapshot.data();\n    const group: Group = new Group();\n    group.id = snapshot.id;\n    const members = [];\n    for(let member of temp.members){\n      await this.userService.findById(member.toString()).then(user => {\n        members.push(user);\n        if(user.id === temp.creator.toString())  group.creator = user;\n      });\n    }\n    group.members = members;\n    group.name = temp.name;\n    return group;\n  }\n\n  /**\n   * find all groups from a user\n   * @param id - id from user\n   * returns a array of all groups from user\n   */\n  getGroupsByUserId(id: string): Promise{\n    return this.groupCollection.get().toPromise().then(doc => {\n      const groups: Group[] = [];\n      doc.forEach(g => {\n        for(const member of g.data().members){\n          if(member.toString() === id){\n            groups.push(this.createGroup(g.data(), g.id));\n          }\n        }\n      });\n      return groups;\n    });\n  }\n\n  /**\n   * creates new group with old group and id\n   * @param group - old group without id\n   * @param id - id from group\n   */\n  createGroup(group: Group, id: string): Group {\n    const members: User[] = [];\n    group.members.forEach(m => {\n      this.userService.findById(m.toString()).then(u => {\n        members.push(u);\n      });\n    });\n    const newGroup: Group = group;\n    group.members = members;\n    group.id = id;\n    return group;\n  }\n\n  /**\n   * deletes user from all groups\n   * @param user\n   */\n  async deleteUserFromAllGroups(user: User){\n    const snapshot = await this.groupCollection.get().toPromise();\n    const groups: Group[] = [];\n\n    await snapshot.docs.map(doc => {\n      const group = doc.data();\n      group.id = doc.id;\n      groups.push(group);\n    });\n    for(const i in groups){\n      let containsUser = false;\n      await this.userService.findById(groups[i].creator.toString()).then(creator => {\n        groups[i].creator = creator;\n        if(creator.id === user.id) containsUser = true;\n      });\n      for(const j in groups[i].members){\n        await this.userService.findById(groups[i].members[j].toString()).then(member => {\n          groups[i].members[j] = member;\n          if(member.id === user.id) containsUser = true;\n        });\n      }\n      if(containsUser) this.deleteUserFromGroup(user, groups[i]);\n    }\n  }\n\n  /**\n   * deletes user from a group\n   * @param user\n   * @param group\n   */\n  deleteUserFromGroup(user: User, group: Group){\n    let index = -1;\n    for(let i = 0; i  -1) {\n      if(group.creator.id === user.id) {\n        if(group.members.length > 1){\n          if (index  1){\n        group.members.splice(index, 1);\n        this.update(group);\n      }\n      else{\n        this.delete(group);\n      }\n    }\n  }\n\n  /**\n   * add Members to a existing group\n   * @param group\n   * @param currentUser\n   */\n  async addMembers(group: Group, currentUser: User): Promise {\n    const modal = await this.modalController.create({\n      component: AddMembersPage,\n      componentProps: {\n        groupParam: group,\n        currentUserParam: currentUser\n      }\n    });\n    await modal.present();\n    const result = await modal.onDidDismiss();\n    return result.data;\n  }\n\n  /**\n   * add a user to a group\n   * @param group\n   * @param user\n   */\n  addUserToGroup(group: Group, user: User){\n    group.members.push(user);\n    this.update(group);\n  }\n\n  /**\n   * changing the group object to fit in the database\n   * @param group\n   */\n  copyAndPrepare(group: Group): Group{\n    const copy: any = {...group};\n    delete copy.id;\n    copy.creator = group.creator.id;\n    copy.members = [];\n    group.members.forEach(member => {\n      //This is not a good way to do this, but member.id is not always set, this is the case when loading members takes too long\n      //It is needed for the deleteMemberFromGroup functionality\n      if(member.id) copy.members.push(member.id);\n      else copy.members.push(member.toString());\n    });\n    return copy;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nTransactionCreatePageModule\n\nTransactionCreatePageModule\n\nHomePageModule -->\n\nTransactionCreatePageModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            TransactionCreatePageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport {TransactionCreatePageModule} from \"../transaction/transaction-create/transaction-create.module\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    TransactionCreatePageModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitePage.html":{"url":"components/InvitePage.html","title":"component - InvitePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/invite/invite.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class lets a user join a group with a invite link\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invite\n            \n\n            \n                styleUrls\n                ./invite.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./invite.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                group\n                            \n                            \n                                groupFound\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToGroup\n                            \n                            \n                                    Async\n                                findGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToGroup\n                        \n                    \n                \n            \n            \n                \naddToGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/invite/invite.page.ts:85\n                \n            \n\n\n            \n                \n                    adds the user to the group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/invite/invite.page.ts:60\n                \n            \n\n\n            \n                \n                    search for group with the invite link\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/invite/invite.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                \n                    \n                        Default value : new Group(\"0\",\"\",[],undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/group/invite/invite.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupFound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/group/invite/invite.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/group/invite/invite.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ModalController} from \"@ionic/angular\";\nimport {UserService} from \"../../services/user.service\";\nimport {GroupService} from \"../../services/group.service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {User} from \"../../models/user.model\";\nimport {Group} from \"../../models/group.model\";\nimport {Router} from \"@angular/router\";\n\n\n/**\n * This class lets a user join a group with a invite link\n */\n@Component({\n  selector: 'app-invite',\n  templateUrl: './invite.page.html',\n  styleUrls: ['./invite.page.scss'],\n})\nexport class InvitePage implements OnInit {\n  currentUser: User;\n  group: Group = new Group(\"0\",\"\",[],undefined);\n  message = \"\";\n  groupFound = false;\n\n  /**\n   * @ignore\n   * @param modalController\n   * @param af\n   * @param groupService\n   * @param userService\n   * @param router\n   */\n  constructor(private modalController: ModalController,\n              private af: AngularFireAuth,\n              private groupService: GroupService,\n              public userService: UserService,\n              public router: Router) {\n\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          // @ts-ignore\n          this.findGroup();\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n  /**\n   * search for group with the invite link\n   */\n  async findGroup(){\n    const loading = document.createElement('ion-loading');\n    loading.cssClass = 'loading';\n    loading.message = 'Lade Daten';\n    loading.duration = 10000;\n    document.body.appendChild(loading);\n    await loading.present();\n\n    const queryString = window.location.search;\n    const groupId = queryString.split(\"=\");\n    await this.groupService.getGroupById(groupId[1]).then(group => {\n      if(group !== undefined) {\n        this.group = group;\n        this.groupFound = true;\n      }\n      else{\n        this.message = \"Gruppe existiert nicht\";\n      }\n    });\n    loading.dismiss();\n  }\n\n  /**\n   * adds the user to the group\n   */\n  addToGroup(){\n    for (let i in this.group.members) {\n      if (this.group.members[i].id === this.currentUser.id){\n        this.message = \"Bereits in der Gruppe\";\n        return;\n      }\n    }\n    this.groupService.addUserToGroup(this.group,this.currentUser);\n    this.message = \"Erfolgreich beigetretten\";\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Einladung\n  \n\n\n\n  \n    \n      \n        Gruppe: {{group.name}}\n      \n    \n    \n      \n        Beitreten\n      \n    \n    \n      \n        {{message}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./invite.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Einladung                      Gruppe: {{group.name}}                            Beitreten                            {{message}}            '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InvitePageModule.html":{"url":"modules/InvitePageModule.html","title":"module - InvitePageModule","body":"\n                   \n\n\n\n\n    Modules\n    InvitePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InvitePageModule\n\n\n\ncluster_InvitePageModule_imports\n\n\n\ncluster_InvitePageModule_declarations\n\n\n\n\nInvitePage\n\nInvitePage\n\n\n\nInvitePageModule\n\nInvitePageModule\n\nInvitePageModule -->\n\nInvitePage->InvitePageModule\n\n\n\n\n\nInvitePageRoutingModule\n\nInvitePageRoutingModule\n\nInvitePageModule -->\n\nInvitePageRoutingModule->InvitePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/invite/invite.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InvitePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InvitePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InvitePageRoutingModule } from './invite-routing.module';\n\nimport { InvitePage } from './invite.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InvitePageRoutingModule\n  ],\n  declarations: [InvitePage]\n})\nexport class InvitePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InvitePageRoutingModule.html":{"url":"modules/InvitePageRoutingModule.html","title":"module - InvitePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InvitePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/invite/invite-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InvitePage } from './invite.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InvitePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InvitePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class has functions to login a existing user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                iconName\n                            \n                            \n                                inputType\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeInputType\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeInputType\n                        \n                    \n                \n            \n            \n                \nchangeInputType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.page.ts:47\n                \n            \n\n\n            \n                \n                    This function makes the password visible/disguised\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.page.ts:62\n                \n            \n\n\n            \n                \n                    This function logs the user into firebase with email and password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:18\n                        \n                    \n\n            \n                \n                    email from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:34\n                        \n                    \n\n            \n                \n                    changes the error message depending on the error\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:30\n                        \n                    \n\n            \n                \n                    changes the icon for the password visibility\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:26\n                        \n                    \n\n            \n                \n                    checks if password input is visible or nor\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:22\n                        \n                    \n\n            \n                \n                    password from user\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n/**\n * This class has functions to login a existing user\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  /**\n   email from user\n   */\n  email: string;\n  /**\n   password from user\n   */\n  password: string;\n  /**\n   checks if password input is visible or nor\n   */\n  inputType: string;\n  /**\n   changes the icon for the password visibility\n   */\n  iconName: string;\n  /**\n   changes the error message depending on the error\n   */\n  errorMessage: string;\n\n  /**\n   * @ignore\n   */\n  constructor(public authService: AuthService, public router: Router) {\n    this.inputType = \"password\";\n    this.iconName = \"eye-off-outline\";\n  }\n\n  /**\n   * This function makes the password visible/disguised\n   */\n  changeInputType(){\n    if(this.inputType === \"password\"){\n      this.inputType = \"text\";\n      this.iconName = \"eye-outline\";\n    }else{\n      this.inputType = \"password\";\n      this.iconName = \"eye-off-outline\";\n    }\n  }\n\n  /**\n   * This function logs the user into firebase with email and password\n   * @param email\n   * @param password\n   */\n  login(email: string, password: string){\n    this.authService.login(email, password).then(ret => {\n      if(ret){\n        this.errorMessage = ret;\n      }else{\n        this.router.navigate(['home']);\n      }\n    })\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Group Expense\n  \n  E-Mail\n  \n  \n\n  Passwort\n  \n    \n      \n    \n  \n  \n    \n      Passwort vergessen?\n    \n  \n  {{errorMessage}}\n  \n    Login\n  \n  \n    Neu anmelden\n  \n\n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                ion-content {\n  text-align: center;\n  .title {\n    margin-top: 50px;\n    font-size: 50px;\n  }\n  .forgotPassword {\n    color: #4c8dff;\n    font-size: 13px;\n    margin-bottom: 20px;\n  }\n  ion-label {\n    font-size: 20px;\n  }\n\n  ion-input {\n    border: solid 1px #0d0d0d;\n    border-radius: 10px;\n    width: 60%;\n    margin: 10px auto;\n    .hidePassword {\n      position: absolute;\n      right: 0\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Group Expense    E-Mail      Passwort                              Passwort vergessen?        {{errorMessage}}      Login        Neu anmelden  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberViewPage.html":{"url":"components/MemberViewPage.html","title":"component - MemberViewPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberViewPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/member-view/member-view.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class shows all members of the group\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-view\n            \n\n            \n                styleUrls\n                ./member-view.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-view.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMembers\n                            \n                            \n                                viewUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembers\n                        \n                    \n                \n            \n            \n                \naddMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/member-view/member-view.page.ts:55\n                \n            \n\n\n            \n                \n                    navigates to the addMembers page and adds the new selected users\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewUser\n                        \n                    \n                \n            \n            \n                \nviewUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/member-view/member-view.page.ts:89\n                \n            \n\n\n            \n                \n                    navigates to the selected user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from the selected user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/member-view/member-view.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/member-view/member-view.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/member-view/member-view.page.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {GroupService} from \"../../services/group.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AlertController, NavController} from \"@ionic/angular\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {Group} from \"../../models/group.model\";\nimport {User} from \"../../models/user.model\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {UserService} from \"../../services/user.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * This class shows all members of the group\n */\n@Component({\n  selector: 'app-member-view',\n  templateUrl: './member-view.page.html',\n  styleUrls: ['./member-view.page.scss'],\n})\nexport class MemberViewPage implements OnInit {\n\n  id: string;\n  group: Group;\n  currentUser: User;\n\n  /**\n   * @ignore\n   * @param groupService\n   * @param sanitizer\n   * @param route\n   * @param navCtrl\n   * @param alertController\n   * @param authService\n   * @param transactionService\n   * @param router\n   * @param af\n   * @param userService\n   */\n  constructor(private groupService: GroupService,\n              private sanitizer:DomSanitizer,\n              private route: ActivatedRoute,\n              private navCtrl: NavController,\n              private alertController: AlertController,\n              private authService: AuthService,\n              private transactionService: TransactionService,\n              private router: Router,\n              private af: AngularFireAuth,\n              private userService: UserService) {\n  }\n\n  /**\n   * navigates to the addMembers page and adds the new selected users\n   */\n  addMembers(){\n    this.groupService.addMembers(this.group, this.currentUser).then(members => {\n      if(members && members.length > 1){\n        this.group.members.splice(0, this.group.members.length, ...members);\n        this.groupService.update(this.group);\n      }else{\n        alert(\"mind. 1 Mitglied muss in der Gruppe sein (ohne Admin)\");\n      }\n\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewWillEnter() {\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          const groupID = this.route.snapshot.paramMap.get('id');\n          this.groupService.getGroupById(groupID).then(g => {\n            this.group = g;\n          });\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n  /**\n   * navigates to the selected user\n   * @param id - id from the selected user\n   */\n  viewUser(id: string) {\n    this.router.navigate(['friend-profile', [id]]);\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Mitglieder\n  \n\n\n\n  \n    Neu hinzufügen\n      \n      \n    \n  \n\n  \n    \n      \n      {{member.displayName}}  (Admin)\n      {{member.displayName}}\n    \n  \n\n\n\n    \n\n    \n                \n                    ./member-view.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mitglieder        Neu hinzufügen                                    {{member.displayName}}  (Admin)      {{member.displayName}}      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberViewPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MemberViewPageModule.html":{"url":"modules/MemberViewPageModule.html","title":"module - MemberViewPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MemberViewPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MemberViewPageModule\n\n\n\ncluster_MemberViewPageModule_declarations\n\n\n\ncluster_MemberViewPageModule_imports\n\n\n\n\nMemberViewPage\n\nMemberViewPage\n\n\n\nMemberViewPageModule\n\nMemberViewPageModule\n\nMemberViewPageModule -->\n\nMemberViewPage->MemberViewPageModule\n\n\n\n\n\nMemberViewPageRoutingModule\n\nMemberViewPageRoutingModule\n\nMemberViewPageModule -->\n\nMemberViewPageRoutingModule->MemberViewPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/member-view/member-view.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MemberViewPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MemberViewPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MemberViewPageRoutingModule } from './member-view-routing.module';\n\nimport { MemberViewPage } from './member-view.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MemberViewPageRoutingModule\n  ],\n  declarations: [MemberViewPage]\n})\nexport class MemberViewPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MemberViewPageRoutingModule.html":{"url":"modules/MemberViewPageRoutingModule.html","title":"module - MemberViewPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MemberViewPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/member-view/member-view-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MemberViewPage } from './member-view.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MemberViewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MemberViewPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsPage.html":{"url":"components/OptionsPage.html","title":"component - OptionsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OptionsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/options/options.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the option-page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options\n            \n\n            \n                styleUrls\n                ./options.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./options.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userOld\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                backBtn\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                passwordchange\n                            \n                            \n                                payment\n                            \n                            \n                                privacy\n                            \n                            \n                                    Async\n                                profileImageChange\n                            \n                            \n                                    Async\n                                saveAlert\n                            \n                            \n                                    Async\n                                saveBtn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        backBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    backBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:61\n                \n            \n\n\n            \n                \n                    This function navigates back to the Profile page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be discarded. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:44\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordchange\n                        \n                    \n                \n            \n            \n                \npasswordchange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:130\n                \n            \n\n\n            \n                \n                    Calls the save Alert function with a parameter = \"password\".\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment\n                        \n                    \n                \n            \n            \n                \npayment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:123\n                \n            \n\n\n            \n                \n                    Calls the save Alert function with a parameter = \"payment\".\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        privacy\n                        \n                    \n                \n            \n            \n                \nprivacy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:137\n                \n            \n\n\n            \n                \n                    Calls the save Alert function with a parameter = \"privacy\".\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        profileImageChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    profileImageChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:111\n                \n            \n\n\n            \n                \n                    This function opens the photo app of the device and saves it in Base64 format,\nafterwards it is saved in the variable User. Here the plugin \"Camera\" from\nCapicitor is used.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAlert(site: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:148\n                \n            \n\n\n            \n                \n                    This function navigates back to the page that comes with the parameter. It checks\nwhether the user has changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be saved. If there are no changes, then\nit is simply navigated to the page from the parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    site\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed to navigate to the right page.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:86\n                \n            \n\n\n            \n                \n                    This function navigates back to the Profile page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be saved. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/options/options.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOld\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/options/options.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Camera, CameraResultType } from '@capacitor/camera';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * This class is needed for the option-page.\n */\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.page.html',\n  styleUrls: ['./options.page.scss'],\n})\nexport class OptionsPage {\n  user: User = new User();\n  userOld: User = new User();\n\n  /**\n   * @ignore\n   * @param sanitizer \n   * @param router \n   * @param route \n   * @param userService \n   * @param af \n   */\n  constructor(\n    public sanitizer: DomSanitizer, \n    private router: Router, \n    private route: ActivatedRoute, \n    private userService: UserService, \n    private af: AngularFireAuth\n    ) { }\n\n  /**\n   * When the page is opened, all the required information \n   * is loaded from the services and stored in the variables \n   * provided for this purpose. Important here is the check \n   * whether the user is logged in, otherwise no data will be loaded.\n   */\n  ionViewWillEnter() {\n    this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(value => {\n          this.userOld = { ...value };\n          this.user = { ...value };\n        });\n      }\n    });\n  }\n\n  /**\n   * This function navigates back to the Profile page. It checks whether the user \n   * has changed data, if this is the case, then an Ionic alert is created, which \n   * asks again whether the changes should be discarded. If there are no changes, then \n   * it is simply navigated back.\n   */\n  async backBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen verwefen?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n      if (rsl.role == \"yes\") {\n        this.user = this.userOld;\n        this.router.navigate(['profile']);\n      }\n    }\n    else {\n      this.router.navigate(['profile']);\n    }\n  }\n\n  /**\n   * This function navigates back to the Profile page. It checks whether the user \n   * has changed data, if this is the case, then an Ionic alert is created, which \n   * asks again whether the changes should be saved. If there are no changes, then \n   * it is simply navigated back.\n   */\n  async saveBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        this.userService.update(this.user);\n        this.router.navigate(['profile']);\n      }\n    }\n    else {\n      this.router.navigate(['profile']);\n    }\n  }\n\n  /**\n   * This function opens the photo app of the device and saves it in Base64 format, \n   * afterwards it is saved in the variable User. Here the plugin \"Camera\" from \n   * Capicitor is used.\n   */\n  async profileImageChange() {\n    const image = await Camera.getPhoto({\n      quality: 100,\n      allowEditing: true,\n      resultType: CameraResultType.Base64\n    });\n    this.user.profilePic = \"data:image/png;base64, \" + image.base64String;\n  }\n\n  /**\n   * Calls the save Alert function with a parameter = \"payment\".\n   */\n  payment() {\n    this.saveAlert(\"payment\");\n  }\n\n   /**\n   * Calls the save Alert function with a parameter = \"password\".\n   */\n  passwordchange() {\n    this.saveAlert('password');\n  }\n\n   /**\n   * Calls the save Alert function with a parameter = \"privacy\".\n   */\n  privacy() {\n    this.saveAlert('privacy');\n  }\n\n  /**\n   * This function navigates back to the page that comes with the parameter. It checks \n   * whether the user has changed data, if this is the case, then an Ionic alert is created, which \n   * asks again whether the changes should be saved. If there are no changes, then \n   * it is simply navigated to the page from the parameter.\n   * @param site Is needed to navigate to the right page.\n   */\n  async saveAlert(site: string) {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Nein\", role: \"no\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        this.userService.update(this.user);\n        this.router.navigate([site]);\n      } else if (rsl.role == \"no\") {\n        this.user = this.userOld;\n        this.router.navigate([site]);\n      }\n    }\n    else {\n      this.router.navigate([site]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Einstellungen\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n      \n      \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n  \n    Zahlungsmittel\n    Passwort ändern\n    Privatsphäre Einstellungen\n  \n\n\n\n    \n\n    \n                \n                    ./options.page.scss\n                \n                .profileImg {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    display: block;\n}\n\n.profileImgCol {\n    max-width: 160px;\n}\n\n.description {\n    border-style: solid;\n    border-color: black;\n    border-width: 1px;\n    border-radius: 10px;\n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Einstellungen                                                                                                                                                              Zahlungsmittel    Passwort ändern    Privatsphäre Einstellungen  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsPageModule.html":{"url":"modules/OptionsPageModule.html","title":"module - OptionsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OptionsPageModule\n\n\n\ncluster_OptionsPageModule_imports\n\n\n\ncluster_OptionsPageModule_declarations\n\n\n\n\nOptionsPage\n\nOptionsPage\n\n\n\nOptionsPageModule\n\nOptionsPageModule\n\nOptionsPageModule -->\n\nOptionsPage->OptionsPageModule\n\n\n\n\n\nOptionsPageRoutingModule\n\nOptionsPageRoutingModule\n\nOptionsPageModule -->\n\nOptionsPageRoutingModule->OptionsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/options/options.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OptionsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OptionsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OptionsPageRoutingModule } from './options-routing.module';\n\nimport { OptionsPage } from './options.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OptionsPageRoutingModule\n  ],\n  declarations: [OptionsPage]\n})\nexport class OptionsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsPageRoutingModule.html":{"url":"modules/OptionsPageRoutingModule.html","title":"module - OptionsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/options/options-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OptionsPage } from './options.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OptionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OptionsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordPage.html":{"url":"components/PasswordPage.html","title":"component - PasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/password/password.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the password page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password\n            \n\n            \n                styleUrls\n                ./password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                newPassword1\n                            \n                            \n                                newPassword2\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                backBtn\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                saveBtn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        backBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    backBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/password/password.page.ts:44\n                \n            \n\n\n            \n                \n                    This function checks if there were changes by the user, if there were any then an\nionic alert is created, in this alert it is asked if the changes should be discarded.\nAfterwards it navigates back to the option page.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/password/password.page.ts:33\n                \n            \n\n\n            \n                \n                    This function initializes the varibals when calling the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/password/password.page.ts:68\n                \n            \n\n\n            \n                \n                    This function checks the entered password for the correct length,\nif the new passwords match and if the old password was correct.\nIf one of the cases is true, an error message is added to the error map,\nif it contains any, the password cannot be saved.\nA message/text is then inserted in the html.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/password/password.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/password/password.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/password/password.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/password/password.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\n\n/**\n * This class is needed for the password page.\n */\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.page.html',\n  styleUrls: ['./password.page.scss'],\n})\nexport class PasswordPage {\n  oldPassword: string;\n  newPassword1: string;\n  newPassword2: string;\n  errors: Map = new Map();\n\n  /**\n   * @ignore\n   * @param router \n   * @param authservice \n   */\n  constructor(\n    private router: Router, \n    public authservice: AngularFireAuth\n    ) { }\n\n  /**\n   * This function initializes the varibals when calling the page.\n   */\n  ionViewWillEnter() {\n    this.oldPassword = \"\";\n    this.newPassword1 = \"\";\n    this.newPassword2 = \"\";\n  }\n\n  /**\n   * This function checks if there were changes by the user, if there were any then an \n   * ionic alert is created, in this alert it is asked if the changes should be discarded. \n   * Afterwards it navigates back to the option page.\n   */\n  async backBtn() {\n    if (this.oldPassword != \"\" || this.newPassword1 != \"\" || this.newPassword2 != \"\") {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen verwefen?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n      if (rsl.role == \"yes\")\n        this.router.navigate(['options']);\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n  /**\n   * This function checks the entered password for the correct length, \n   * if the new passwords match and if the old password was correct. \n   * If one of the cases is true, an error message is added to the error map, \n   * if it contains any, the password cannot be saved. \n   * A message/text is then inserted in the html.\n   */\n  async saveBtn() {\n    this.errors.clear();\n\n    if (this.oldPassword.length == 0) {\n      this.errors.set('oldPassword', 'Altes Passwort eingeben!');\n    }\n\n    if (this.newPassword1.length == 0) {\n      this.errors.set('newPassword1', 'Neues Passwort eingeben!');\n    }\n\n    if (this.newPassword2.length == 0) {\n      this.errors.set('newPassword2', 'Neues Passwort wiederholen!');\n    }\n\n    if (this.newPassword1 != this.newPassword2) {\n      this.errors.set('newPassword2', 'Stimmt nicht überein!');\n    }\n    else if (this.newPassword1.length  this.errors.set('oldPassword', 'Altes Passwort falsch!'));\n\n    if (this.errors.size === 0) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Passwort speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        (await this.authservice.currentUser).updatePassword(this.newPassword1);\n        this.router.navigate(['options']);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Passwort ändern\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    Altes Passwort\n    \n      \n    \n\n              {{errors.get('oldPassword')}}     \n\n    Neues Passwort\n    \n      \n    \n\n              {{errors.get('newPassword1')}}     \n    \n    Neues Passwort Wiederholen\n    \n      \n    \n\n              {{errors.get('newPassword2')}}     \n\n  \n\n    \n\n    \n                \n                    ./password.page.scss\n                \n                .passwordText{\n    height: 30px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Passwort ändern                                    Altes Passwort                            {{errors.get(\\'oldPassword\\')}}         Neues Passwort                            {{errors.get(\\'newPassword1\\')}}             Neues Passwort Wiederholen                            {{errors.get(\\'newPassword2\\')}}       '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswordPageModule.html":{"url":"modules/PasswordPageModule.html","title":"module - PasswordPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswordPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PasswordPageModule\n\n\n\ncluster_PasswordPageModule_declarations\n\n\n\ncluster_PasswordPageModule_imports\n\n\n\n\nPasswordPage\n\nPasswordPage\n\n\n\nPasswordPageModule\n\nPasswordPageModule\n\nPasswordPageModule -->\n\nPasswordPage->PasswordPageModule\n\n\n\n\n\nPasswordPageRoutingModule\n\nPasswordPageRoutingModule\n\nPasswordPageModule -->\n\nPasswordPageRoutingModule->PasswordPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/password/password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PasswordPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PasswordPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PasswordPageRoutingModule } from './password-routing.module';\n\nimport { PasswordPage } from './password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PasswordPageRoutingModule\n  ],\n  declarations: [PasswordPage]\n})\nexport class PasswordPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswordPageRoutingModule.html":{"url":"modules/PasswordPageRoutingModule.html","title":"module - PasswordPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswordPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/password/password-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordPage } from './password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentPage.html":{"url":"components/PaymentPage.html","title":"component - PaymentPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/payment/payment.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the password page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                styleUrls\n                ./payment.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./payment.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userOld\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                backBtn\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                saveBtn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        backBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    backBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/payment/payment.page.ts:58\n                \n            \n\n\n            \n                \n                    This function navigates back to the option page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be discarded. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/payment/payment.page.ts:41\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/payment/payment.page.ts:83\n                \n            \n\n\n            \n                \n                    This function navigates back to the option page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be saved. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/payment/payment.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOld\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/payment/payment.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\n\n\n/**\n * This class is needed for the password page.\n */\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.page.html',\n  styleUrls: ['./payment.page.scss'],\n})\nexport class PaymentPage {\n  user: User = new User();\n  userOld: User = new User();\n\n  /**\n   * @ignore\n   * @param router \n   * @param route \n   * @param userService \n   * @param af \n   */\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private af: AngularFireAuth\n  ) { }\n\n  /**\n   * When the page is opened, all the required information \n   * is loaded from the services and stored in the variables \n   * provided for this purpose. Important here is the check \n   * whether the user is logged in, otherwise no data will be loaded.\n   */\n  ionViewWillEnter() {\n    this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(value => {\n          this.userOld = { ...value };\n          this.user = { ...value };\n        });\n      }\n    });\n  }\n\n  /**\n   * This function navigates back to the option page. It checks whether the user \n   * has changed data, if this is the case, then an Ionic alert is created, which \n   * asks again whether the changes should be discarded. If there are no changes, then \n   * it is simply navigated back.\n   */\n  async backBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen verwefen?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n      if (rsl.role == \"yes\") {\n        this.user = { ...this.userOld };\n        this.router.navigate(['options']);\n      }\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n  /**\n    * This function navigates back to the option page. It checks whether the user \n    * has changed data, if this is the case, then an Ionic alert is created, which \n    * asks again whether the changes should be saved. If there are no changes, then \n    * it is simply navigated back.\n    */\n  async saveBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        this.userService.update(this.user);\n        this.router.navigate(['options']);\n      }\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Zahlungsmittel Option\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      Zahlungsmittel vorhanden\n    \n\n    \n      Bar\n      \n    \n\n    \n      EC-Karte\n      \n    \n\n    \n      Kreditkarte\n      \n    \n\n    \n      Paypal\n      \n    \n  \n\n    \n\n    \n                \n                    ./payment.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Zahlungsmittel Option                                          Zahlungsmittel vorhanden              Bar                    EC-Karte                    Kreditkarte                    Paypal            '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentPageModule.html":{"url":"modules/PaymentPageModule.html","title":"module - PaymentPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentPageModule\n\n\n\ncluster_PaymentPageModule_declarations\n\n\n\ncluster_PaymentPageModule_imports\n\n\n\n\nPaymentPage\n\nPaymentPage\n\n\n\nPaymentPageModule\n\nPaymentPageModule\n\nPaymentPageModule -->\n\nPaymentPage->PaymentPageModule\n\n\n\n\n\nPaymentPageRoutingModule\n\nPaymentPageRoutingModule\n\nPaymentPageModule -->\n\nPaymentPageRoutingModule->PaymentPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PaymentPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaymentPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentPageRoutingModule } from './payment-routing.module';\n\nimport { PaymentPage } from './payment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PaymentPageRoutingModule\n  ],\n  declarations: [PaymentPage]\n})\nexport class PaymentPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentPageRoutingModule.html":{"url":"modules/PaymentPageRoutingModule.html","title":"module - PaymentPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/payment/payment-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentPage } from './payment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentReminderPage.html":{"url":"components/PaymentReminderPage.html","title":"component - PaymentReminderPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentReminderPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment-reminder/payment-reminder.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is used to send payment reminder to other users\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment-reminder\n            \n\n            \n                styleUrls\n                ./payment-reminder.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./payment-reminder.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                displayName_currentUser\n                            \n                            \n                                displayName_otherUser\n                            \n                            \n                                dueDate\n                            \n                            \n                                firstMsg\n                            \n                            \n                                groupName\n                            \n                            \n                                purpose\n                            \n                            \n                                secondMsg\n                            \n                            \n                                thirdMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPaymentReminder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPaymentReminder\n                        \n                    \n                \n            \n            \n                \ncreatePaymentReminder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/payment-reminder/payment-reminder.page.ts:48\n                \n            \n\n\n            \n                \n                    creates new Payment Reminder for another user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName_currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName_otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thirdMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ModalController, NavController, NavParams} from \"@ionic/angular\";\n\n/**\n * This class is used to send payment reminder to other users\n */\n@Component({\n  selector: 'app-payment-reminder',\n  templateUrl: './payment-reminder.page.html',\n  styleUrls: ['./payment-reminder.page.scss'],\n})\nexport class PaymentReminderPage implements OnInit {\n\n  displayName_otherUser: string;\n  groupName: string;\n  purpose: string;\n  amount: string;\n  dueDate: string;\n  displayName_currentUser: string;\n  firstMsg: string;\n  secondMsg: string = \"\";\n  thirdMsg: string;\n\n  /**\n   * @ignore\n   * @param navParams\n   * @param modalController\n   */\n  constructor(public navParams: NavParams, public modalController: ModalController) {\n    this.displayName_otherUser = navParams.get('displayName_otherUser');\n    this.groupName = navParams.get('groupName');\n    this.purpose = navParams.get('purpose');\n    this.amount = navParams.get('amount');\n    this.dueDate = navParams.get('dueDate');\n    this.displayName_currentUser = navParams.get('displayName_currentUser');\n    this.firstMsg = `Hallo ${this.displayName_otherUser},\\n`;\n    this.thirdMsg = `Details der Transaktion:\\n` +\n      `Gruppe:  ${this.groupName}\\n` +\n      `Zweck:  ${this.purpose}\\n` +\n      `Betrag:  ${this.amount}€\\n` +\n      `Fälligkeitsdatum:  ${new Date(this.dueDate).toLocaleDateString()}`;\n  }\n\n\n  /**\n   * creates new Payment Reminder for another user\n   */\n  createPaymentReminder() {\n    let msg = this.firstMsg + this.secondMsg + \"\\n\" + this.thirdMsg;\n    this.modalController.dismiss(msg);\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Zahlungserinnerung an {{displayName_otherUser}}\n  \n\n\n\n  {{firstMsg}}\n  \n  \n  {{thirdMsg}}\n  \n    Abbrechen\n    \n      Bestätigen\n    \n  \n\n\n    \n\n    \n                \n                    ./payment-reminder.page.scss\n                \n                ion-content {\n  text-align: center;\n  .angular-with-newlines {\n    white-space: pre-wrap;\n  }\n  ion-textarea {\n    border: #0d0d0d 2px solid;\n    border-radius: 5px;\n    width: 60%;\n    margin: 10px auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Zahlungserinnerung an {{displayName_otherUser}}    {{firstMsg}}      {{thirdMsg}}      Abbrechen          Bestätigen      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentReminderPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentReminderPageModule.html":{"url":"modules/PaymentReminderPageModule.html","title":"module - PaymentReminderPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentReminderPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentReminderPageModule\n\n\n\ncluster_PaymentReminderPageModule_imports\n\n\n\ncluster_PaymentReminderPageModule_declarations\n\n\n\n\nPaymentReminderPage\n\nPaymentReminderPage\n\n\n\nPaymentReminderPageModule\n\nPaymentReminderPageModule\n\nPaymentReminderPageModule -->\n\nPaymentReminderPage->PaymentReminderPageModule\n\n\n\n\n\nPaymentReminderPageRoutingModule\n\nPaymentReminderPageRoutingModule\n\nPaymentReminderPageModule -->\n\nPaymentReminderPageRoutingModule->PaymentReminderPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/payment-reminder/payment-reminder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PaymentReminderPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaymentReminderPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentReminderPageRoutingModule } from './payment-reminder-routing.module';\n\nimport { PaymentReminderPage } from './payment-reminder.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PaymentReminderPageRoutingModule\n  ],\n  declarations: [PaymentReminderPage]\n})\nexport class PaymentReminderPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentReminderPageRoutingModule.html":{"url":"modules/PaymentReminderPageRoutingModule.html","title":"module - PaymentReminderPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentReminderPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/payment-reminder/payment-reminder-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentReminderPage } from './payment-reminder.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentReminderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentReminderPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPage.html":{"url":"components/PrivacyPage.html","title":"component - PrivacyPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/privacy/privacy.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the privacy page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy\n            \n\n            \n                styleUrls\n                ./privacy.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userOld\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                backBtn\n                            \n                            \n                                changeAwardsPublicfriends\n                            \n                            \n                                    Async\n                                deleteBtn\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                saveBtn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        backBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    backBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:66\n                \n            \n\n\n            \n                \n                    This function navigates back to the option page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be discarded. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeAwardsPublicfriends\n                        \n                    \n                \n            \n            \n                \nchangeAwardsPublicfriends()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:141\n                \n            \n\n\n            \n                \n                    This function is needed when the value of user.awardsPublic changes to true,\nto change the value user.awardsPublicfriends as well.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:118\n                \n            \n\n\n            \n                \n                    Functionality for user deletion.\nStep by step:\n\nDelete user from friendlist, 2. Delete user from transactions, 3. delete user from groups,\ndelete user from User-Collection, 5. delete user from Auth, 6. Loggout\nIt is important to keep this sequence, as it can cause nasty bugs if you switch these around.\n\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:49\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:91\n                \n            \n\n\n            \n                \n                    This function navigates back to the option page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be saved. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/privacy/privacy.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOld\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/privacy/privacy.page.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { GroupService } from \"../../services/group.service\";\nimport { TransactionService } from \"../../services/transaction.service\";\nimport { AuthService } from \"../../services/auth.service\";\n\n/**\n * This class is needed for the privacy page.\n */\n\n@Component({\n  selector: 'app-privacy',\n  templateUrl: './privacy.page.html',\n  styleUrls: ['./privacy.page.scss'],\n})\nexport class PrivacyPage {\n  user: User = new User();\n  userOld: User = new User();\n\n  /**\n   * @ignore\n   * @param router\n   * @param route\n   * @param userService\n   * @param af\n   * @param groupService\n   * @param transactionService\n   * @param authService\n   */\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private af: AngularFireAuth,\n    private groupService: GroupService,\n    private transactionService: TransactionService,\n    private authService: AuthService\n  ) { }\n\n  /**\n    * When the page is opened, all the required information\n    * is loaded from the services and stored in the variables\n    * provided for this purpose. Important here is the check\n    * whether the user is logged in, otherwise no data will be loaded.\n    */\n  ionViewWillEnter() {\n    this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(value => {\n          this.userOld = { ...value };\n          this.user = { ...value };\n        });\n      }\n    });\n  }\n\n  /**\n   * This function navigates back to the option page. It checks whether the user\n   * has changed data, if this is the case, then an Ionic alert is created, which\n   * asks again whether the changes should be discarded. If there are no changes, then\n   * it is simply navigated back.\n   */\n  async backBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen verwefen?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n      if (rsl.role == \"yes\") {\n        this.user = { ...this.userOld };\n        this.router.navigate(['options']);\n      }\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n  /**\n    * This function navigates back to the option page. It checks whether the user\n    * has changed data, if this is the case, then an Ionic alert is created, which\n    * asks again whether the changes should be saved. If there are no changes, then\n    * it is simply navigated back.\n    */\n  async saveBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        this.userService.update(this.user);\n        this.router.navigate(['options']);\n      }\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n  /**\n   * Functionality for user deletion.\n   * Step by step:\n   * 1. Delete user from friendlist, 2. Delete user from transactions, 3. delete user from groups,\n   * 4. delete user from User-Collection, 5. delete user from Auth, 6. Loggout\n   * It is important to keep this sequence, as it can cause nasty bugs if you switch these around.\n   */\n  async deleteBtn() {\n    const alert = document.createElement('ion-alert');\n    alert.header = 'Möchtest du deinen Account wirklich löschen? Dies kann nicht rückgängig gemacht werden!';\n    alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    var rsl = await alert.onDidDismiss();\n\n    if (rsl.role == \"yes\") {\n      await this.userService.deleteUserFromFriends(this.user);\n      await this.transactionService.deleteAllTransactionsByUser(this.user);\n      await this.groupService.deleteUserFromAllGroups(this.user);\n      this.userService.delete(this.user.id);\n      this.authService.delete();\n      this.authService.logout();\n    }\n  }\n\n  /**\n   * This function is needed when the value of user.awardsPublic changes to true,\n   * to change the value user.awardsPublicfriends as well.\n   */\n  changeAwardsPublicfriends() {\n    if (this.user.awardsPublic)\n      this.user.awardsPublicfriends = true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Privatsphäre Option\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      Für Fremde sichtbar\n    \n\n    \n      Profilbild\n      \n    \n\n    \n      Auszeichnungen\n      \n    \n\n    \n      Beschreibung\n      \n    \n\n    \n      Für Freunde sichtbar\n    \n\n    \n      Auszeichnungen\n      \n    \n\n    \n        Account Löschen\n    \n  \n\n\n    \n\n    \n                \n                    ./privacy.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Privatsphäre Option                                          Für Fremde sichtbar              Profilbild                    Auszeichnungen                    Beschreibung                    Für Freunde sichtbar              Auszeichnungen                      Account Löschen      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrivacyPageModule.html":{"url":"modules/PrivacyPageModule.html","title":"module - PrivacyPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PrivacyPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrivacyPageModule\n\n\n\ncluster_PrivacyPageModule_declarations\n\n\n\ncluster_PrivacyPageModule_imports\n\n\n\n\nPrivacyPage\n\nPrivacyPage\n\n\n\nPrivacyPageModule\n\nPrivacyPageModule\n\nPrivacyPageModule -->\n\nPrivacyPage->PrivacyPageModule\n\n\n\n\n\nPrivacyPageRoutingModule\n\nPrivacyPageRoutingModule\n\nPrivacyPageModule -->\n\nPrivacyPageRoutingModule->PrivacyPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/privacy/privacy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PrivacyPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrivacyPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PrivacyPageRoutingModule } from './privacy-routing.module';\n\nimport { PrivacyPage } from './privacy.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PrivacyPageRoutingModule\n  ],\n  declarations: [PrivacyPage]\n})\nexport class PrivacyPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrivacyPageRoutingModule.html":{"url":"modules/PrivacyPageRoutingModule.html","title":"module - PrivacyPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PrivacyPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/privacy/privacy-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PrivacyPage } from './privacy.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PrivacyPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PrivacyPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile/profile.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the profile-page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                badges\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                badgeDescription\n                            \n                            \n                                    Async\n                                friendlist\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                loggout\n                            \n                            \n                                    Async\n                                paymentDescription\n                            \n                            \n                                profileSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        badgeDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    badgeDescription(badgename, badgeDescription)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:95\n                \n            \n\n\n            \n                \n                    This functionality creates an Ionic alert, this contains only a title and a description,\nfurthermore there is a close button to close the Ionic alert. Used when you click on\nthe badge icons.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    badgename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the title.\n\n                                    \n                                \n                                \n                                    badgeDescription\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the description.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        friendlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    friendlist()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:77\n                \n            \n\n\n            \n                \n                    This function navigates to the friends page.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:54\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggout\n                        \n                    \n                \n            \n            \n                \nloggout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:112\n                \n            \n\n\n            \n                \n                    This function logs out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        paymentDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    paymentDescription(name: string, discription: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:123\n                \n            \n\n\n            \n                \n                    This functionality creates an Ionic alert, this contains only a title and a description,\nfurthermore there is a close button to close the Ionic alert. Used when clicking on\nthe icons of the payment methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the title.\n\n                                    \n                                \n                                \n                                    discription\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the description.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileSettings\n                        \n                    \n                \n            \n            \n                \nprofileSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:84\n                \n            \n\n\n            \n                \n                    This function navigates to the options page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        badges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Award[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile/profile.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile/profile.page.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { Award } from '../../models/award.model';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { ArwardService } from 'src/app/services/award.service';\nimport { AuthService } from \"../../services/auth.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { BadgeService } from 'src/app/services/badge.service';\n\n/**\n * This class is needed for the profile-page.\n */\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage {\n  badges: Award[] = [];\n  user: User = new User();\n\n  /**\n   * @ignore\n   * @param transactionsservice\n   * @param sanitizer\n   * @param router\n   * @param userService\n   * @param af\n   * @param awardService\n   * @param authService\n   * @param badgeService\n   */\n  constructor(\n    private transactionsservice: TransactionService,\n    public sanitizer: DomSanitizer,\n    public router: Router,\n    private userService: UserService,\n    private af: AngularFireAuth,\n    private awardService: ArwardService,\n    private authService: AuthService,\n    private badgeService: BadgeService\n  ) { }\n\n  /**\n   * When the page is opened, all the required information\n   * is loaded from the services and stored in the variables\n   * provided for this purpose. Important here is the check\n   * whether the user is logged in, otherwise no data will be loaded.\n   */\n  ionViewWillEnter() {\n    var sub = this.af.authState.subscribe(userAf => {\n      if (userAf) {\n        this.userService.findById(userAf.uid).then(user => {\n          this.user = { ...user };\n          this.badges = [];\n          this.transactionsservice.getAllTransactionByUser(user, true).then(transactions => {\n            this.badgeService.setBadges(user, transactions);\n            this.user.awards.forEach(element => {\n              this.awardService.findById(element).then(item => {\n                this.badges.push(item);\n              });\n            });\n          });\n        });\n        sub.unsubscribe();\n      }\n    });\n  }\n\n  /**\n   * This function navigates to the friends page.\n   */\n  async friendlist() {\n    this.router.navigate(['friends']);\n  }\n\n  /**\n   * This function navigates to the options page.\n   */\n  profileSettings() {\n    this.router.navigate(['options']);\n  }\n\n   /**\n   * This functionality creates an Ionic alert, this contains only a title and a description,\n   * furthermore there is a close button to close the Ionic alert. Used when you click on\n   * the badge icons.\n   * @param badgename Required for the title.\n   * @param badgeDescription Required for the description.\n   */\n  async badgeDescription(badgename, badgeDescription) {\n    const alert = document.createElement('ion-alert');\n    alert.header = badgename;\n    alert.message = badgeDescription;\n    alert.buttons = [{ text: \"schließen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    await alert.onDidDismiss();\n    this.user.ec_card\n    this.user.kreditcard\n    this.user.paypal\n  }\n\n  /**\n   * This function logs out the user.\n   */\n  loggout() {\n    this.authService.logout();\n  }\n\n  /**\n   * This functionality creates an Ionic alert, this contains only a title and a description,\n   * furthermore there is a close button to close the Ionic alert. Used when clicking on\n   * the icons of the payment methods.\n   * @param name Required for the title.\n   * @param discription Required for the description.\n   */\n  async paymentDescription(name: string, discription: string) {\n    const alert = document.createElement('ion-alert');\n    alert.header = name;\n    alert.message = discription;\n    alert.buttons = [{ text: \"schließen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    await alert.onDidDismiss();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n      \n    \n\n    \n      \n    \n\n    Profil\n\n    \n      \n    \n\n    \n      \n    \n\n  \n\n\n\n  \n    \n      \n        \n      \n      \n        \n          \n            {{user.displayName}}\n          \n        \n        \n          \n            {{user.description}}\n          \n        \n      \n    \n\n    \n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n    \n\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                .profileImg {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n}\n\n.profileImgCol{\n    max-width: 110px;\n}\n\n.profileDescriptionCol{\n    max-width: 300px;\n    margin-left: 10px;\n    //margin-right: auto;\n}\n\n.grid{\n    margin-top: 20px;\n}\n\n.name{\n    font-weight: bold;\n}\n\n.icons{\n    max-width: 50px;\n    max-height: 50px;\n}\n\n.iconsCol{\n    margin-top: 10px;\n}\n\n.row{\n    justify-content: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Profil                                                                                            {{user.displayName}}                                                {{user.description}}                                                                                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register/register.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class has functions to register a new user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                password\n                            \n                            \n                                secondPassword\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.page.ts:44\n                \n            \n\n\n            \n                \n                    This function registers a new User into firebase\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:22\n                        \n                    \n\n            \n                \n                    email from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:34\n                        \n                    \n\n            \n                \n                    displays the error message from firebase\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:26\n                        \n                    \n\n            \n                \n                    password from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:30\n                        \n                    \n\n            \n                \n                    the repeated password from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:18\n                        \n                    \n\n            \n                \n                    username from user\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n/**\n * This class has functions to register a new user\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  /**\n   username from user\n   */\n  username: string;\n  /**\n   email from user\n   */\n  email: string;\n  /**\n   password from user\n   */\n  password: string;\n  /**\n   the repeated password from user\n   */\n  secondPassword: string;\n  /**\n   displays the error message from firebase\n   */\n  errorMessage: string;\n\n  /**\n   * @ignore\n   */\n  constructor(public authService: AuthService, public router: Router) { }\n\n  /**\n   * This function registers a new User into firebase\n   */\n  register(){\n    if(this.password === this.secondPassword){\n      this.authService.register(this.email, this.password, this.username).then(ret => {\n        if(ret){\n          this.errorMessage = ret;\n        }\n      });\n    }else{\n      this.errorMessage = 'Passwörter nicht identisch';\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Registrieren\n  \n\n  Benutzername\n  \n  \n\n  E-Mail\n  \n  \n\n  Passwort\n  \n  \n\n  Passwort wiederholen\n  \n  \n\n  {{errorMessage}}\n  \n    Registrieren\n  \n  \n    Zurück zum Login\n  \n\n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                ion-content {\n  background: beige;\n  text-align: center;\n  p {\n    padding-top: 50px;\n    font-size: 50px;\n  }\n  ion-label {\n    font-size: 20px;\n  }\n\n  ion-input {\n    border: solid 1px #0d0d0d;\n    border-radius: 10px;\n    width: 50%;\n    margin: 10px auto;\n  }\n  ion-buttons {\n    ion-button {\n      border-radius: 10px;\n    }\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Registrieren    Benutzername      E-Mail      Passwort      Passwort wiederholen      {{errorMessage}}      Registrieren        Zurück zum Login  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleTransaction.html":{"url":"classes/SimpleTransaction.html","title":"class - SimpleTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/simpleTransaction.model.ts\n        \n\n\n            \n                Description\n            \n            \n                SimpleTransactions are used for the home view.\nIt's a simple version of the Transaction model and is used to display a part of an Transaction between the current user and another user.\nThis class is fit for usage in the home-view and should probably not be used anywhere else.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                dueDate\n                            \n                            \n                                groupName\n                            \n                            \n                                id\n                            \n                            \n                                otherUser\n                            \n                            \n                                outgoing\n                            \n                            \n                                pending\n                            \n                            \n                                purpose\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, amount: number, purpose: string, outgoing: boolean, pending: boolean, otherUser: User, groupName: string, dueDate: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/simpleTransaction.model.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                transaction.id\n\n                                                        \n                                                \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Amount from transaction.participation (amount per user)\n\n                                                        \n                                                \n                                                \n                                                        purpose\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                transaction.purpose\n\n                                                        \n                                                \n                                                \n                                                        outgoing\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the transaction is a cost or an income for the current user\n\n                                                        \n                                                \n                                                \n                                                        pending\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                If the transaction is still pending. Check if transaction.paid == true and transaction.accepted == false\n\n                                                        \n                                                \n                                                \n                                                        otherUser\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The other user tied to this Transaction\n\n                                                        \n                                                \n                                                \n                                                        groupName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dueDate\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from './user.model';\n\n/**\n * SimpleTransactions are used for the home view.\n * It's a simple version of the Transaction model and is used to display a part of an Transaction between the current user and another user.\n * This class is fit for usage in the home-view and should probably not be used anywhere else.\n */\n\nexport class SimpleTransaction{\n  id: string;\n  amount: number;\n  purpose: string;\n  pending: boolean;\n  outgoing: boolean;\n  otherUser: User;\n  groupName: string;\n  dueDate: string;\n\n  /**\n   *\n   * @param id transaction.id\n   * @param amount Amount from transaction.participation (amount per user)\n   * @param purpose transaction.purpose\n   * @param outgoing  Whether the transaction is a cost or an income for the current user\n   * @param pending If the transaction is still pending. Check if transaction.paid == true and transaction.accepted == false\n   * @param otherUser The other user tied to this Transaction\n   * @param groupName\n   * @param dueDate\n   */\n  constructor(id: string, amount: number, purpose: string, outgoing: boolean, pending: boolean, otherUser: User, groupName: string, dueDate : string){\n    this.id = id;\n    this.amount = amount;\n    this.purpose = purpose;\n    this.pending = pending;\n    this.outgoing = outgoing;\n    this.otherUser = otherUser;\n    this.groupName = groupName;\n    this.dueDate = dueDate;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistic.html":{"url":"classes/Statistic.html","title":"class - Statistic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistics.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Class used to hold Group statistics.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTimeCost\n                            \n                            \n                                allTimeIncome\n                            \n                            \n                                allTimeTotal\n                            \n                            \n                                lastMonthCost\n                            \n                            \n                                lastMonthIncome\n                            \n                            \n                                lastMonthTotal\n                            \n                            \n                                lastSixMonthsCost\n                            \n                            \n                                lastSixMonthsIncome\n                            \n                            \n                                lastSixMonthsTotal\n                            \n                            \n                                lastThreeMonthsCost\n                            \n                            \n                                lastThreeMonthsIncome\n                            \n                            \n                                lastThreeMonthsTotal\n                            \n                            \n                                lastWeekCost\n                            \n                            \n                                lastWeekIncome\n                            \n                            \n                                lastWeekTotal\n                            \n                            \n                                lastYearCost\n                            \n                            \n                                lastYearIncome\n                            \n                            \n                                lastYearTotal\n                            \n                            \n                                newestDate\n                            \n                            \n                                startDate\n                            \n                            \n                                timespan\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, newestDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistics.model.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                transaction.purchaseDate\n\n                                                        \n                                                \n                                                \n                                                        newestDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                new Date()\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allTimeCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTimeIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTimeTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastMonthCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastMonthIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastMonthTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastSixMonthsCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastSixMonthsIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastSixMonthsTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastThreeMonthsCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastThreeMonthsIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastThreeMonthsTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastWeekCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastWeekIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastWeekTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastYearCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastYearIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastYearTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newestDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timespan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Statistic{\n  startDate: Date;\n  newestDate: Date;\n  timespan: number;\n\n  allTimeTotal = 0;\n  allTimeCost = 0;\n  allTimeIncome = 0;\n\n  lastYearTotal = 0;\n  lastYearCost = 0;\n  lastYearIncome = 0;\n\n  lastSixMonthsTotal = 0;\n  lastSixMonthsCost = 0;\n  lastSixMonthsIncome = 0;\n\n  lastThreeMonthsTotal = 0;\n  lastThreeMonthsCost = 0;\n  lastThreeMonthsIncome = 0;\n\n  lastMonthTotal = 0;\n  lastMonthCost = 0;\n  lastMonthIncome = 0;\n\n  lastWeekTotal = 0;\n  lastWeekCost = 0;\n  lastWeekIncome = 0;\n\n  /**\n   *\n   * @param startDate transaction.purchaseDate\n   * @param newestDate new Date()\n   */\n  constructor(startDate: Date, newestDate: Date) {\n    this.startDate = startDate;\n    this.newestDate = newestDate;\n    // @ts-ignore\n    this.timespan = Math.round(((newestDate - startDate)/ 86400000));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsPage.html":{"url":"components/StatisticsPage.html","title":"component - StatisticsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatisticsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/statistics/statistics.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the profile-page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-statistics\n            \n\n            \n                styleUrls\n                ./statistics.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                income\n                            \n                            \n                                outcome\n                            \n                            \n                                pie\n                            \n                            \n                                pieChart\n                            \n                            \n                                self\n                            \n                            \n                                transactions\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeStats\n                            \n                            \n                                createPieChart\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changeStats\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStats(days: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/statistics/statistics.page.ts:75\n                \n            \n\n\n            \n                \n                    This function calls the statistics functions to calculate data for a certain period of time.\nThese are then stored in the respective variables and the data set of the pie chart is also updated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of days for which the data should be loaded, -1 stands for the entire period.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPieChart\n                        \n                    \n                \n            \n            \n                \ncreatePieChart(days: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/statistics/statistics.page.ts:90\n                \n            \n\n\n            \n                \n                    This function creates a pie chart with two pieces, incomes and outcomes, for a given time period.\nIt calls the statistics functions to calculate the data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of days for which the data should be loaded, -1 stands for the entire period.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/statistics/statistics.page.ts:54\n                \n            \n\n\n            \n                \n                    When the page is initialized, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. It is important that this is done\nat initialization otherwise there will be problems with the pichart.\nImportant here is the check whether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        income\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outcome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChart\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('pieChart')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        self\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { Transaction } from 'src/app/models/transaction.model';\nimport { User } from 'src/app/models/user.model';\nimport { StatisticsService } from 'src/app/services/statistics.service';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Chart from 'chart.js/auto'\n\n/**\n * This class is needed for the profile-page.\n */\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.page.html',\n  styleUrls: ['./statistics.page.scss'],\n})\n\nexport class StatisticsPage implements OnInit {\n  user: User = new User();\n  transactions: Transaction[];\n  income: number = 0;\n  outcome: number = 0;\n  self: number = 0;\n  pie: Chart;\n\n  @ViewChild('pieChart') pieChart;\n\n  /**\n   * @ignore\n   * @param router\n   * @param af\n   * @param transactionsservice\n   * @param userService\n   * @param stats\n   */\n  constructor(\n    public router: Router,\n    private af: AngularFireAuth,\n    private transactionsservice: TransactionService,\n    private userService: UserService,\n    private stats: StatisticsService\n  ) { }\n\n  /**\n    * When the page is initialized, all the required information\n    * is loaded from the services and stored in the variables\n    * provided for this purpose. It is important that this is done\n    * at initialization otherwise there will be problems with the pichart.\n    * Important here is the check whether the user is logged in, otherwise no data will be loaded.\n    */\n  ngOnInit() {\n    var sub = this.af.authState.subscribe(afuser => {\n      if (afuser) {\n        this.userService.findById(afuser.uid).then(user => {\n          this.user = user;\n          this.transactionsservice.getAllTransactionByUser(user, true).then(res => {\n            this.transactions = res;\n            this.createPieChart(30);\n            this.changeStats(30);\n          });\n        });\n        sub.unsubscribe();\n      }\n    });\n  }\n\n  /**\n   * This function calls the statistics functions to calculate data for a certain period of time.\n   * These are then stored in the respective variables and the data set of the pie chart is also updated.\n   * @param days Number of days for which the data should be loaded, -1 stands for the entire period.\n   */\n  async changeStats(days: number) {\n    this.income = this.stats.getAllIncomeOfTime(days, this.transactions, this.user.id)[0];\n    this.outcome = this.stats.getAllExpensesOfTime(days, this.transactions, this.user.id)[0];\n    this.self = this.stats.getAllSelfmadeTransactionsOfTime(this.user.id, days, this.transactions);\n    this.pie.data.datasets.forEach((dataset) => {\n      dataset.data = [this.stats.getAllIncomeOfTime(days, this.transactions, this.user.id)[0], this.stats.getAllExpensesOfTime(days, this.transactions, this.user.id)[0]];\n    });\n    this.pie.update();\n  }\n\n  /**\n   * This function creates a pie chart with two pieces, incomes and outcomes, for a given time period.\n   * It calls the statistics functions to calculate the data.\n   * @param days Number of days for which the data should be loaded, -1 stands for the entire period.\n   */\n  createPieChart(days: number) {\n    this.pie = new Chart(this.pieChart.nativeElement, {\n      type: 'pie',\n      data: {\n        labels: ['Einnahmen', 'Ausgaben'],\n        datasets: [\n          {\n            label: 'Dataset 1',\n            data: [this.stats.getAllIncomeOfTime(days, this.transactions, this.user.id)[0], this.stats.getAllExpensesOfTime(days, this.transactions, this.user.id)[0]],\n            backgroundColor: [\"rgba(104, 237, 136, 1)\", \"rgba(237, 104, 104, 1)\"],\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n          }\n        }\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Statistiken\n  \n\n\n\n  \n    Zeitraum\n    \n      1 Tag\n      1 Woche\n      1 Monat\n      3 Monate\n      6 Monate\n      1 Jahr\n      Gesamt\n    \n  \n\n\n  \n    \n      Einnahmen = {{income}}€\n    \n  \n\n  \n    \n      Ausgaben = {{outcome}}€\n    \n   -->\n\n  \n    \n      {{self}} Selbst angelegte Transaktionen!\n    \n  \n\n  \n    \n      Einnahmen und Ausgaben\n        \n    \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./statistics.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Statistiken        Zeitraum          1 Tag      1 Woche      1 Monat      3 Monate      6 Monate      1 Jahr      Gesamt                  Einnahmen = {{income}}€                  Ausgaben = {{outcome}}€       -->            {{self}} Selbst angelegte Transaktionen!                  Einnahmen und Ausgaben                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatisticsPageModule.html":{"url":"modules/StatisticsPageModule.html","title":"module - StatisticsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    StatisticsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatisticsPageModule\n\n\n\ncluster_StatisticsPageModule_imports\n\n\n\ncluster_StatisticsPageModule_declarations\n\n\n\n\nStatisticsPage\n\nStatisticsPage\n\n\n\nStatisticsPageModule\n\nStatisticsPageModule\n\nStatisticsPageModule -->\n\nStatisticsPage->StatisticsPageModule\n\n\n\n\n\nStatisticsPageRoutingModule\n\nStatisticsPageRoutingModule\n\nStatisticsPageModule -->\n\nStatisticsPageRoutingModule->StatisticsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/statistics/statistics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatisticsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StatisticsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StatisticsPageRoutingModule } from './statistics-routing.module';\n\nimport { StatisticsPage } from './statistics.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StatisticsPageRoutingModule\n  ],\n  declarations: [StatisticsPage]\n})\nexport class StatisticsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatisticsPageRoutingModule.html":{"url":"modules/StatisticsPageRoutingModule.html","title":"module - StatisticsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StatisticsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/statistics/statistics-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StatisticsPage } from './statistics.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatisticsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StatisticsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatisticsService.html":{"url":"injectables/StatisticsService.html","title":"injectable - StatisticsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatisticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/statistics.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for calculating group & user statistics.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllExpensesOfTime\n                            \n                            \n                                getAllIncomeOfTime\n                            \n                            \n                                getAllSelfmadeTransactionsOfTime\n                            \n                            \n                                getDays\n                            \n                            \n                                getGroupStatistics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpensesOfTime\n                        \n                    \n                \n            \n            \n                \ngetAllExpensesOfTime(days: number, transactions: Transaction[], userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:79\n                \n            \n\n\n            \n                \n                    This function returns all expenses of a user for a period of time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Specifies the number of days, -1 represents the entire period.\n\n                                    \n                                \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the transactions from a user in an array.\n\n                                    \n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed for the identification of the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        Returns all expenses of a user for a period of time.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllIncomeOfTime\n                        \n                    \n                \n            \n            \n                \ngetAllIncomeOfTime(days: number, transactions: Transaction[], userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:102\n                \n            \n\n\n            \n                \n                    This function returns all income of a user for a period of time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Specifies the number of days, -1 represents the entire period.\n\n                                    \n                                \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the transactions from a user in an array.\n\n                                    \n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed for the identification of the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        Returns all income of a user for a period of time.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSelfmadeTransactionsOfTime\n                        \n                    \n                \n            \n            \n                \ngetAllSelfmadeTransactionsOfTime(userid: string, days: number, transactions: Transaction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:125\n                \n            \n\n\n            \n                \n                    This function returns all created transactions of a user for a period of time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed for the identification of the user.\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Specifies the number of days, -1 represents the entire period.\n\n                                    \n                                \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the transactions from a user in an array.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Returns all created transactions of a user for a period of time.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDays\n                        \n                    \n                \n            \n            \n                \ngetDays(date1: Date, date2: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:67\n                \n            \n\n\n            \n                \n                    Calculates the difference between two dates in days.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date1\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        transaction.purchaseDate\n\n                                    \n                                \n                                \n                                    date2\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new Date()\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupStatistics\n                        \n                    \n                \n            \n            \n                \ngetGroupStatistics(transactions: Transaction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:18\n                \n            \n\n\n            \n                \n                    Creates and returns a new Statistics object and calculates data for the different time-spans.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array containing all transactions of the given group\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Statistic\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Transaction } from \"../models/transaction.model\";\nimport { Injectable } from \"@angular/core\";\nimport { Statistic } from \"../models/statistics.model\";\n\n/**\n * Service for calculating group & user statistics.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StatisticsService {\n  /**\n   * Creates and returns a new Statistics object and calculates data for the different time-spans.\n   * @param transactions Array containing all transactions of the given group\n   */\n  getGroupStatistics(transactions: Transaction[]): Statistic {\n    let today = new Date();\n    let statistic = new Statistic(new Date(transactions[0].purchaseDate), today)\n\n    transactions.forEach(transaction => {\n      transaction.amount = Math.round(transaction.amount * 100) / 100\n      //All time\n      statistic.allTimeTotal++;\n      if (transaction.type === \"cost\") statistic.allTimeCost += transaction.amount;\n      else statistic.allTimeIncome += transaction.amount;\n      //Last year\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastYearTotal++;\n        if (transaction.type === \"cost\") statistic.lastYearCost += transaction.amount;\n        else statistic.lastYearIncome += transaction.amount;\n      }\n      //Last 6 months\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastSixMonthsTotal++;\n        if (transaction.type === \"cost\") statistic.lastSixMonthsCost += transaction.amount;\n        else statistic.lastSixMonthsIncome += transaction.amount;\n      }\n      //Last 3 Months\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastThreeMonthsTotal++;\n        if (transaction.type === \"cost\") statistic.lastThreeMonthsCost += transaction.amount;\n        else statistic.lastThreeMonthsIncome += transaction.amount;\n      }\n      //Last Month\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastMonthTotal++;\n        if (transaction.type === \"cost\") statistic.lastMonthCost += transaction.amount;\n        else statistic.lastMonthIncome += transaction.amount;\n      }\n      //Last Week\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastWeekTotal++;\n        if (transaction.type === \"cost\") statistic.lastWeekCost += transaction.amount;\n        else statistic.lastWeekIncome += transaction.amount;\n      }\n    });\n    return statistic;\n  }\n\n  /**\n   * Calculates the difference between two dates in days.\n   * @param date1 transaction.purchaseDate\n   * @param date2 new Date()\n   */\n  getDays(date1: Date, date2: Date): Number {\n    // @ts-ignore\n    return Math.round(((date2 - date1) / 86400000))\n  }\n\n  /**\n   * This function returns all expenses of a user for a period of time.\n   * @param days Specifies the number of days, -1 represents the entire period.\n   * @param transactions Contains the transactions from a user in an array.\n   * @param userID Is needed for the identification of the user.\n   * @returns Returns all expenses of a user for a period of time.\n   */\n  getAllExpensesOfTime(days: number, transactions: Transaction[], userID: string) {\n    let costs = 0;\n    let ammount = 0;\n    transactions.forEach(transaction => {\n      if (transaction.type === \"cost\") {\n        if (this.getDays(new Date(transaction.purchaseDate), new Date())  {\n            if (p.user.id === userID) costs += p.stake;\n          })\n          ammount++;\n        }\n      }\n    });\n    return [Math.round(costs * 100) / 100, ammount];\n  }\n\n  /**\n     * This function returns all income of a user for a period of time.\n     * @param days Specifies the number of days, -1 represents the entire period.\n     * @param transactions Contains the transactions from a user in an array.\n     * @param userID Is needed for the identification of the user.\n     * @returns Returns all income of a user for a period of time.\n     */\n  getAllIncomeOfTime(days: number, transactions: Transaction[], userID: string) {\n    var costs: number = 0;\n    var ammount: number = 0;\n    transactions.forEach(transaction => {\n      if (transaction.type === \"income\") {\n        if (this.getDays(new Date(transaction.purchaseDate), new Date())  {\n            if (p.user.id === userID) costs += p.stake;\n          })\n          ammount++;\n        }\n      }\n    });\n    return [Math.round(costs * 100) / 100, ammount];\n  }\n\n  /**\n     * This function returns all created transactions of a user for a period of time.\n     * @param userid Is needed for the identification of the user.\n     * @param days Specifies the number of days, -1 represents the entire period.\n     * @param transactions Contains the transactions from a user in an array.\n     * @returns Returns all created transactions of a user for a period of time.\n     */\n  getAllSelfmadeTransactionsOfTime(userid: string, days: number, transactions: Transaction[]) {\n    var ammount: number = 0;\n    transactions.forEach(item => {\n      if (item.creator.id === userid) {\n        if (this.getDays(new Date(item.purchaseDate), new Date()) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/transaction.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                creator\n                            \n                            \n                                dueDate\n                            \n                            \n                                gid\n                            \n                            \n                                id\n                            \n                            \n                                pending\n                            \n                            \n                                photo\n                            \n                            \n                                purchaseDate\n                            \n                            \n                                purpose\n                            \n                            \n                                rhythm\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gid, amount, purpose, type, pending, rhythm, creator, purchaseDate?, dueDate?, photo?, id?)\n                    \n                \n                        \n                            \n                                Defined in src/app/transaction.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gid\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        amount\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        purpose\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pending\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rhythm\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creator\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        purchaseDate\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        dueDate\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        photo\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purchaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rhythm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Transaction{\n  id: string;\n  gid: string;\n  amount: number;\n  purpose: String;\n  type: string;\n  pending: boolean;\n  purchaseDate: Date;\n  dueDate: Date;\n  rhythm: string;\n  photo: any;\n  creator: string;\n\n  constructor(gid, amount, purpose, type, pending, rhythm, creator, purchaseDate?, dueDate?, photo?, id?){\n    this.gid = gid;\n    this.id = id;\n    this.amount = amount;\n    this.purpose = purpose;\n    this.type = type;\n    this.pending = pending;\n    this.purchaseDate = purchaseDate;\n    this.dueDate = dueDate;\n    this.rhythm = rhythm;\n    this.photo = photo;\n    this.creator = creator;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction-1.html":{"url":"classes/Transaction-1.html","title":"class - Transaction-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/transaction.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing the data type for the transaction.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accepted\n                            \n                            \n                                amount\n                            \n                            \n                                creator\n                            \n                            \n                                dueDate\n                            \n                            \n                                finished\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                paid\n                            \n                            \n                                participation\n                            \n                            \n                                photo\n                            \n                            \n                                purchaseDate\n                            \n                            \n                                purpose\n                            \n                            \n                                rhythm\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accepted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purchaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rhythm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from './user.model';\nimport {Group} from './group.model';\n\n/**\n * Class representing the data type for the transaction.\n */\nexport class Transaction{\n  id: string; //The id used in the database to identify the transaction\n  group: Group; //The group the transaction is part of\n  amount: number; //The total price that is paid or received\n  purpose: string; //The purpose of the transaction\n  type: string; //Either income or cost.\n  purchaseDate: string; //The date the bill was first created\n  dueDate: string; //The date when the transaction is due\n  rhythm: string; //The reoccurance of the transaction\n  photo: any; //A picture showing the bill\n  creator: User; //The creator of the transcation\n  finished: boolean; //Flag whether everyone has paid or not\n\n  participation: {user: User; stake: number}[]; //All participants of the transaction\n  accepted: {user: User; accepted: boolean}[]; //All participants that paid and whose payment got accepted by the creator\n  paid: {user: User; paid: boolean}[]; //All participants that marked the transaction as paid.\n\n  /**\n   * @ignore\n   * @param id\n   * @param amount\n   * @param purpose\n   * @param type\n   * @param rhythm\n   * @param creator\n   * @param purchaseDate\n   * @param dueDate\n   * @param photo\n   * @param group\n   */\n  constructor(id: string, amount: number, purpose: string, type: string, rhythm: string, creator: User, purchaseDate : string, dueDate : string, photo? : any,  group? : Group){\n    this.group = group;\n    this.id = id;\n    this.amount = amount;\n    this.purpose = purpose;\n    this.type = type;\n    this.purchaseDate = purchaseDate;\n    this.dueDate = dueDate;\n    this.rhythm = rhythm;\n    this.photo = photo;\n    this.creator = creator;\n    this.finished = false;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionCreatePage.html":{"url":"components/TransactionCreatePage.html","title":"component - TransactionCreatePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionCreatePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transaction/transaction-create/transaction-create.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-create\n            \n\n            \n                styleUrls\n                ./transaction-create.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-create.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                currentUser\n                            \n                            \n                                errors\n                            \n                            \n                                fairlyDistributedPrice\n                            \n                            \n                                fromGroup\n                            \n                            \n                                groups\n                            \n                            \n                                maxDate\n                            \n                            \n                                selectAllUsers\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateStakes\n                            \n                            \n                                cancel\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                takePicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateStakes\n                        \n                    \n                \n            \n            \n                \ncalculateStakes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:90\n                \n            \n\n\n            \n                \n                    Function to calculate stakes for all participants.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:159\n                \n            \n\n\n            \n                \n                    Function to cancel transaction creation and navigate to last page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:107\n                \n            \n\n\n            \n                \n                    Function to save the current data locally and navigate to the next creation page or finish the transaction creation. Checks for errors of inputs.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        takePicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    takePicture()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:166\n                \n            \n\n\n            \n                \n                    Function to attach a picture to the transaction.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : new Date().toISOString()\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fairlyDistributedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear() + 3\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAllUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Group} from \"../../models/group.model\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NavController} from \"@ionic/angular\";\nimport {Transaction} from \"../../models/transaction.model\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {GroupService} from \"../../services/group.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Camera, CameraResultType} from \"@capacitor/camera\";\nimport {TransactionTracker} from \"../../models/transactionTracker.model\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {User} from \"../../models/user.model\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-transaction-create',\n  templateUrl: './transaction-create.page.html',\n  styleUrls: ['./transaction-create.page.scss'],\n})\n/**\n * Class representing the logic for the transaction create view.\n */\nexport class TransactionCreatePage implements OnInit {\n  //The transaction that is going to be saved or passed later on.\n  transaction: Transaction;\n  //The groups of the current user.\n  groups: Group[] = [];\n  //Boolean to check whether the participants are picked individually or all at once.\n  selectAllUsers: boolean = true;\n  //Boolean to check whether everyone pays the same or stakes are decided indiviudally.\n  fairlyDistributedPrice: boolean = true;\n  //String for the current date to prevent past dates in date pickers\n  currentDate: string = new Date().toISOString();\n  //Calculation of max date; 3 years from now.\n  maxDate = new Date().getFullYear() + 3;\n  //Map for saving occuring errors and corresponding messages.\n  errors: Map = new Map();\n  //Boolean to mark whether the user came via group menu or not\n  fromGroup: boolean = false;\n  currentUser: User;\n\n  ionViewWillEnter(){\n    if (this.route.snapshot.paramMap.get('fromGroup')) {\n      this.fromGroup = true;\n      this.groupService.getGroupById(this.route.snapshot.paramMap.get('groupID')).then(group => {this.transaction.group = group});\n    }\n  }\n\n  /**\n   * @ignore\n   * @param router\n   * @param navCtrl\n   * @param route\n   * @param transactionService\n   * @param groupService\n   * @param userService\n   * @param af\n   * @param authService\n   */\n  constructor(private router: Router,\n              private navCtrl: NavController,\n              private route: ActivatedRoute,\n              private transactionService: TransactionService,\n              private groupService: GroupService,\n              private userService: UserService,\n              private af: AngularFireAuth,\n              private authService : AuthService) {\n\n      this.transaction = new Transaction(\"\", null, \"\", \"cost\", \"once\", authService.currentUser, new Date().toDateString(), new Date(new Date().getTime() + 7 * 24 * 60 * 60 * 1000).toDateString());\n      this.transaction.paid = [];\n      this.transaction.accepted = [];\n      this.transaction.participation = [];\n\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          this.groupService.getGroupsByUserId(this.currentUser.id).then(groups => {\n            this.groups = groups;\n          });\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n  /**\n   * Function to calculate stakes for all participants.\n   */\n  calculateStakes() {\n    let stake: number = this.transaction.amount / this.transaction.group.members.length;\n    for (let user of this.transaction.group.members) {\n      let stakeEntry = {user, stake};\n      let paid = user.id === this.transaction.creator.id;\n      let accepted = user.id === this.transaction.creator.id;\n      let paidEntry = {user, paid};\n      let acceptedEntry = {user, accepted};\n      this.transaction.participation.push(stakeEntry);\n      this.transaction.accepted.push(acceptedEntry);\n      this.transaction.paid.push(paidEntry);\n    }\n  }\n\n  /**\n   * Function to save the current data locally and navigate to the next creation page or finish the transaction creation. Checks for errors of inputs.\n   */\n  nextPage(): void {\n    this.errors.clear();\n    if (!this.transaction.purpose){\n      this.errors.set('purpose', 'Bitte geben Sie einen Zweck an.');\n    }\n    if (!this.transaction.amount){\n      this.errors.set('amount', 'Bitte geben Sie einen Betrag an.');\n    }\n    if(this.transaction.amount  {\n            if (this.transaction.rhythm !== 'once') {\n              this.transactionService.getTransactionById(docRef.id).then((doc: any) => {\n                let transaction: Transaction = doc;\n                let tracker = new TransactionTracker(transaction,\n                  transaction.creator,\n                  new Date(transaction.dueDate),\n                  new Date(new Date(this.transaction.dueDate).getTime() + this.transactionService.getRhythmMiliseconds(this.transaction.rhythm)),\n                  new Date(this.transaction.dueDate),\n                  this.transactionService.getRhythmMiliseconds(this.transaction.rhythm));\n                this.transactionService.persistTracker(tracker);\n              });\n            }\n          });\n        this.navCtrl.pop();\n        return;\n      }\n      if (!this.selectAllUsers) {\n        this.transactionService.saveLocally(this.transaction);\n        this.router.navigate(['transaction-participants', {'fairlyDistributedPrice': JSON.stringify(this.fairlyDistributedPrice)}]);\n        return;\n      }\n      if (!this.fairlyDistributedPrice) {\n        this.transactionService.saveLocally(this.transaction);\n        this.router.navigate(['transaction-stakes']);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Function to cancel transaction creation and navigate to last page.\n   */\n  cancel(): void {\n    this.navCtrl.pop();\n  }\n\n  /**\n   * Function to attach a picture to the transaction.\n   */\n  async takePicture() {\n    await Camera.getPhoto({\n        quality: 90,\n        allowEditing: false,\n        resultType: CameraResultType.Base64\n      }).then(data => {\n        this.transaction.photo = \"data:image/jpeg;base64, \" + data.base64String;\n      });\n  }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    Neue Transaktion\n  \n\n\n\n  \n    {{groupChoice.name}}\n  \n  \n    Keine Gruppe gefunden.\n  \n  \n    {{transaction.group.name}}\n  \n  {{errors.get('group')}}\n  \n    Einnahme\n    Ausgabe\n  \n  \n    Zweck\n    \n  \n  {{errors.get('purpose')}}\n  \n    Betrag\n    \n    €\n  \n  {{errors.get('amount')}}\n  \n    Rechnungsdatum\n    \n  \n  \n    Fälligkeitsdatum\n    \n  \n  \n    Rhythmus\n    \n      Einmalig\n      Täglich\n      Wöchentlich\n      Monatlich\n      Jährlich\n    \n  \n  \n    Alle auswählen\n    \n  \n  \n    Fair aufteilen\n    \n  \n  \n    Beleg\n    \n    \n      \n    \n    \n      \n    \n  \n  \n  \n    \n    \n  \n  \n  \n  \n    \n  \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-create.page.scss\n                \n                .center {\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Neue Transaktion        {{groupChoice.name}}        Keine Gruppe gefunden.        {{transaction.group.name}}    {{errors.get(\\'group\\')}}      Einnahme    Ausgabe        Zweck        {{errors.get(\\'purpose\\')}}      Betrag        €    {{errors.get(\\'amount\\')}}      Rechnungsdatum            Fälligkeitsdatum            Rhythmus          Einmalig      Täglich      Wöchentlich      Monatlich      Jährlich            Alle auswählen            Fair aufteilen            Beleg                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionCreatePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionCreatePageModule.html":{"url":"modules/TransactionCreatePageModule.html","title":"module - TransactionCreatePageModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionCreatePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionCreatePageModule\n\n\n\ncluster_TransactionCreatePageModule_imports\n\n\n\ncluster_TransactionCreatePageModule_exports\n\n\n\ncluster_TransactionCreatePageModule_declarations\n\n\n\n\nTransactionCreatePage\n\nTransactionCreatePage\n\n\n\nTransactionCreatePageModule\n\nTransactionCreatePageModule\n\nTransactionCreatePageModule -->\n\nTransactionCreatePage->TransactionCreatePageModule\n\n\n\n\n\nTransactionCreatePage \n\nTransactionCreatePage \n\nTransactionCreatePage  -->\n\nTransactionCreatePageModule->TransactionCreatePage \n\n\n\n\n\nTransactionCreatePageRoutingModule\n\nTransactionCreatePageRoutingModule\n\nTransactionCreatePageModule -->\n\nTransactionCreatePageRoutingModule->TransactionCreatePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-create/transaction-create.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionCreatePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionCreatePageRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionCreatePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionCreatePageRoutingModule } from './transaction-create-routing.module';\n\nimport { TransactionCreatePage } from './transaction-create.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionCreatePageRoutingModule\n  ],\n  exports: [\n    TransactionCreatePage\n  ],\n  declarations: [TransactionCreatePage]\n})\nexport class TransactionCreatePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionCreatePageRoutingModule.html":{"url":"modules/TransactionCreatePageRoutingModule.html","title":"module - TransactionCreatePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionCreatePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-create/transaction-create-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionCreatePage } from './transaction-create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionCreatePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionCreatePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionDetailsPage.html":{"url":"components/TransactionDetailsPage.html","title":"component - TransactionDetailsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionDetailsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transaction/transaction-details/transaction-details.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-details\n            \n\n            \n                styleUrls\n                ./transaction-details.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-details.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accepted\n                            \n                            \n                                currentUser\n                            \n                            \n                                currentView\n                            \n                            \n                                hasStake\n                            \n                            \n                                notPaid\n                            \n                            \n                                otherUserId\n                            \n                            \n                                paidAndNotAccepted\n                            \n                            \n                                stake\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                deleteTracker\n                            \n                            \n                                formatRhythm\n                            \n                            \n                                formatType\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                payTransaction\n                            \n                            \n                                removePicture\n                            \n                            \n                                    Async\n                                takePicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:125\n                \n            \n\n\n            \n                \n                    Function to delete the current viewed transaction after confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTracker\n                        \n                    \n                \n            \n            \n                \ndeleteTracker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:136\n                \n            \n\n\n            \n                \n                    Function to delete the tracker of the current transaction after confirmation if there is one.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatRhythm\n                        \n                    \n                \n            \n            \n                \nformatRhythm(rhythm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:99\n                \n            \n\n\n            \n                \n                    Function to return a more readable format for the transaction rhythm.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rhythm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the intern representation of the rhythm.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatType\n                        \n                    \n                \n            \n            \n                \nformatType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:84\n                \n            \n\n\n            \n                \n                    Function to return a more readable format for the transaction type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the intern representation of the type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payTransaction\n                        \n                    \n                \n            \n            \n                \npayTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:151\n                \n            \n\n\n            \n                \n                    Function to send the information of payment to the owner of the transaction for confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePicture\n                        \n                    \n                \n            \n            \n                \nremovePicture()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:192\n                \n            \n\n\n            \n                \n                    Function to remove attachment from transaction.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        takePicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    takePicture()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:177\n                \n            \n\n\n            \n                \n                    Function to upload a picture in the attachment tab.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accepted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'overview'\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasStake\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notPaid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        otherUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paidAndNotAccepted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stake\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Transaction} from \"../../models/transaction.model\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {Camera, CameraResultType} from \"@capacitor/camera\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {User} from \"../../models/user.model\";\nimport {NavController} from \"@ionic/angular\";\n\n\n@Component({\n  selector: 'app-transaction-details',\n  templateUrl: './transaction-details.page.html',\n  styleUrls: ['./transaction-details.page.scss'],\n})\n/**\n * Class representing the logic for the transaction detal view.\n */\nexport class TransactionDetailsPage implements OnInit {\n  transaction: Transaction; //transaction of which the details are shown\n  currentView: string = 'overview'; //tab which is shown\n  otherUserId: string; //ID of the user which is targeted (when the current user wants to pay out an income to all participants this helps with the payment for one specific participant)\n  hasStake: boolean = false; //Boolean whether the current user is involved in the transaction or not\n  currentUser: User;\n  stake: number;\n  paidAndNotAccepted: boolean;\n  accepted: boolean;\n  notPaid: boolean;\n  /**\n   * @ignore\n   * @param route\n   * @param sanitizer\n   * @param transactionService\n   * @param router\n   * @param authService\n   * @param userService\n   * @param navCtrl\n   * @param af\n   */\n  constructor(private route: ActivatedRoute,\n              private sanitizer: DomSanitizer,\n              private transactionService : TransactionService,\n              private router: Router,\n              private authService: AuthService,\n              private userService: UserService,\n              private navCtrl: NavController,\n              private af: AngularFireAuth,) {\n    this.transaction = this.transactionService.getLocally();\n    this.otherUserId = JSON.parse(localStorage.getItem('otherUser'));\n  }\n\n  ionViewWillEnter() {\n\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          this.transaction.participation.forEach(entry => {\n            if (entry.user.id === this.currentUser.id){\n              this.hasStake = true;\n            }\n          })\n          this.stake = this.transactionService.getStakeForUser(this.currentUser, this.transaction);\n          this.paidAndNotAccepted = (this.transactionService.hasUserPaid(this.currentUser.id, this.transaction) && !this.transactionService.wasPaymentAccepted(this.currentUser.id, this.transaction))\n          this.accepted = this.transactionService.wasPaymentAccepted(this.currentUser.id, this.transaction);\n          this.notPaid =  !this.transactionService.hasUserPaid(this.currentUser.id, this.transaction);\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n\n  ngOnInit() {\n  }\n\n  /**\n   * Function to return a more readable format for the transaction type.\n   * @param type: the intern representation of the type.\n   */\n  formatType(type: string): string{\n    switch (type) {\n      case 'cost': {\n        return 'Ausgabe';\n      }\n      case 'income': {\n        return 'Einnahme';\n      }\n    }\n  }\n\n  /**\n   * Function to return a more readable format for the transaction rhythm.\n   * @param rhythm: the intern representation of the rhythm.\n   */\n  formatRhythm(rhythm: string): string{\n    switch (rhythm) {\n      case 'once': {\n        return 'Einmalig';\n      }\n      case 'daily': {\n        return 'Täglich';\n      }\n      case 'weekly': {\n        return 'Wöchentlich';\n      }\n      case 'monthly': {\n        return 'Monatlich';\n      }\n      case 'yearly': {\n        return 'Jährlich';\n      }\n      case 'deleted': {\n        return 'Beendet';\n      }\n    }\n  }\n\n  /**\n   * Function to delete the current viewed transaction after confirmation.\n   */\n  delete(){\n    let confirmation = confirm('Wollen Sie die Transaktion wirklich löschen?');\n    if (confirmation) {\n      this.transactionService.delete(this.transaction.id);\n      this.router.navigate(['home']);\n    }\n  }\n\n  /**\n   * Function to delete the tracker of the current transaction after confirmation if there is one.\n   */\n  deleteTracker(){\n    let confirmation = confirm('Wollen Sie das Wiederkehren dieser Transaktion wirklich beenden?');\n    if (confirmation) {\n      this.transactionService.findTrackerById(this.transaction.id).then(tracker => {\n        this.transaction.rhythm = 'deleted';\n        this.transactionService.deleteTracker(tracker);\n      }).finally(() => {\n        this.transactionService.update(this.transaction);\n      })\n    }\n  }\n\n  /**\n   * Function to send the information of payment to the owner of the transaction for confirmation.\n   */\n  payTransaction(){\n    if(this.authService.currentUser){\n      if(this.transaction.creator.id !== this.authService.currentUser.id) {\n          this.transaction.paid.forEach(p => {\n            if (p.user.id === this.authService.currentUser.id) {\n              p.paid = true;\n              this.transactionService.update(this.transaction);\n              this.router.navigate(['home']);\n            }\n          });\n        }\n        else{\n          this.transaction.paid.forEach(p => {\n          if(p.user.id === this.otherUserId) {\n            p.paid = true;\n            this.transactionService.update(this.transaction);\n            this.router.navigate(['home']);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Function to upload a picture in the attachment tab.\n   */\n  async takePicture() {\n    await Camera.getPhoto({\n      quality: 90,\n      allowEditing: true,\n      resultType: CameraResultType.Base64\n    }).then(data => {\n      this.transaction.photo = \"data:image/jpeg;base64, \" + data.base64String;\n      console.log(this.transaction);\n      this.transactionService.update(this.transaction)\n    });\n  }\n\n  /**\n   * Function to remove attachment from transaction.\n   */\n  removePicture(){\n    this.transaction.photo = null;\n    this.transactionService.update(this.transaction);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{transaction.purpose}}\n    \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    \n      \n    \n      \n    \n      \n      \n    \n      \n    \n      \n      \n    \n      \n    \n      \n    \n  \n  \n    \n      Gruppe\n      {{ transaction.group.name }}\n    \n    \n      Typ\n      {{ formatType(transaction.type)}}\n    \n    \n      Betrag\n      {{ transaction.amount}}€\n    \n    \n      Eigener Anteil\n      {{stake}}€\n      \n      \n      \n    \n    \n      Ersteller\n      {{ transaction.creator.displayName}}\n    \n    \n      Rechnungsdatum\n      \n    \n    \n      Fälligkeitsdatum\n      \n        \n      Rhythmus\n      {{ formatRhythm(transaction.rhythm)}}\n    \n    Bezahlen\n    Bezahlen\n  \n  \n    \n      \n        \n      \n      {{member.displayName}}\n      {{transactionService.getStakeForUser(member, transaction)}}€\n      \n      \n      \n    \n  \n  \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-details.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{transaction.purpose}}                                                                                                                                    Gruppe      {{ transaction.group.name }}              Typ      {{ formatType(transaction.type)}}              Betrag      {{ transaction.amount}}€              Eigener Anteil      {{stake}}€                                Ersteller      {{ transaction.creator.displayName}}              Rechnungsdatum                    Fälligkeitsdatum                    Rhythmus      {{ formatRhythm(transaction.rhythm)}}        Bezahlen    Bezahlen                                  {{member.displayName}}      {{transactionService.getStakeForUser(member, transaction)}}€                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionDetailsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionDetailsPageModule.html":{"url":"modules/TransactionDetailsPageModule.html","title":"module - TransactionDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionDetailsPageModule\n\n\n\ncluster_TransactionDetailsPageModule_imports\n\n\n\ncluster_TransactionDetailsPageModule_declarations\n\n\n\n\nTransactionDetailsPage\n\nTransactionDetailsPage\n\n\n\nTransactionDetailsPageModule\n\nTransactionDetailsPageModule\n\nTransactionDetailsPageModule -->\n\nTransactionDetailsPage->TransactionDetailsPageModule\n\n\n\n\n\nTransactionDetailsPageRoutingModule\n\nTransactionDetailsPageRoutingModule\n\nTransactionDetailsPageModule -->\n\nTransactionDetailsPageRoutingModule->TransactionDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-details/transaction-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionDetailsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionDetailsPageRoutingModule } from './transaction-details-routing.module';\n\nimport { TransactionDetailsPage } from './transaction-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionDetailsPageRoutingModule\n  ],\n  declarations: [TransactionDetailsPage]\n})\nexport class TransactionDetailsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionDetailsPageRoutingModule.html":{"url":"modules/TransactionDetailsPageRoutingModule.html","title":"module - TransactionDetailsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionDetailsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-details/transaction-details-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionDetailsPage } from './transaction-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionDetailsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionParticipantsPage.html":{"url":"components/TransactionParticipantsPage.html","title":"component - TransactionParticipantsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionParticipantsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transaction/transaction-participants/transaction-participants.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-participants\n            \n\n            \n                styleUrls\n                ./transaction-participants.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-participants.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allSelected\n                            \n                            \n                                fairlyDistributedCosts\n                            \n                            \n                                participants\n                            \n                            \n                                participation\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateStakes\n                            \n                            \n                                handleSubmit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSelectAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateStakes\n                        \n                    \n                \n            \n            \n                \ncalculateStakes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:46\n                \n            \n\n\n            \n                \n                    Function to calculate the stakes of all selected participants and fill the corresponding arrays.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \nhandleSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:65\n                \n            \n\n\n            \n                \n                    Function to complete the creation of the transaction by creating a tracker if needed and saving the transaction either locally for further editing via stakes or to the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSelectAll\n                        \n                    \n                \n            \n            \n                \ntoggleSelectAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:92\n                \n            \n\n\n            \n                \n                    Function for the Choose all slider.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fairlyDistributedCosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {User} from \"../../models/user.model\";\nimport {Transaction} from \"../../models/transaction.model\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {TransactionTracker} from \"../../models/transactionTracker.model\";\n\n@Component({\n  selector: 'app-transaction-participants',\n  templateUrl: './transaction-participants.page.html',\n  styleUrls: ['./transaction-participants.page.scss'],\n})\n/**\n * This class represents the logic for the page in which users chose participants for transactions\n */\nexport class TransactionParticipantsPage implements OnInit {\n  allSelected : boolean = false;\n  participants: User[] = [];\n  participation: { user: User, participates: boolean}[] = [];\n  fairlyDistributedCosts : boolean;\n  transaction : Transaction;\n\n  /**\n   * @ignore\n   * @param transactionService:\n   * @param router\n   * @param route\n   * @param sanitizer\n   */\n  constructor(private transactionService : TransactionService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private sanitizer: DomSanitizer) {\n    this.fairlyDistributedCosts = JSON.parse(route.snapshot.paramMap.get('fairlyDistributedPrice'));\n    this.transaction = this.transactionService.getLocally();\n    this.transaction.group.members.forEach(user => {\n      let participates = false;\n      this.participation.push({user, participates});\n    })\n  }\n\n  /**\n   * Function to calculate the stakes of all selected participants and fill the corresponding arrays.\n   */\n  calculateStakes(){\n      this.participation.forEach(participant => {if (participant.participates) this.participants.push(participant.user)});\n      let stake: number = this.transaction.amount / this.participants.length;\n      for (let user of this.participants) {\n        let stakeEntry = {user, stake};\n        let paid = user.id === this.transaction.creator.id;\n        let accepted = user.id === this.transaction.creator.id;\n        let paidEntry = {user, paid};\n        let acceptedEntry = {user, accepted};\n        console.log(stakeEntry);\n        this.transaction.participation.push(stakeEntry);\n        this.transaction.accepted.push(acceptedEntry);\n        this.transaction.paid.push(paidEntry);\n      }\n  }\n\n  /**\n   * Function to complete the creation of the transaction by creating a tracker if needed and saving the transaction either locally for further editing via stakes or to the database.\n   */\n  handleSubmit() {\n    this.calculateStakes();\n    if (this.fairlyDistributedCosts) {\n      this.transactionService.persist(this.transaction).then(docRef => {\n        if (this.transaction.rhythm !== 'once') {\n          this.transactionService.getTransactionById(docRef.id).then((doc: any) => {\n            let transaction: Transaction = doc;\n            let tracker = new TransactionTracker(transaction,\n              transaction.creator,\n              new Date(transaction.dueDate),\n              new Date(new Date(this.transaction.dueDate).getTime() + this.transactionService.getRhythmMiliseconds(this.transaction.rhythm)),\n              new Date(this.transaction.dueDate),\n              this.transactionService.getRhythmMiliseconds(this.transaction.rhythm));\n            this.transactionService.persistTracker(tracker);\n          });\n        }\n        this.router.navigate(['home']);\n      });\n    } else {\n      this.transactionService.saveLocally(this.transaction);\n      this.router.navigate(['transaction-stakes']);\n    }\n  }\n\n  /**\n   * Function for the Choose all slider.\n   */\n  toggleSelectAll(){\n    if (this.allSelected) {\n      this.participation.forEach(participant => participant.participates = false);\n    } else {\n      this.participation.forEach(participant => participant.participates = true);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Teilnehmer auswählen\n  \n\n\n\n  \n    Alle\n    \n  \n  \n    \n      \n        \n      \n      {{participant.user.displayName}}\n      \n    \n  \n  \n    \n      \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-participants.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Teilnehmer auswählen        Alle                                      {{participant.user.displayName}}                                                      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionParticipantsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionParticipantsPageModule.html":{"url":"modules/TransactionParticipantsPageModule.html","title":"module - TransactionParticipantsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionParticipantsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionParticipantsPageModule\n\n\n\ncluster_TransactionParticipantsPageModule_declarations\n\n\n\ncluster_TransactionParticipantsPageModule_imports\n\n\n\n\nTransactionParticipantsPage\n\nTransactionParticipantsPage\n\n\n\nTransactionParticipantsPageModule\n\nTransactionParticipantsPageModule\n\nTransactionParticipantsPageModule -->\n\nTransactionParticipantsPage->TransactionParticipantsPageModule\n\n\n\n\n\nTransactionParticipantsPageRoutingModule\n\nTransactionParticipantsPageRoutingModule\n\nTransactionParticipantsPageModule -->\n\nTransactionParticipantsPageRoutingModule->TransactionParticipantsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-participants/transaction-participants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionParticipantsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionParticipantsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionParticipantsPageRoutingModule } from './transaction-participants-routing.module';\n\nimport { TransactionParticipantsPage } from './transaction-participants.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionParticipantsPageRoutingModule\n  ],\n  declarations: [TransactionParticipantsPage]\n})\nexport class TransactionParticipantsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionParticipantsPageRoutingModule.html":{"url":"modules/TransactionParticipantsPageRoutingModule.html","title":"module - TransactionParticipantsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionParticipantsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-participants/transaction-participants-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionParticipantsPage } from './transaction-participants.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionParticipantsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionParticipantsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionStakesPage.html":{"url":"components/TransactionStakesPage.html","title":"component - TransactionStakesPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionStakesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transaction/transaction-stakes/transaction-stakes.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-stakes\n            \n\n            \n                styleUrls\n                ./transaction-stakes.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-stakes.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentAmount\n                            \n                            \n                                handleSubmit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentAmount\n                        \n                    \n                \n            \n            \n                \ngetCurrentAmount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:44\n                \n            \n\n\n            \n                \n                    Function to calculate the current distributed amount in the input fields.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \nhandleSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:53\n                \n            \n\n\n            \n                \n                    Function to finish the transaction creation. Checks for input errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {Transaction} from \"../../models/transaction.model\";\nimport {TransactionTracker} from \"../../models/transactionTracker.model\";\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-transaction-stakes',\n  templateUrl: './transaction-stakes.page.html',\n  styleUrls: ['./transaction-stakes.page.scss'],\n})\n/**\n * Class representing the logic of the transaction stakes view.\n */\nexport class TransactionStakesPage implements OnInit {\n  transaction: Transaction;\n  errors: Map = new Map();\n\n  /**\n   * @ignore\n   * @param router\n   * @param transactionService\n   */\n  constructor(private router: Router,\n              private transactionService: TransactionService,\n              public sanitizer: DomSanitizer) {\n    this.transaction = transactionService.getLocally();\n    if(this.transaction.participation.length === 0){\n      let stake = this.transaction.amount / this.transaction.group.members.length;\n      let accepted = false;\n      let paid = false;\n      this.transaction.group.members.forEach(user => {\n        this.transaction.participation.push({user, stake});\n        this.transaction.accepted.push({user, accepted});\n        this.transaction.paid.push({user, paid});\n      })\n    }\n  }\n\n  /**\n   * Function to calculate the current distributed amount in the input fields.\n   */\n  getCurrentAmount(){\n    let sum = 0;\n    this.transaction.participation.forEach(participation => sum += participation.stake);\n    return Math.round(sum*100)/100;\n  }\n\n  /**\n   * Function to finish the transaction creation. Checks for input errors.\n   */\n  handleSubmit() {\n    this.errors.clear();\n    if (this.getCurrentAmount() > this.transaction.amount) {\n      this.errors.set('amount', 'Aufgeteilter Betrag ist größer als der Gesamtbetrag');\n    }\n    if (this.getCurrentAmount()  {\n        if (this.transaction.rhythm !== 'once') {\n          this.transactionService.getTransactionById(docRef.id).then((doc: any) => {\n            let transaction: Transaction = doc;\n            let tracker = new TransactionTracker(transaction,\n              transaction.creator,\n              new Date(transaction.dueDate),\n              new Date(new Date(this.transaction.dueDate).getTime() + this.transactionService.getRhythmMiliseconds(this.transaction.rhythm)),\n              new Date(this.transaction.dueDate),\n              this.transactionService.getRhythmMiliseconds(this.transaction.rhythm));\n            this.transactionService.persistTracker(tracker);\n          });\n        }\n        this.router.navigate(['home']);\n      });\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Geld aufteilen\n  \n\n\n\n  \n    \n      \n        \n      \n      {{participant.user.displayName ? participant.user.displayName : participant.user.userName}}\n      \n      €\n    \n  \n  \n    Ausgewählt: {{getCurrentAmount()}}€ von {{transaction.amount}}€\n  \n  {{errors.get('amount')}}\n  \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-stakes.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Geld aufteilen                                  {{participant.user.displayName ? participant.user.displayName : participant.user.userName}}            €            Ausgewählt: {{getCurrentAmount()}}€ von {{transaction.amount}}€    {{errors.get(\\'amount\\')}}                                    '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionStakesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionStakesPageModule.html":{"url":"modules/TransactionStakesPageModule.html","title":"module - TransactionStakesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionStakesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionStakesPageModule\n\n\n\ncluster_TransactionStakesPageModule_declarations\n\n\n\ncluster_TransactionStakesPageModule_imports\n\n\n\n\nTransactionStakesPage\n\nTransactionStakesPage\n\n\n\nTransactionStakesPageModule\n\nTransactionStakesPageModule\n\nTransactionStakesPageModule -->\n\nTransactionStakesPage->TransactionStakesPageModule\n\n\n\n\n\nTransactionStakesPageRoutingModule\n\nTransactionStakesPageRoutingModule\n\nTransactionStakesPageModule -->\n\nTransactionStakesPageRoutingModule->TransactionStakesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-stakes/transaction-stakes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionStakesPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionStakesPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionStakesPageRoutingModule } from './transaction-stakes-routing.module';\n\nimport { TransactionStakesPage } from './transaction-stakes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionStakesPageRoutingModule\n  ],\n  declarations: [TransactionStakesPage]\n})\nexport class TransactionStakesPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionStakesPageRoutingModule.html":{"url":"modules/TransactionStakesPageRoutingModule.html","title":"module - TransactionStakesPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionStakesPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-stakes/transaction-stakes-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionStakesPage } from './transaction-stakes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionStakesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionStakesPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionTracker.html":{"url":"classes/TransactionTracker.html","title":"class - TransactionTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/transactionTracker.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a TransactionTracker, a data type used to create reoccurring transactions.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createDate\n                            \n                            \n                                creator\n                            \n                            \n                                id\n                            \n                            \n                                lastDate\n                            \n                            \n                                nextDate\n                            \n                            \n                                originalTransaction\n                            \n                            \n                                rhythm\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(originalTransaction: Transaction, creator: User, lastDate: Date, nextDate: Date, createDate: Date, rhythm: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/transactionTracker.model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        originalTransaction\n                                                  \n                                                        \n                                                                        Transaction\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The transaction that needs follow-up transactions\n\n                                                        \n                                                \n                                                \n                                                        creator\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The creator of the original transaction\n\n                                                        \n                                                \n                                                \n                                                        lastDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The date where the last transaction was created\n\n                                                        \n                                                \n                                                \n                                                        nextDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The date where the next transaction needs to be created\n\n                                                        \n                                                \n                                                \n                                                        createDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        rhythm\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The rhythm in which the transaction needs to be created\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rhythm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from './user.model';\nimport {Transaction} from './transaction.model';\n\n/**\n * This class represents a TransactionTracker, a data type used to create reoccurring transactions.\n */\nexport class TransactionTracker{\n  id: string;\n  originalTransaction: Transaction;\n  creator: User;\n  lastDate: Date;\n  nextDate: Date;\n  createDate: Date;\n  rhythm: number;\n\n  /**\n   * @param originalTransaction: The transaction that needs follow-up transactions\n   * @param creator: The creator of the original transaction\n   * @param lastDate: The date where the last transaction was created\n   * @param nextDate: The date where the next transaction needs to be created\n   * @param createDate\n   * @param rhythm: The rhythm in which the transaction needs to be created\n   */\n  constructor(originalTransaction: Transaction, creator: User, lastDate: Date, nextDate: Date, createDate: Date, rhythm: number){\n    this.originalTransaction = originalTransaction;\n    this.creator = creator;\n    this.lastDate = lastDate;\n    this.nextDate = nextDate;\n    this.createDate = createDate;\n    this.rhythm = rhythm;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TutorialPage.html":{"url":"components/TutorialPage.html","title":"component - TutorialPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TutorialPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tutorial/tutorial.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is for the tutorial after you register a new account\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tutorial\n            \n\n            \n                styleUrls\n                ./tutorial.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tutorial.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n/**\n * This class is for the tutorial after you register a new account\n */\n@Component({\n  selector: 'app-tutorial',\n  templateUrl: './tutorial.page.html',\n  styleUrls: ['./tutorial.page.scss'],\n})\nexport class TutorialPage implements OnInit {\n\n  /**\n   * @ignore\n   * @param router\n   */\n  constructor(public router: Router) { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n            \n          \n        \n        \n          \n            Willkommen!\n            Unsere App ermöglicht Ihnen schnell und einfach Ausgaben und Einnahmen mit Ihren Freunden fair aufzuteilen\n            \n              \n                Tutorial Überspringen\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Schritt 1:\n            Wenn Sie auf Ihrem Profil oben links auf das Icon klicken dann gelangen Sie zu Ihrer Freundesliste\n            Dort können Sie neue Freunde mit der Email-Adresse hinzufügen\n            \n              \n                Tutorial Überspringen\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Schritt 2:\n            Mit Ihren Freunden können Sie nun eine neue Gruppe erstellen\n            Klicken Sie dafür auf das Plus Icon unten rechts\n            \n              \n                Tutorial Überspringen\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Schritt 3:\n            Mit Ihrer neuen Gruppe können Sie nun eine Transaktion erstellen\n            Klicken Sie dafür in der Bodenleiste auf das Icon in der Mitte links\n            In dem Formular können Sie nun oben Ihre Gruppe auswählen und den Rest nach Belieben ausfüllen\n            \n              \n                Tutorial Überspringen\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Super!\n            Nun können Sie Ihre erstellte Transaktion auf Ihrer Startseite sehen\n            Wenn ein Freund eine Transaktion mit Ihnen erstellt, dann sehen Sie das auch auf Ihrer Startseite\n            Viel Spaß mit unserer App! :)\n            \n              \n                Fertig\n              \n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./tutorial.page.scss\n                \n                ion-content{\n  ion-slides {\n    height: 100%\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                      Willkommen!            Unsere App ermöglicht Ihnen schnell und einfach Ausgaben und Einnahmen mit Ihren Freunden fair aufzuteilen                                          Tutorial Überspringen                                                                                                                                              Schritt 1:            Wenn Sie auf Ihrem Profil oben links auf das Icon klicken dann gelangen Sie zu Ihrer Freundesliste            Dort können Sie neue Freunde mit der Email-Adresse hinzufügen                                          Tutorial Überspringen                                                                                                                                              Schritt 2:            Mit Ihren Freunden können Sie nun eine neue Gruppe erstellen            Klicken Sie dafür auf das Plus Icon unten rechts                                          Tutorial Überspringen                                                                                                                                              Schritt 3:            Mit Ihrer neuen Gruppe können Sie nun eine Transaktion erstellen            Klicken Sie dafür in der Bodenleiste auf das Icon in der Mitte links            In dem Formular können Sie nun oben Ihre Gruppe auswählen und den Rest nach Belieben ausfüllen                                          Tutorial Überspringen                                                                                                                                              Super!            Nun können Sie Ihre erstellte Transaktion auf Ihrer Startseite sehen            Wenn ein Freund eine Transaktion mit Ihnen erstellt, dann sehen Sie das auch auf Ihrer Startseite            Viel Spaß mit unserer App! :)                                          Fertig                                                        '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TutorialPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TutorialPageModule.html":{"url":"modules/TutorialPageModule.html","title":"module - TutorialPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TutorialPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TutorialPageModule\n\n\n\ncluster_TutorialPageModule_declarations\n\n\n\ncluster_TutorialPageModule_imports\n\n\n\n\nTutorialPage\n\nTutorialPage\n\n\n\nTutorialPageModule\n\nTutorialPageModule\n\nTutorialPageModule -->\n\nTutorialPage->TutorialPageModule\n\n\n\n\n\nTutorialPageRoutingModule\n\nTutorialPageRoutingModule\n\nTutorialPageModule -->\n\nTutorialPageRoutingModule->TutorialPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tutorial/tutorial.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TutorialPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TutorialPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TutorialPageRoutingModule } from './tutorial-routing.module';\n\nimport { TutorialPage } from './tutorial.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TutorialPageRoutingModule\n  ],\n  declarations: [TutorialPage]\n})\nexport class TutorialPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TutorialPageRoutingModule.html":{"url":"modules/TutorialPageRoutingModule.html","title":"module - TutorialPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TutorialPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tutorial/tutorial-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TutorialPage } from './tutorial.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TutorialPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TutorialPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                awards\n                            \n                            \n                                    Public\n                                    Optional\n                                awardsPublic\n                            \n                            \n                                    Public\n                                    Optional\n                                awardsPublicfriends\n                            \n                            \n                                    Public\n                                    Optional\n                                cash\n                            \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                descriptionPublic\n                            \n                            \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    Public\n                                    Optional\n                                ec_card\n                            \n                            \n                                    Public\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Optional\n                                friends\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                imagePublic\n                            \n                            \n                                    Public\n                                    Optional\n                                kreditcard\n                            \n                            \n                                    Public\n                                    Optional\n                                paypal\n                            \n                            \n                                    Public\n                                    Optional\n                                profilePic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string, displayName?: string, email?: string, friends?: string[], awards?: string[], profilePic?: string, description?: string, cash?: boolean, ec_card?: boolean, kreditcard?: boolean, paypal?: boolean, imagePublic?: boolean, awardsPublic?: boolean, awardsPublicfriends?: boolean, descriptionPublic?: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        friends\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        awards\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        profilePic\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cash\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        ec_card\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        kreditcard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        paypal\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagePublic\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        awardsPublic\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        awardsPublicfriends\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        descriptionPublic\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        awards\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        awardsPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        awardsPublicfriends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        descriptionPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ec_card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        friends\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        imagePublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        kreditcard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        paypal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        profilePic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  constructor(\n    public id?: string,\n    public displayName?: string,\n    public email?: string,\n    public friends?: string[],\n    public awards?: string[], \n    public profilePic?: string,\n    public description?: string,\n    public cash?: boolean,\n    public ec_card?: boolean,\n    public kreditcard?: boolean,\n    public paypal?: boolean,\n    public imagePublic?: boolean,    \n    public awardsPublic?: boolean,\n    public awardsPublicfriends?: boolean,\n    public descriptionPublic?: boolean,\n    ) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class has functions for the user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                copyAndPrepare\n                            \n                            \n                                delete\n                            \n                            \n                                deleteUserFromFriends\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        copyAndPrepare\n                        \n                    \n                \n            \n            \n                \n                    \n                    copyAndPrepare(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:97\n                \n            \n\n\n            \n                \n                    deletes the id from the user object\nreturns the user object without the id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        returns the user object without the id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:72\n                \n            \n\n\n            \n                \n                    deletes existing user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserFromFriends\n                        \n                    \n                \n            \n            \n                \ndeleteUserFromFriends(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:80\n                \n            \n\n\n            \n                \n                    Deletes a given user from all his friends friends-lists (user.friends) and updates the friend in the user-collection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:107\n                \n            \n\n\n            \n                \n                    finds the user by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:52\n                \n            \n\n\n            \n                \n                    finds user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(id: string, email: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:29\n                \n            \n\n\n            \n                \n                    add the user to the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from the user\n\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from the user\n\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nusername from the user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:64\n                \n            \n\n\n            \n                \n                    updates existing user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\n\n/**\n * This class has functions for the user\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  userCollection: AngularFirestoreCollection;\n\n  /**\n   * @ignore\n   * @param afs\n   */\n  constructor(private afs: AngularFirestore) {\n    this.userCollection = afs.collection('User');\n  }\n\n  /**\n   * add the user to the database\n   * @param id - id from the user\n   * @param email - email from the user\n   * @param username - username from the user\n   */\n  async persist(id: string, email: string, username: string) {\n    const user = new User();\n    user.displayName = username;\n    user.profilePic = \"https://bit.ly/2S904CS\";\n    user.email = email;\n    user.description = \"Erstelle eine Beschreibung...\";\n    user.awards = [\"jEy1DdqvHv9minKnPOCc\"];\n    user.descriptionPublic = false;\n    user.cash = false;\n    user.ec_card = false;\n    user.paypal = false;\n    user.kreditcard = false;\n    user.imagePublic = false;\n    user.awardsPublic = false;\n    user.awardsPublicfriends = false;\n    user.friends = [];\n    await this.userCollection.doc(id).set(this.copyAndPrepare(user));\n  }\n\n  /**\n   * finds user by ID\n   * @param id - id from user\n   */\n  findById(id: string): Promise {\n    return this.userCollection.doc(id).get().toPromise().then(res => {\n      const user: User = res.data();\n      user.id = id;\n      return user;\n    });\n  }\n\n  /**\n   * updates existing user\n   * @param user\n   */\n  update(user: User) {\n    this.userCollection.doc(user.id).update(this.copyAndPrepare(user));\n  }\n\n  /**\n   * deletes existing user\n   * @param id - id from user\n   */\n  delete(id: string) {\n    this.userCollection.doc(id).delete();\n  }\n\n  /**\n   * Deletes a given user from all his friends friends-lists (user.friends) and updates the friend in the user-collection.\n   * @param user The user to be deleted\n   */\n  deleteUserFromFriends(user: User){\n    user.friends.forEach(friend => {\n      this.findById(friend).then(result => {\n        const index = result.friends.indexOf(user.id, 0);\n        if(index > -1) {\n          result.friends.splice(index, 1);\n        }\n        this.update(result);\n      });\n    });\n  }\n\n  /**\n   * deletes the id from the user object\n   * @param user\n   * returns the user object without the id\n   */\n  private copyAndPrepare(user: User): User {\n    const copy = { ...user };\n    delete copy.id;\n    return copy;\n  }\n\n  /**\n   * finds the user by email\n   * @param email - email from user\n   */\n  findByEmail(email: string) {\n    return this.userCollection.get()\n      .toPromise()\n      .then(snapshot =>\n        snapshot.docs.map(doc => {\n          const user = doc.data();\n          user.id = doc.id;\n          if (user.email == email)\n          return user;\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/change-password/change-password.page.ts\n            \n            component\n            ChangePasswordPage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/auth/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/group/add-members/add-members.page.ts\n            \n            component\n            AddMembersPage\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/group/group-create/group-create.page.ts\n            \n            component\n            GroupCreatePage\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/group/group-details/group-details.page.ts\n            \n            component\n            GroupDetailsPage\n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/group/group-list/group-list.page.ts\n            \n            component\n            GroupListPage\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/group/invite/invite.page.ts\n            \n            component\n            InvitePage\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/group/member-view/member-view.page.ts\n            \n            component\n            MemberViewPage\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                50 %\n                (15/30)\n            \n        \n        \n            \n                \n                src/app/models/award.model.ts\n            \n            class\n            Award\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/group.model.ts\n            \n            class\n            Group\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/simpleTransaction.model.ts\n            \n            class\n            SimpleTransaction\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/models/statistics.model.ts\n            \n            class\n            Statistic\n            \n                4 %\n                (1/23)\n            \n        \n        \n            \n                \n                src/app/models/transaction.model.ts\n            \n            class\n            Transaction\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/models/transactionTracker.model.ts\n            \n            class\n            TransactionTracker\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/payment-reminder/payment-reminder.page.ts\n            \n            component\n            PaymentReminderPage\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/profile/friend-profile/friend-profile.page.ts\n            \n            component\n            FriendProfilePage\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/profile/friends/friends.page.ts\n            \n            component\n            FriendsPage\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/profile/options/options.page.ts\n            \n            component\n            OptionsPage\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/profile/password/password.page.ts\n            \n            component\n            PasswordPage\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/profile/payment/payment.page.ts\n            \n            component\n            PaymentPage\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/profile/privacy/privacy.page.ts\n            \n            component\n            PrivacyPage\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/profile/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/profile/statistics/statistics.page.ts\n            \n            component\n            StatisticsPage\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/award.service.ts\n            \n            injectable\n            ArwardService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/badge.service.ts\n            \n            injectable\n            BadgeService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/friends.service.ts\n            \n            injectable\n            FriendsService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/group.service.ts\n            \n            injectable\n            GroupService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/services/statistics.service.ts\n            \n            injectable\n            StatisticsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                87 %\n                (27/31)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/transaction.model.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/transaction/transaction-create/transaction-create.page.ts\n            \n            component\n            TransactionCreatePage\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                src/app/transaction/transaction-details/transaction-details.page.ts\n            \n            component\n            TransactionDetailsPage\n            \n                36 %\n                (7/19)\n            \n        \n        \n            \n                \n                src/app/transaction/transaction-participants/transaction-participants.page.ts\n            \n            component\n            TransactionParticipantsPage\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/transaction/transaction-stakes/transaction-stakes.page.ts\n            \n            component\n            TransactionStakesPage\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/tutorial/tutorial.page.ts\n            \n            component\n            TutorialPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~12.0.1\n        \n            @angular/core : ~12.0.1\n        \n            @angular/fire : ^6.1.5\n        \n            @angular/forms : ~12.0.1\n        \n            @angular/platform-browser : ~12.0.1\n        \n            @angular/platform-browser-dynamic : ~12.0.1\n        \n            @angular/router : ~12.0.1\n        \n            @capacitor/android : ^3.0.2\n        \n            @capacitor/camera : ^1.0.2\n        \n            @capacitor/core : 3.0.0\n        \n            @capacitor/filesystem : ^1.0.2\n        \n            @capacitor/share : ^1.0.3\n        \n            @capacitor/storage : ^1.0.2\n        \n            @ionic-native/core : ^4.20.0\n        \n            @ionic-native/file-chooser : ^4.20.0\n        \n            @ionic-native/image-picker : ^5.33.1\n        \n            @ionic/angular : ^5.5.2\n        \n            chart.js : ^3.4.1\n        \n            cordova-plugin-camera : ^5.0.2\n        \n            cordova-plugin-filechooser : ^1.2.0\n        \n            cordova-plugin-telerik-imagepicker : ^2.3.6\n        \n            filesystem : ^1.0.1\n        \n            firebase : ^7.0 || ^8.0\n        \n            rxjs : ^6.6.7\n        \n            rxjs-compat : ^6.6.7\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEntwicklung Mobiler Applikationen - Group Expenses\nGroup Expenses ist eine Progressive Web App für Android, IOS, und den Web Browser.Mit der App wird das Aufteilen von Rechnungen/Einnahmen in Gruppen vereinfacht.Man fügt Freunde hinzu mit denen man neue Gruppen erstellen kann, wie z.B. für ein Festival oder eine WG.In der Gruppe kann man neue Transaktionen erstellen, die allen Teilnehmern der Transaktion angezeigt werden.Dadurch entsteht eine strukturierte Überischt über wem man noch Geld schuldet und wer einem noch Geld schuldet.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddMembersPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AddMembersPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChangePasswordPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChangePasswordPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupCreatePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupCreatePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupDetailsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupListPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupListPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InvitePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InvitePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MemberViewPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MemberViewPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswordPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswordPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentReminderPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentReminderPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrivacyPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrivacyPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatisticsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatisticsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionCreatePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionCreatePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionDetailsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionParticipantsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionParticipantsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionStakesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionStakesPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TutorialPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TutorialPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AddMembersPageModule\n\n\n\ncluster_AddMembersPageModule_declarations\n\n\n\ncluster_AddMembersPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ChangePasswordPageModule\n\n\n\ncluster_ChangePasswordPageModule_declarations\n\n\n\ncluster_ChangePasswordPageModule_imports\n\n\n\ncluster_FriendProfilePageModule\n\n\n\ncluster_FriendProfilePageModule_declarations\n\n\n\ncluster_FriendProfilePageModule_imports\n\n\n\ncluster_FriendsPageModule\n\n\n\ncluster_FriendsPageModule_declarations\n\n\n\ncluster_FriendsPageModule_imports\n\n\n\ncluster_GroupCreatePageModule\n\n\n\ncluster_GroupCreatePageModule_declarations\n\n\n\ncluster_GroupCreatePageModule_imports\n\n\n\ncluster_GroupDetailsPageModule\n\n\n\ncluster_GroupDetailsPageModule_declarations\n\n\n\ncluster_GroupDetailsPageModule_imports\n\n\n\ncluster_GroupListPageModule\n\n\n\ncluster_GroupListPageModule_declarations\n\n\n\ncluster_GroupListPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_InvitePageModule\n\n\n\ncluster_InvitePageModule_declarations\n\n\n\ncluster_InvitePageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_MemberViewPageModule\n\n\n\ncluster_MemberViewPageModule_declarations\n\n\n\ncluster_MemberViewPageModule_imports\n\n\n\ncluster_OptionsPageModule\n\n\n\ncluster_OptionsPageModule_declarations\n\n\n\ncluster_OptionsPageModule_imports\n\n\n\ncluster_PasswordPageModule\n\n\n\ncluster_PasswordPageModule_declarations\n\n\n\ncluster_PasswordPageModule_imports\n\n\n\ncluster_PaymentPageModule\n\n\n\ncluster_PaymentPageModule_declarations\n\n\n\ncluster_PaymentPageModule_imports\n\n\n\ncluster_PaymentReminderPageModule\n\n\n\ncluster_PaymentReminderPageModule_declarations\n\n\n\ncluster_PaymentReminderPageModule_imports\n\n\n\ncluster_PrivacyPageModule\n\n\n\ncluster_PrivacyPageModule_declarations\n\n\n\ncluster_PrivacyPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_StatisticsPageModule\n\n\n\ncluster_StatisticsPageModule_declarations\n\n\n\ncluster_StatisticsPageModule_imports\n\n\n\ncluster_TransactionCreatePageModule\n\n\n\ncluster_TransactionCreatePageModule_declarations\n\n\n\ncluster_TransactionCreatePageModule_imports\n\n\n\ncluster_TransactionCreatePageModule_exports\n\n\n\ncluster_TransactionDetailsPageModule\n\n\n\ncluster_TransactionDetailsPageModule_declarations\n\n\n\ncluster_TransactionDetailsPageModule_imports\n\n\n\ncluster_TransactionParticipantsPageModule\n\n\n\ncluster_TransactionParticipantsPageModule_declarations\n\n\n\ncluster_TransactionParticipantsPageModule_imports\n\n\n\ncluster_TransactionStakesPageModule\n\n\n\ncluster_TransactionStakesPageModule_declarations\n\n\n\ncluster_TransactionStakesPageModule_imports\n\n\n\ncluster_TutorialPageModule\n\n\n\ncluster_TutorialPageModule_declarations\n\n\n\ncluster_TutorialPageModule_imports\n\n\n\n\nAddMembersPage\n\nAddMembersPage\n\n\n\nAddMembersPageModule\n\nAddMembersPageModule\n\nAddMembersPageModule -->\n\nAddMembersPage->AddMembersPageModule\n\n\n\n\n\nAddMembersPageRoutingModule\n\nAddMembersPageRoutingModule\n\nAddMembersPageModule -->\n\nAddMembersPageRoutingModule->AddMembersPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nChangePasswordPageModule\n\nChangePasswordPageModule\n\nChangePasswordPageModule -->\n\nChangePasswordPage->ChangePasswordPageModule\n\n\n\n\n\nChangePasswordPageRoutingModule\n\nChangePasswordPageRoutingModule\n\nChangePasswordPageModule -->\n\nChangePasswordPageRoutingModule->ChangePasswordPageModule\n\n\n\n\n\nFriendProfilePage\n\nFriendProfilePage\n\n\n\nFriendProfilePageModule\n\nFriendProfilePageModule\n\nFriendProfilePageModule -->\n\nFriendProfilePage->FriendProfilePageModule\n\n\n\n\n\nFriendProfilePageRoutingModule\n\nFriendProfilePageRoutingModule\n\nFriendProfilePageModule -->\n\nFriendProfilePageRoutingModule->FriendProfilePageModule\n\n\n\n\n\nFriendsPage\n\nFriendsPage\n\n\n\nFriendsPageModule\n\nFriendsPageModule\n\nFriendsPageModule -->\n\nFriendsPage->FriendsPageModule\n\n\n\n\n\nFriendsPageRoutingModule\n\nFriendsPageRoutingModule\n\nFriendsPageModule -->\n\nFriendsPageRoutingModule->FriendsPageModule\n\n\n\n\n\nGroupCreatePage\n\nGroupCreatePage\n\n\n\nGroupCreatePageModule\n\nGroupCreatePageModule\n\nGroupCreatePageModule -->\n\nGroupCreatePage->GroupCreatePageModule\n\n\n\n\n\nGroupCreatePageRoutingModule\n\nGroupCreatePageRoutingModule\n\nGroupCreatePageModule -->\n\nGroupCreatePageRoutingModule->GroupCreatePageModule\n\n\n\n\n\nGroupDetailsPage\n\nGroupDetailsPage\n\n\n\nGroupDetailsPageModule\n\nGroupDetailsPageModule\n\nGroupDetailsPageModule -->\n\nGroupDetailsPage->GroupDetailsPageModule\n\n\n\n\n\nGroupDetailsPageRoutingModule\n\nGroupDetailsPageRoutingModule\n\nGroupDetailsPageModule -->\n\nGroupDetailsPageRoutingModule->GroupDetailsPageModule\n\n\n\n\n\nGroupListPage\n\nGroupListPage\n\n\n\nGroupListPageModule\n\nGroupListPageModule\n\nGroupListPageModule -->\n\nGroupListPage->GroupListPageModule\n\n\n\n\n\nGroupListPageRoutingModule\n\nGroupListPageRoutingModule\n\nGroupListPageModule -->\n\nGroupListPageRoutingModule->GroupListPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nTransactionCreatePageModule\n\nTransactionCreatePageModule\n\nHomePageModule -->\n\nTransactionCreatePageModule->HomePageModule\n\n\n\n\n\nTransactionCreatePage \n\nTransactionCreatePage \n\nTransactionCreatePage  -->\n\nTransactionCreatePageModule->TransactionCreatePage \n\n\n\n\n\nInvitePage\n\nInvitePage\n\n\n\nInvitePageModule\n\nInvitePageModule\n\nInvitePageModule -->\n\nInvitePage->InvitePageModule\n\n\n\n\n\nInvitePageRoutingModule\n\nInvitePageRoutingModule\n\nInvitePageModule -->\n\nInvitePageRoutingModule->InvitePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nMemberViewPage\n\nMemberViewPage\n\n\n\nMemberViewPageModule\n\nMemberViewPageModule\n\nMemberViewPageModule -->\n\nMemberViewPage->MemberViewPageModule\n\n\n\n\n\nMemberViewPageRoutingModule\n\nMemberViewPageRoutingModule\n\nMemberViewPageModule -->\n\nMemberViewPageRoutingModule->MemberViewPageModule\n\n\n\n\n\nOptionsPage\n\nOptionsPage\n\n\n\nOptionsPageModule\n\nOptionsPageModule\n\nOptionsPageModule -->\n\nOptionsPage->OptionsPageModule\n\n\n\n\n\nOptionsPageRoutingModule\n\nOptionsPageRoutingModule\n\nOptionsPageModule -->\n\nOptionsPageRoutingModule->OptionsPageModule\n\n\n\n\n\nPasswordPage\n\nPasswordPage\n\n\n\nPasswordPageModule\n\nPasswordPageModule\n\nPasswordPageModule -->\n\nPasswordPage->PasswordPageModule\n\n\n\n\n\nPasswordPageRoutingModule\n\nPasswordPageRoutingModule\n\nPasswordPageModule -->\n\nPasswordPageRoutingModule->PasswordPageModule\n\n\n\n\n\nPaymentPage\n\nPaymentPage\n\n\n\nPaymentPageModule\n\nPaymentPageModule\n\nPaymentPageModule -->\n\nPaymentPage->PaymentPageModule\n\n\n\n\n\nPaymentPageRoutingModule\n\nPaymentPageRoutingModule\n\nPaymentPageModule -->\n\nPaymentPageRoutingModule->PaymentPageModule\n\n\n\n\n\nPaymentReminderPage\n\nPaymentReminderPage\n\n\n\nPaymentReminderPageModule\n\nPaymentReminderPageModule\n\nPaymentReminderPageModule -->\n\nPaymentReminderPage->PaymentReminderPageModule\n\n\n\n\n\nPaymentReminderPageRoutingModule\n\nPaymentReminderPageRoutingModule\n\nPaymentReminderPageModule -->\n\nPaymentReminderPageRoutingModule->PaymentReminderPageModule\n\n\n\n\n\nPrivacyPage\n\nPrivacyPage\n\n\n\nPrivacyPageModule\n\nPrivacyPageModule\n\nPrivacyPageModule -->\n\nPrivacyPage->PrivacyPageModule\n\n\n\n\n\nPrivacyPageRoutingModule\n\nPrivacyPageRoutingModule\n\nPrivacyPageModule -->\n\nPrivacyPageRoutingModule->PrivacyPageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nStatisticsPage\n\nStatisticsPage\n\n\n\nStatisticsPageModule\n\nStatisticsPageModule\n\nStatisticsPageModule -->\n\nStatisticsPage->StatisticsPageModule\n\n\n\n\n\nStatisticsPageRoutingModule\n\nStatisticsPageRoutingModule\n\nStatisticsPageModule -->\n\nStatisticsPageRoutingModule->StatisticsPageModule\n\n\n\n\n\nTransactionCreatePage\n\nTransactionCreatePage\n\nTransactionCreatePageModule -->\n\nTransactionCreatePage->TransactionCreatePageModule\n\n\n\n\n\nTransactionCreatePageRoutingModule\n\nTransactionCreatePageRoutingModule\n\nTransactionCreatePageModule -->\n\nTransactionCreatePageRoutingModule->TransactionCreatePageModule\n\n\n\n\n\nTransactionDetailsPage\n\nTransactionDetailsPage\n\n\n\nTransactionDetailsPageModule\n\nTransactionDetailsPageModule\n\nTransactionDetailsPageModule -->\n\nTransactionDetailsPage->TransactionDetailsPageModule\n\n\n\n\n\nTransactionDetailsPageRoutingModule\n\nTransactionDetailsPageRoutingModule\n\nTransactionDetailsPageModule -->\n\nTransactionDetailsPageRoutingModule->TransactionDetailsPageModule\n\n\n\n\n\nTransactionParticipantsPage\n\nTransactionParticipantsPage\n\n\n\nTransactionParticipantsPageModule\n\nTransactionParticipantsPageModule\n\nTransactionParticipantsPageModule -->\n\nTransactionParticipantsPage->TransactionParticipantsPageModule\n\n\n\n\n\nTransactionParticipantsPageRoutingModule\n\nTransactionParticipantsPageRoutingModule\n\nTransactionParticipantsPageModule -->\n\nTransactionParticipantsPageRoutingModule->TransactionParticipantsPageModule\n\n\n\n\n\nTransactionStakesPage\n\nTransactionStakesPage\n\n\n\nTransactionStakesPageModule\n\nTransactionStakesPageModule\n\nTransactionStakesPageModule -->\n\nTransactionStakesPage->TransactionStakesPageModule\n\n\n\n\n\nTransactionStakesPageRoutingModule\n\nTransactionStakesPageRoutingModule\n\nTransactionStakesPageModule -->\n\nTransactionStakesPageRoutingModule->TransactionStakesPageModule\n\n\n\n\n\nTutorialPage\n\nTutorialPage\n\n\n\nTutorialPageModule\n\nTutorialPageModule\n\nTutorialPageModule -->\n\nTutorialPage->TutorialPageModule\n\n\n\n\n\nTutorialPageRoutingModule\n\nTutorialPageRoutingModule\n\nTutorialPageModule -->\n\nTutorialPageRoutingModule->TutorialPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        50 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        74 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAUoe-hkywBms6a4CWqi820GIXL0-gRmNY\",\n    authDomain: \"group-expenses-41c23.firebaseapp.com\",\n    projectId: \"group-expenses-41c23\",\n    storageBucket: \"group-expenses-41c23.appspot.com\",\n    messagingSenderId: \"429680376038\",\n    appId: \"1:429680376038:web:1ac23e75a712fea6756327\",\n    measurementId: \"G-YC5CCL30K1\"\n  }\n\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
