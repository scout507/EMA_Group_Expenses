var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddMembersPage.html",[0,0.276,1,1.177]],["body/components/AddMembersPage.html",[0,0.295,1,1.439,2,1.153,3,0.042,4,0.042,5,0.737,6,0.737,7,0.737,8,0.737,9,0.036,10,5.605,11,4.936,12,1.95,13,1.154,14,0.026,15,2.753,16,2.04,17,1.889,18,3.907,19,1.691,20,1.525,21,1.535,22,0.737,23,2.732,24,2.596,25,1.187,26,4.493,27,1.187,28,3.578,29,0.47,30,0.869,31,1.223,32,6.501,33,2.131,34,4.493,35,4.493,36,4.493,37,3.944,38,1.028,39,1.915,40,4.522,41,3.578,42,4.522,43,3.578,44,4.522,45,3.141,46,1.633,47,2.221,48,2.728,49,2.466,50,4.876,51,2.144,52,1.824,53,0.011,54,2.221,55,3.578,56,3.141,57,1.768,58,3.578,59,2.221,60,1.834,61,3.141,62,1.522,63,1.447,64,1.263,65,1.482,66,1.447,67,2.01,68,3.019,69,2.221,70,3.141,71,3.371,72,2.191,73,3.141,74,3.141,75,3.578,76,2.221,77,3.578,78,2.466,79,2.221,80,2.853,81,4.107,82,5.299,83,2.221,84,2.221,85,3.141,86,3.141,87,1.87,88,2.221,89,3.798,90,3.578,91,2.221,92,2.221,93,2.221,94,2.76,95,2.221,96,1.95,97,2.221,98,3.944,99,0.19,100,1.638,101,0.092,102,3.096,103,3.944,104,0.47,105,1.582,106,1.95,107,1.054,108,1.736,109,1.054,110,1.299,111,2.214,112,1.299,113,0.042,114,0.945,115,0.947,116,2.124,117,1.531,118,2.221,119,1.139,120,2.221,121,4.813,122,2.221,123,1.531,124,3.141,125,2.221,126,2.221,127,2.221,128,2.221,129,5.152,130,2.221,131,2.221,132,2.273,133,2.221,134,2.221,135,2.221,136,2.221,137,1.95,138,1.638,139,1.95,140,1.95,141,1.95,142,3.141,143,3.578,144,2.221,145,2.221,146,1.95,147,2.221,148,0.945,149,2.221,150,3.578,151,2.221,152,3.578,153,3.578,154,2.221,155,3.096,156,2.221,157,1.016,158,3.578,159,2.221,160,4.493,161,2.221,162,2.221,163,2.221,164,0.42,165,3.578,166,1.579,167,1.95,168,2.221,169,2.221,170,1.094,171,3.141,172,2.221,173,2.221,174,1.771,175,1.299,176,2.221,177,1.95,178,2.221,179,1.771,180,2.221,181,2.917,182,1.95,183,1.638,184,2.221,185,2.221,186,2.221,187,2.221,188,2.221,189,0.947,190,2.638,191,3.578,192,2.093,193,3.141,194,0.737,195,1.187,196,1.153,197,0.737,198,1.659,199,0.737,200,0.737,201,0.656,202,0.737,203,0.638,204,0.656,205,1.187,206,0.638,207,1.187,208,0.638,209,0.737,210,0.638,211,1.187,212,0.638,213,1.187,214,0.638,215,0.737,216,0.656,217,0.737,218,0.638,219,0.737,220,0.638,221,0.737,222,0.638,223,0.737,224,0.638,225,0.737,226,0.638,227,0.638,228,0.737,229,0.638,230,0.638,231,0.737,232,0.638,233,0.737,234,0.638,235,0.638,236,0.737,237,0.638,238,0.737,239,0.638,240,1.03,241,0.638,242,0.638,243,0.737,244,0.638,245,0.737,246,0.638,247,0.695,248,0.737,249,0.737,250,0.003,251,0.004,252,0.003]],["title/modules/AddMembersPageModule.html",[253,0.669,254,3.107]],["body/modules/AddMembersPageModule.html",[1,2.335,3,0.11,4,0.11,9,0.094,10,4.24,11,3.734,14,0.034,16,1.922,18,3.211,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,250,0.007,251,0.009,252,0.007,254,6.306,255,0.833,256,2.091,257,5.049,258,5.049,259,5.049,260,5.762,261,2.214,262,1.8,263,1.652,264,5.752,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,274,4.586]],["title/modules/AddMembersPageRoutingModule.html",[253,0.669,260,2.904]],["body/modules/AddMembersPageRoutingModule.html",[0,0.407,1,2.07,3,0.118,4,0.118,9,0.102,10,4.576,11,4.03,14,0.036,16,1.686,18,3.466,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,250,0.008,251,0.009,252,0.008,255,0.899,260,5.108,266,0.985,267,1.176,274,4.949,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942]],["title/components/AppComponent.html",[0,0.276,201,1.245]],["body/components/AppComponent.html",[0,0.461,1,1.332,2,2.023,3,0.091,4,0.091,5,1.582,6,1.582,7,1.582,8,1.582,9,0.078,14,0.028,16,1.295,19,1.485,22,1.582,23,2.949,24,2.782,25,2.084,27,2.084,46,1.037,53,0.011,62,1.41,64,1.404,67,1.37,99,0.142,101,0.197,113,0.091,194,1.582,195,2.084,196,2.023,197,1.582,198,2.404,199,1.582,200,1.582,201,2.206,202,1.582,203,1.37,204,1.41,205,2.084,206,1.37,207,2.084,208,1.37,209,1.582,210,1.37,211,2.084,212,1.37,213,2.084,214,1.37,215,1.582,216,1.41,217,1.582,218,1.37,219,1.582,220,1.37,221,1.582,222,1.37,223,1.582,224,1.37,225,1.582,226,1.37,227,1.37,228,1.582,229,1.37,230,1.37,231,1.582,232,1.37,233,1.582,234,1.37,235,1.37,236,1.582,237,1.37,238,1.582,239,1.37,240,1.492,241,1.37,242,1.37,243,1.582,244,1.37,245,1.582,246,1.37,247,1.493,248,1.582,249,1.582,250,0.006,251,0.008,252,0.006,282,4.187,283,3.507,284,7.023,285,6.282,286,2.994,287,4.77]],["title/modules/AppModule.html",[253,0.669,288,3.107]],["body/modules/AppModule.html",[3,0.103,4,0.103,9,0.089,14,0.032,24,1.69,53,0.011,99,0.257,101,0.222,104,1.142,113,0.103,201,2.567,250,0.007,251,0.008,252,0.007,255,0.782,256,2.011,261,2.129,262,1.69,263,1.551,265,2.192,266,1.079,267,1.079,272,1.739,273,1.739,278,0.909,288,6.287,289,4.74,290,4.74,291,4.74,292,4.74,293,5.672,294,5.4,295,6.804,296,6.804,297,2.768,298,2.561,299,6.804,300,6.804,301,5.4,302,5.4,303,4.74,304,6.804,305,3.721,306,6.804,307,2.226,308,4.305,309,5.4,310,5.4,311,5.4,312,5.4,313,5.4,314,5.4,315,5.4]],["title/classes/AppPage.html",[14,0.025,316,3.36]],["body/classes/AppPage.html",[3,0.119,4,0.119,9,0.102,14,0.037,29,1.315,38,2.132,46,1.614,52,2.132,53,0.011,99,0.186,113,0.119,157,3.393,196,2.004,250,0.008,251,0.009,252,0.008,283,3.474,298,2.951,316,5.917,317,3.325,318,5.461,319,8.214,320,8.214,321,6.222,322,6.222,323,6.222,324,6.222,325,6.222,326,3.826,327,6.222]],["title/modules/AppRoutingModule.html",[253,0.669,293,2.904]],["body/modules/AppRoutingModule.html",[3,0.067,4,0.067,9,0.058,11,2.288,14,0.021,16,0.957,18,1.968,19,1.265,53,0.011,62,1.042,67,1.012,71,1.968,99,0.152,101,0.145,113,0.067,164,0.666,204,1.506,230,1.464,240,1.311,247,1.103,250,0.004,251,0.006,252,0.004,255,0.51,266,0.559,267,0.808,275,1.135,276,1.769,277,1.641,278,0.593,279,2.801,281,1.103,293,3.512,328,3.525,329,5.096,330,2.81,331,8.678,332,3.525,333,8.639,334,3.525,335,3.525,336,4.125,337,3.525,338,3.525,339,2.723,340,5.985,341,2.429,342,5.096,343,3.525,344,2.598,345,2.429,346,3.525,347,3.525,348,2.845,349,2.429,350,5.096,351,3.525,352,2.612,353,3.525,354,3.525,355,2.288,356,3.525,357,3.525,358,3.525,359,3.525,360,2.288,361,3.525,362,3.525,363,6.557,364,2.288,365,3.525,366,2.167,367,2.429,368,3.525,369,3.525,370,2.429,371,3.525,372,2.288,373,2.429,374,3.525,375,3.525,376,3.068,377,3.525,378,3.525,379,3.525,380,3.525,381,2.598,382,3.525,383,3.525,384,3.525,385,2.429,386,3.525,387,3.525,388,3.512,389,5.096,390,5.096,391,5.096,392,5.096,393,5.096,394,3.512,395,5.096,396,5.096,397,3.525,398,3.525,399,3.525,400,1.968,401,3.525,402,2.429,403,3.525,404,3.525,405,2.598,406,3.525,407,2.429,408,3.525,409,3.525,410,3.525,411,3.525,412,2.81,413,3.525,414,3.525,415,3.525,416,3.525]],["title/injectables/ArwardService.html",[417,1.859,418,2.904]],["body/injectables/ArwardService.html",[3,0.099,4,0.099,9,0.085,13,1.701,14,0.043,29,1.094,30,1.609,38,1.903,46,1.44,48,2.479,52,2.212,53,0.011,63,1.667,64,1.157,65,1.44,66,1.667,99,0.218,101,0.213,113,0.099,114,1.367,115,2.206,148,1.749,155,4.564,157,3.028,164,0.978,250,0.006,251,0.008,252,0.006,283,2.89,305,3.567,417,2.922,418,4.564,419,3.028,420,4.543,421,3.52,422,5.281,423,5.281,424,5.281,425,3.874,426,5.823,427,5.281,428,5.281,429,2.221,430,5.176,431,5.281,432,7.7,433,3.47,434,5.281,435,5.384,436,5.176,437,4.882,438,3.36,439,4.126,440,3.183,441,4.882,442,4.126,443,5.176,444,4.126,445,4.126,446,4.543,447,4.543]],["title/injectables/AuthService.html",[108,1.628,417,1.859]],["body/injectables/AuthService.html",[3,0.058,4,0.058,9,0.05,13,1.571,14,0.018,29,0.646,30,1.114,31,1.566,33,2.611,38,1.317,39,2.346,46,1.497,51,2.198,52,2.233,53,0.011,57,1.722,61,2.68,63,1.773,64,1.23,65,1.197,66,1.773,72,1.108,78,2.104,87,1.108,99,0.196,101,0.126,104,0.646,105,2.154,108,1.771,113,0.058,114,0.806,115,1.301,116,1.259,119,2.822,148,2.022,157,3.265,166,1.347,175,1.786,204,1.355,250,0.004,251,0.006,252,0.004,263,1.317,278,0.514,283,1.705,307,1.259,336,3.159,352,2.35,376,4.24,388,3.159,417,2.023,419,1.786,425,2.682,429,2.483,440,1.877,448,2.68,449,2.682,450,4.584,451,4.584,452,4.234,453,6.118,454,4.584,455,3.053,456,5.858,457,4.489,458,3.053,459,4.024,460,3.053,461,6.118,462,4.746,463,4.77,464,5.169,465,6.045,466,4.216,467,3.053,468,4.584,469,5.694,470,3.053,471,4.024,472,4.878,473,3.053,474,1.954,475,2.221,476,2.251,477,6.118,478,4.024,479,3.053,480,5.504,481,3.053,482,3.053,483,4.584,484,3.053,485,2.68,486,3.053,487,6.557,488,7.347,489,4.584,490,4.584,491,3.655,492,3.655,493,3.053,494,3.053,495,3.655,496,2.434,497,3.379,498,3.053,499,2.251,500,2.976,501,2.434,502,2.68,503,3.053,504,4.584,505,4.024,506,3.655,507,4.584,508,4.024,509,4.584,510,4.584,511,4.584,512,3.053,513,2.104,514,3.053,515,2.68,516,3.053,517,3.053,518,3.053,519,4.584,520,4.584,521,3.053,522,3.053,523,3.053,524,3.053]],["title/classes/Award.html",[14,0.025,438,2.736]],["body/classes/Award.html",[3,0.105,4,0.105,9,0.091,13,2.085,14,0.033,29,1.169,30,1.678,46,1.765,53,0.011,63,1.782,64,1.851,65,1.765,66,2.759,113,0.105,116,3.592,250,0.007,251,0.008,252,0.007,286,2.944,317,2.956,429,2.685,433,3.363,438,4.484,525,4.855,526,7.127,527,3.812,528,5.531,529,4.615,530,5.531,531,5.531,532,5.531,533,5.531]],["title/injectables/BadgeService.html",[417,1.859,534,2.904]],["body/injectables/BadgeService.html",[3,0.086,4,0.086,9,0.074,13,1.56,14,0.04,16,1.649,29,0.958,31,1.549,38,1.744,46,0.986,48,2.273,49,4.185,51,2.093,52,1.302,53,0.011,57,1.419,60,3.113,63,1.46,64,1.013,65,0.986,66,1.46,99,0.228,101,0.187,105,2.575,107,2.15,113,0.086,114,1.197,115,1.932,148,1.932,240,1.462,250,0.006,251,0.007,252,0.006,283,2.531,417,2.679,419,2.652,421,3.725,422,4.842,423,6.496,424,4.842,425,3.552,440,2.788,449,3.552,476,3.342,534,4.185,535,3.979,536,6.073,537,6.073,538,6.073,539,4.766,540,4.533,541,7.315,542,6.421,543,4.842,544,6.073,545,6.073,546,5.331,547,6.073,548,6.073,549,6.073,550,2.943,551,4.533,552,2.788,553,3.979,554,4.533,555,6.073,556,3.511,557,2.788,558,4.533,559,4.533,560,4.533,561,5.331,562,4.533,563,4.533,564,4.533,565,4.533,566,4.533,567,6.073,568,2.943,569,4.533,570,4.533,571,4.533,572,4.533,573,4.533,574,4.533,575,4.533]],["title/components/ChangePasswordPage.html",[0,0.276,203,1.211]],["body/components/ChangePasswordPage.html",[0,0.421,1,1.116,2,1.795,3,0.076,4,0.076,5,1.326,6,1.326,7,1.326,8,1.326,9,0.066,13,1.027,14,0.038,15,2.978,16,1.086,17,2.171,19,1.356,20,2.375,21,2.192,22,1.326,23,2.91,24,2.745,25,1.848,27,1.848,29,0.845,30,1.354,46,0.869,53,0.011,62,1.181,64,1.246,65,0.869,67,1.148,99,0.192,101,0.165,104,0.845,108,2.478,109,1.896,113,0.076,114,1.472,116,1.648,189,1.704,194,1.326,195,1.848,196,1.795,197,1.326,198,2.235,199,1.326,200,1.326,201,1.181,202,1.326,203,1.993,204,2.337,205,1.848,206,1.148,207,1.848,208,1.148,209,1.326,210,1.148,211,1.848,212,1.148,213,1.848,214,1.148,215,1.326,216,1.181,217,1.326,218,1.148,219,1.326,220,1.148,221,1.326,222,1.148,223,1.326,224,1.148,225,1.326,226,1.148,227,1.148,228,1.326,229,1.148,230,1.148,231,1.326,232,1.148,233,1.326,234,1.148,235,1.148,236,1.326,237,1.148,238,1.326,239,1.148,240,1.387,241,1.148,242,1.148,243,1.326,244,1.148,245,1.326,246,1.148,247,1.251,248,1.326,249,1.326,250,0.005,251,0.007,252,0.005,326,3.427,376,3.874,394,3.84,429,1.694,457,4.075,500,3.617,576,4.108,577,3.509,578,5.573,579,5.631,580,4.891,581,3.998,582,3.111,583,2.595,584,2.339,585,4.891,586,6.939,587,4.891,588,2.458,589,1.97,590,2.755,591,2.458,592,2.947,593,2.755,594,3.187,595,3.509,596,3.509,597,2.458,598,3.998,599,2.947,600,3.427,601,2.755,602,2.947,603,2.947,604,2.458,605,2.458,606,2.458,607,2.947,608,2.458,609,2.755,610,2.458]],["title/modules/ChangePasswordPageModule.html",[253,0.669,611,3.107]],["body/modules/ChangePasswordPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,203,2.402,204,2.091,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,376,2.949,394,3.964,576,4.24,611,6.306,612,5.049,613,5.049,614,5.049,615,5.762,616,5.752,617,4.24]],["title/modules/ChangePasswordPageRoutingModule.html",[253,0.669,615,2.904]],["body/modules/ChangePasswordPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,203,2.129,204,1.834,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,376,3.182,394,4.278,576,4.576,615,5.108,617,4.576]],["title/components/FriendProfilePage.html",[0,0.276,206,1.211]],["body/components/FriendProfilePage.html",[0,0.293,1,0.614,2,1.143,3,0.042,4,0.042,5,0.729,6,0.729,7,0.729,8,0.729,9,0.036,13,1.832,14,0.026,15,2.736,16,0.597,17,1.602,19,0.943,21,0.751,22,0.729,23,2.728,24,2.574,25,1.177,27,1.177,29,0.465,30,0.862,31,2.321,33,2.116,38,1.471,39,2.561,46,1.43,48,1.328,51,1.897,52,1.471,53,0.011,57,1.11,62,0.65,63,1.143,64,1.47,65,1.113,66,1.143,67,2.004,71,1.981,72,1.619,87,1.619,94,1.622,99,0.221,101,0.091,104,0.465,105,1.803,108,1.978,109,1.043,111,1.748,113,0.042,114,0.581,116,1.463,119,1.819,123,1.515,148,1.978,164,0.843,166,2.259,181,2.303,194,0.729,195,1.177,196,1.143,197,0.729,198,1.649,199,0.729,200,0.729,201,0.65,202,0.729,203,0.631,204,0.65,205,1.177,206,1.471,207,1.177,208,0.631,209,0.729,210,0.631,211,1.177,212,0.631,213,1.177,214,0.631,215,0.729,216,0.65,217,0.729,218,0.631,219,0.729,220,0.631,221,0.729,222,0.631,223,0.729,224,0.631,225,0.729,226,0.631,227,0.631,228,0.729,229,0.631,230,1.282,231,0.729,232,0.631,233,0.729,234,0.631,235,0.631,236,0.729,237,0.631,238,0.729,239,0.631,240,1.024,241,0.631,242,0.631,243,0.729,244,0.631,245,0.729,246,0.631,247,0.688,248,0.729,249,0.729,250,0.004,251,0.004,252,0.003,278,0.37,286,0.937,297,1.127,298,1.043,307,0.906,352,2.625,385,4.681,418,2.445,421,1.622,429,1.827,438,2.896,439,1.753,474,1.513,475,1.858,534,3.529,539,1.286,542,3.115,543,2.829,557,1.352,582,1.981,584,1.286,588,1.352,589,1.748,591,1.352,592,4.849,593,1.515,597,2.182,600,1.352,604,1.352,605,2.182,606,3.149,608,3.455,609,1.515,610,2.182,618,5.007,619,1.93,620,2.523,621,3.916,622,3.115,623,3.916,624,4.462,625,4.082,626,5.548,627,2.523,628,3.115,629,2.198,630,2.616,631,3.115,632,2.198,633,3.775,634,2.995,635,4.045,636,4.469,637,3.775,638,4.495,639,5.774,640,4.082,641,3.115,642,3.115,643,4.932,644,3.916,645,4.289,646,2.198,647,2.303,648,2.076,649,3.149,650,2.182,651,3.149,652,1.981,653,2.182,654,1.819,655,3.548,656,3.548,657,2.429,658,3.548,659,2.182,660,2.182,661,1.896,662,1.748,663,2.182,664,2.182,665,3.115,666,4.932,667,2.198,668,3.115,669,2.198,670,2.198,671,2.198,672,2.198,673,1.896,674,1.93,675,3.529,676,1.93,677,1.352,678,1.043,679,1.981,680,1.753,681,1.93,682,2.829,683,1.981,684,1.981,685,3.115,686,1.622,687,1.127,688,1.083,689,1.286,690,2.198,691,2.198,692,2.198,693,1.427,694,2.198,695,1.93,696,2.198,697,1.93,698,2.198,699,3.548,700,2.198,701,1.93,702,3.115,703,3.115,704,3.115,705,2.198,706,2.198,707,2.198,708,1.93,709,1.753,710,1.93,711,1.127,712,2.198,713,2.182,714,2.303,715,3.115,716,2.303,717,3.115,718,2.303,719,2.182,720,2.303,721,2.829,722,2.829,723,1.753,724,2.829,725,2.445,726,1.753,727,3.775,728,1.93,729,2.829,730,1.93,731,1.93,732,1.62,733,1.93,734,1.93,735,1.93,736,2.616,737,1.93,738,1.93,739,1.93]],["title/modules/FriendProfilePageModule.html",[253,0.669,740,3.107]],["body/modules/FriendProfilePageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,67,2.033,99,0.25,101,0.237,104,1.216,113,0.11,206,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,352,2.949,385,3.964,618,4.24,740,6.306,741,5.049,742,5.049,743,5.049,744,5.762,745,5.752,746,4.24]],["title/modules/FriendProfilePageRoutingModule.html",[253,0.669,744,2.904]],["body/modules/FriendProfilePageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,67,1.783,99,0.237,101,0.256,113,0.118,164,1.173,206,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,352,3.182,385,4.278,618,4.576,744,5.108,746,4.576]],["title/components/FriendsPage.html",[0,0.276,208,1.211]],["body/components/FriendsPage.html",[0,0.348,1,0.802,2,1.409,3,0.055,4,0.055,5,0.952,6,0.952,7,0.952,8,0.952,9,0.047,13,1.124,14,0.031,16,0.78,17,1.369,19,1.121,21,0.981,22,0.952,23,2.82,24,2.66,25,1.451,27,1.451,29,0.607,30,1.063,31,2.026,33,2.515,38,1.257,46,1.567,48,1.638,51,1.995,52,1.523,53,0.011,57,1.659,62,0.848,63,0.925,64,1.185,65,1.388,66,0.925,67,1.833,71,3.564,72,2.441,87,1.924,99,0.215,101,0.118,104,0.607,105,2.088,113,0.055,114,0.758,116,1.804,119,1.472,148,1.776,157,2,164,0.542,166,1.267,175,1.679,181,2.84,190,3.225,194,0.952,195,1.451,196,1.708,197,0.952,198,2.056,199,0.952,200,0.952,201,0.848,202,0.952,203,0.825,204,0.848,205,1.451,206,0.825,207,1.451,208,1.703,209,0.952,210,0.825,211,1.451,212,0.825,213,1.451,214,0.825,215,0.952,216,0.848,217,0.952,218,0.825,219,0.952,220,0.825,221,0.952,222,0.825,223,0.952,224,0.825,225,0.952,226,0.825,227,0.825,228,0.952,229,0.825,230,0.825,231,0.952,232,0.825,233,0.952,234,0.825,235,0.825,236,0.952,237,0.825,238,0.952,239,0.825,240,1.185,241,0.825,242,0.825,243,0.952,244,0.825,245,0.952,246,0.825,247,0.898,248,0.952,249,0.952,250,0.004,251,0.005,252,0.004,278,0.483,286,1.224,297,1.472,298,1.362,307,1.183,326,1.765,352,2.718,421,2.711,429,2.045,433,2.721,457,3.311,463,2.84,465,3.841,474,1.865,475,2.152,495,2.289,497,2.116,582,2.443,584,1.679,620,3.314,625,4.727,627,2.921,630,3.225,645,2.691,647,2.84,648,2.56,649,3.646,650,2.691,651,2.691,652,2.443,653,2.691,654,2.243,657,2.075,659,2.691,660,2.691,661,2.338,662,2.156,663,2.691,664,2.691,675,4.086,676,2.52,677,1.765,678,1.362,679,2.443,683,2.443,686,2,687,1.472,688,1.414,711,1.472,747,2.52,748,5.302,749,4.376,750,5.302,751,5.302,752,3.908,753,4.376,754,2.871,755,3.841,756,4.376,757,3.489,758,5.929,759,3.225,760,4.376,761,4.376,762,3.841,763,4.376,764,4.376,765,2.871,766,2.443,767,4.376,768,5.929,769,3.489,770,2.871,771,2.871,772,2.871,773,2.871,774,4.371,775,2.871,776,2.871,777,5.302,778,2.116,779,2.871,780,2.871,781,2.871,782,2.871,783,2.871,784,2.52,785,2.871,786,2.871,787,3.841,788,2.871,789,4.376,790,2.289,791,2.871,792,2.871,793,4.376,794,4.376]],["title/modules/FriendsPageModule.html",[253,0.669,795,3.107]],["body/modules/FriendsPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,71,3.239,99,0.25,101,0.239,104,1.226,113,0.11,208,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,795,6.316,796,5.091,797,5.091,798,5.091,799,5.773,800,5.8,801,5.091]],["title/modules/FriendsPageRoutingModule.html",[253,0.669,799,2.904]],["body/modules/FriendsPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,208,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,799,5.128,801,5.486,802,6.25]],["title/injectables/FriendsService.html",[417,1.859,675,2.904]],["body/injectables/FriendsService.html",[3,0.058,4,0.058,9,0.05,13,1.766,14,0.032,16,1.242,29,0.643,30,1.111,31,2.237,33,3.105,38,1.314,39,2.342,46,1.495,48,1.712,51,2.268,52,2.157,53,0.011,57,0.952,60,3.131,63,2.109,64,1.464,65,1.495,66,2.109,67,2.26,68,3.264,71,4.098,89,2.243,94,2.792,99,0.196,101,0.125,105,2.15,107,1.443,108,2.36,113,0.058,114,0.804,115,1.297,132,2.695,148,2.051,155,3.151,157,3.433,164,1.038,166,2.018,175,1.78,250,0.004,251,0.006,252,0.004,283,1.699,305,2.097,417,2.018,419,1.78,421,3.497,422,3.646,424,3.646,425,4.023,426,4.38,427,3.646,428,3.646,429,2.362,431,3.646,433,1.949,434,4.87,435,4.049,437,3.371,440,1.871,441,3.371,442,2.426,444,2.426,445,2.426,446,2.671,447,2.671,452,1.871,457,3.84,463,1.975,466,3.151,476,2.243,495,2.426,496,2.426,497,2.243,625,3.646,657,2.169,661,2.444,662,2.253,675,3.151,709,2.426,769,4.87,803,2.671,804,3.646,805,4.573,806,3.371,807,4.573,808,6.108,809,3.043,810,4.573,811,4.74,812,4.573,813,4.014,814,3.043,815,5.483,816,6.878,817,3.043,818,4.573,819,6.108,820,3.043,821,3.646,822,4.573,823,4.014,824,3.043,825,5.361,826,3.043,827,2.671,828,2.671,829,3.043,830,3.043,831,3.043,832,3.043,833,3.043,834,2.671,835,2.426,836,3.043,837,3.043,838,6.108,839,3.043,840,4.573,841,3.043,842,3.043,843,3.043,844,3.043,845,4.014,846,4.573,847,3.043,848,2.426,849,3.043,850,3.043,851,3.043,852,3.043,853,3.043,854,3.043,855,3.043,856,3.043,857,2.671,858,3.043,859,3.043,860,3.043,861,4.573,862,3.043,863,3.043,864,2.671,865,2.426]],["title/classes/Group.html",[14,0.025,19,0.891]],["body/classes/Group.html",[3,0.105,4,0.105,9,0.091,14,0.032,18,4.531,19,1.459,29,1.167,30,1.676,46,1.764,51,2.199,53,0.011,63,1.778,64,1.85,65,1.764,66,2.758,99,0.165,113,0.105,116,3.574,250,0.007,251,0.008,252,0.007,286,2.353,317,2.95,429,2.581,433,3.36,527,3.804,529,4.611,583,3.583,866,4.845,867,5.592,868,5.52,869,5.52,870,5.52,871,5.52,872,5.52,873,4.069]],["title/components/GroupCreatePage.html",[0,0.276,210,1.211]],["body/components/GroupCreatePage.html",[0,0.37,1,0.89,2,1.525,3,0.061,4,0.061,5,1.057,6,1.057,7,1.057,8,1.057,9,0.052,13,0.819,14,0.033,16,1.814,17,2.421,18,3.729,19,1.813,20,2.018,21,1.93,22,1.057,23,2.851,24,2.702,25,1.57,27,1.57,29,0.674,30,1.15,31,2.391,33,2.679,38,1.36,39,2.408,46,1.359,48,1.772,49,3.263,50,3.074,51,1.911,52,1.36,53,0.011,57,0.998,62,0.942,64,1.397,65,1.029,67,0.916,72,1.157,85,4.156,86,4.156,87,1.157,99,0.227,101,0.131,102,4.308,104,0.674,105,2.201,107,1.512,108,2.415,109,1.512,110,1.865,113,0.061,114,1.25,115,1.359,119,2.427,121,2.542,148,1.913,164,0.602,170,1.571,189,1.359,192,2.77,194,1.057,195,1.57,196,1.525,197,1.057,198,2.013,199,1.057,200,1.057,201,0.942,202,1.057,203,0.916,204,0.942,205,1.57,206,0.916,207,1.57,208,0.916,209,1.057,210,1.796,211,1.57,212,0.916,213,1.57,214,0.916,215,1.057,216,0.942,217,1.057,218,0.916,219,1.057,220,0.916,221,1.057,222,0.916,223,1.057,224,0.916,225,1.057,226,0.916,227,0.916,228,1.057,229,0.916,230,0.916,231,1.057,232,0.916,233,1.057,234,0.916,235,0.916,236,1.057,237,0.916,238,1.057,239,0.916,240,1.249,241,0.916,242,0.916,243,1.057,244,0.916,245,1.057,246,0.916,247,0.998,248,1.057,249,1.057,250,0.006,251,0.006,252,0.004,278,0.537,307,1.314,339,3.34,341,4.602,449,2.77,462,3.263,474,2.018,475,1.157,556,2.427,582,2.644,584,2.77,634,2.77,673,3.34,678,1.512,686,2.165,687,1.634,688,1.571,689,1.865,711,1.634,811,3.263,874,3.569,875,2.542,876,4.958,877,4.156,878,4.984,879,3.188,880,2.644,881,3.188,882,3.074,883,2.799,884,2.799,885,3.34,886,1.96,887,2.799,888,2.799,889,3.188,890,3.188,891,3.188,892,2.799,893,3.188,894,3.188,895,3.188,896,2.799,897,3.188,898,4.156,899,4.735,900,2.799,901,3.188,902,3.188,903,2.35,904,3.188,905,3.188,906,2.799,907,2.644,908,4.984,909,3.775]],["title/modules/GroupCreatePageModule.html",[253,0.669,910,3.107]],["body/modules/GroupCreatePageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,19,1.496,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,210,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,339,3.074,341,3.964,874,3.074,910,6.306,911,5.049,912,5.049,913,5.049,914,5.762,915,5.049,916,4.24]],["title/modules/GroupCreatePageRoutingModule.html",[253,0.669,914,2.904]],["body/modules/GroupCreatePageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,19,1.312,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,210,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,339,3.317,341,4.278,874,3.317,914,5.108,916,4.576]],["title/components/GroupDetailsPage.html",[0,0.276,212,1.211]],["body/components/GroupDetailsPage.html",[0,0.24,1,0.463,2,0.905,3,0.032,4,0.032,5,0.55,6,0.55,7,0.55,8,0.55,9,0.027,13,1.106,14,0.022,16,0.451,17,1.638,18,1.57,19,1.726,20,1.198,21,1.25,22,0.55,23,2.611,24,2.463,25,0.932,27,0.932,29,0.351,30,0.683,31,2.16,33,1.735,38,0.807,39,2.231,46,1.702,50,4.33,51,1.624,52,1.816,53,0.011,57,1.745,60,1.441,62,0.49,63,1.178,64,1.077,65,1.613,66,1.178,67,0.477,68,1.955,72,1.899,87,1.899,99,0.211,100,1.223,101,0.068,104,0.351,105,1.516,107,0.787,108,1.663,109,0.787,110,0.971,111,2.121,112,0.971,113,0.032,114,0.966,115,0.707,117,1.937,119,0.851,132,1.24,148,1.833,157,0.759,164,0.91,166,1.9,167,1.456,170,3.115,179,2.241,182,2.467,183,2.696,189,0.707,192,1.644,194,0.932,195,0.932,196,0.905,197,0.55,198,1.387,199,0.55,200,0.55,201,0.49,202,0.55,203,0.477,204,0.49,205,0.932,206,0.477,207,0.932,208,0.477,209,0.55,210,0.477,211,0.932,212,1.237,213,0.932,214,0.477,215,0.55,216,0.49,217,0.55,218,0.477,219,0.55,220,0.477,221,0.55,222,0.477,223,0.55,224,0.477,225,0.55,226,0.477,227,0.477,228,0.55,229,0.477,230,0.477,231,0.55,232,0.477,233,0.55,234,0.477,235,0.477,236,0.55,237,0.477,238,0.55,239,0.477,240,1.523,241,0.477,242,0.477,243,0.55,244,0.477,245,0.55,246,0.477,247,0.519,248,0.55,249,0.55,250,0.003,251,0.003,252,0.002,278,0.279,297,0.851,298,0.787,307,0.684,339,1.955,348,3.114,349,5.424,355,3.397,360,1.077,400,2.404,429,1.858,433,1.835,452,2.648,456,4.172,464,1.825,466,2.967,474,1.198,475,1.563,546,2.467,550,2.795,552,1.02,556,2.207,568,1.077,582,1.57,584,1.644,589,2.121,597,1.02,627,0.817,634,2.519,636,1.729,657,1.333,673,1.502,678,0.787,679,1.57,683,1.57,684,1.57,686,1.285,687,0.851,688,0.817,689,0.971,711,0.851,719,1.729,766,1.57,806,3.174,848,1.323,874,4.206,885,2.301,886,1.02,896,3.21,903,2.696,907,3.412,917,1.323,918,3.433,919,3.21,920,2.467,921,3.657,922,3.657,923,3.657,924,3.657,925,4.818,926,3.657,927,2.916,928,3.657,929,4.594,930,3.21,931,3.606,932,3.657,933,3.779,934,4.306,935,2.811,936,4.306,937,2.811,938,4.306,939,4.306,940,2.811,941,1.659,942,4.229,943,1.659,944,2.811,945,1.659,946,2.811,947,2.648,948,3.433,949,2.811,950,2.467,951,2.072,952,1.659,953,2.241,954,1.659,955,2.811,956,2.811,957,1.659,958,2.811,959,2.241,960,2.811,961,2.967,962,2.811,963,2.811,964,1.659,965,1.456,966,2.241,967,2.072,968,1.659,969,2.811,970,1.659,971,1.456,972,2.374,973,1.659,974,1.659,975,1.659,976,1.659,977,1.456,978,1.456,979,1.659,980,1.456,981,1.456,982,1.659,983,1.659,984,1.456,985,2.467,986,1.659,987,1.659,988,2.811,989,2.811,990,2.467,991,5.233,992,1.937,993,3.779,994,1.825,995,2.811,996,2.467,997,2.467,998,1.659,999,1.659,1000,3.779,1001,1.659,1002,1.456,1003,1.456,1004,1.659,1005,1.659,1006,1.456,1007,2.811,1008,1.659,1009,2.696,1010,2.241,1011,1.456,1012,1.456,1013,1.456,1014,1.456,1015,1.456,1016,1.659,1017,1.659,1018,2.811,1019,2.811,1020,3.841,1021,2.811,1022,3.779,1023,2.811,1024,2.811,1025,2.811,1026,2.241,1027,2.811,1028,2.467,1029,2.467,1030,1.937,1031,2.467,1032,2.811,1033,1.659,1034,2.811,1035,3.433,1036,1.659,1037,1.659,1038,1.659,1039,4.818,1040,1.659,1041,1.659,1042,1.659,1043,1.659,1044,1.659,1045,1.659,1046,1.659,1047,2.241,1048,1.456,1049,1.456,1050,1.323,1051,1.659,1052,1.456,1053,1.659,1054,1.659,1055,1.659,1056,1.659,1057,1.659,1058,1.659,1059,1.659,1060,1.659,1061,3.657,1062,1.659,1063,3.657,1064,1.659,1065,1.659,1066,2.241,1067,1.659,1068,2.811,1069,1.659,1070,1.456,1071,1.659,1072,1.659,1073,2.811,1074,1.659,1075,1.456,1076,1.456,1077,1.456,1078,1.323,1079,1.323,1080,1.456,1081,1.223,1082,1.456,1083,1.456,1084,1.456,1085,1.456,1086,1.456,1087,1.456,1088,2.467,1089,1.456,1090,1.456,1091,1.323,1092,1.659,1093,1.659,1094,1.659,1095,2.811,1096,1.659,1097,1.456,1098,1.456,1099,1.659,1100,1.659,1101,1.659,1102,1.659,1103,1.659,1104,2.072,1105,2.467,1106,1.937,1107,2.811,1108,2.811,1109,2.811,1110,2.811,1111,4.306,1112,3.433,1113,3.779,1114,4.323,1115,2.811]],["title/modules/GroupDetailsPageModule.html",[253,0.669,1116,3.107]],["body/modules/GroupDetailsPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,19,1.496,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,212,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,348,3.211,349,3.964,874,3.074,1116,6.306,1117,5.049,1118,5.049,1119,5.049,1120,5.762,1121,5.049,1122,4.24]],["title/modules/GroupDetailsPageRoutingModule.html",[253,0.669,1120,2.904]],["body/modules/GroupDetailsPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,19,1.312,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,212,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,348,3.466,349,4.278,874,3.317,1120,5.108,1122,4.576]],["title/components/GroupListPage.html",[0,0.276,214,1.211]],["body/components/GroupListPage.html",[0,0.334,1,0.75,2,1.339,3,0.051,4,0.051,5,0.891,6,0.891,7,0.891,8,0.891,9,0.044,13,1.068,14,0.03,16,0.729,17,1.301,19,1.778,20,1.772,21,1.737,22,0.891,23,2.799,24,2.64,25,1.379,27,1.379,29,0.568,30,1.01,31,2.237,32,6.613,33,2.412,37,4.464,38,1.194,40,5.025,42,5.025,44,5.025,45,3.648,46,1.663,50,3.716,51,1.682,52,1.881,53,0.011,56,3.648,57,2.049,62,1.503,63,1.339,64,1.28,65,1.485,66,1.339,67,0.771,70,3.648,72,2.247,80,3.314,81,3.314,82,5.748,87,1.846,94,2.617,96,2.357,98,4.464,99,0.221,100,1.979,101,0.111,104,0.568,105,2.016,107,1.274,108,2.212,109,1.274,110,1.571,113,0.051,114,1.512,115,1.145,119,1.377,123,1.85,132,1.185,137,2.357,138,1.979,139,2.357,140,2.357,141,2.357,142,4.464,146,2.357,148,1.729,164,0.507,189,1.145,194,0.891,195,1.379,196,1.339,197,0.891,198,1.844,199,0.891,200,0.891,201,0.793,202,0.891,203,0.771,204,0.793,205,1.379,206,0.771,207,1.379,208,0.771,209,0.891,210,0.771,211,1.379,212,0.771,213,1.379,214,1.645,215,0.891,216,0.793,217,0.891,218,0.771,219,0.891,220,0.771,221,0.891,222,0.771,223,0.891,224,0.771,225,0.891,226,0.771,227,0.771,228,0.891,229,0.771,230,0.771,231,0.891,232,0.771,233,0.891,234,0.771,235,0.771,236,0.891,237,0.771,238,0.891,239,0.771,240,1.144,241,0.771,242,0.771,243,0.891,244,0.771,245,0.891,246,0.771,247,0.84,248,0.891,249,0.891,250,0.005,251,0.005,252,0.003,278,0.452,307,1.107,339,2.718,344,3.064,345,5.341,348,1.499,433,1.145,474,1.772,475,2.078,620,2.048,627,1.323,678,1.274,686,1.9,687,1.377,688,1.323,689,1.571,711,1.377,766,3.197,874,4.142,885,3.06,886,1.651,918,3.314,1104,3.064,1123,2.357,1124,5.34,1125,5.085,1126,4.156,1127,5.085,1128,5.085,1129,5.025,1130,4.156,1131,2.685,1132,4.156,1133,2.685,1134,2.685,1135,2.685,1136,4.156,1137,2.685,1138,2.685,1139,2.685,1140,2.685,1141,2.685,1142,2.685,1143,5.085,1144,2.685,1145,2.685,1146,2.141,1147,4.156,1148,2.685,1149,2.685,1150,4.464,1151,2.685,1152,2.685,1153,2.685,1154,2.685,1155,2.685,1156,2.357,1157,2.685,1158,2.685,1159,2.685,1160,2.685,1161,3.648,1162,2.685,1163,2.685,1164,2.685,1165,2.685,1166,4.156,1167,3.648]],["title/modules/GroupListPageModule.html",[253,0.669,1168,3.107]],["body/modules/GroupListPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,19,1.496,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,214,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,344,4.24,345,3.964,874,3.074,1168,6.306,1169,5.049,1170,5.049,1171,5.049,1172,5.762,1173,5.752,1174,5.049]],["title/modules/GroupListPageRoutingModule.html",[253,0.669,1172,2.904]],["body/modules/GroupListPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,19,1.312,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,214,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,344,4.576,345,4.278,874,3.317,1172,5.108,1174,5.449]],["title/injectables/GroupService.html",[417,1.859,885,2.252]],["body/injectables/GroupService.html",[0,0.145,1,0.993,3,0.042,4,0.042,9,0.036,11,1.43,13,1.625,14,0.013,16,1.392,17,2.127,18,3.533,19,1.88,29,0.945,30,0.864,31,2.055,33,2.668,38,1.021,39,2.898,46,1.607,51,2.17,52,2.226,53,0.011,57,1.76,62,1.321,63,2.299,64,1.595,65,1.581,66,2.299,78,2.45,89,4.147,94,1.007,99,0.203,101,0.091,102,3.534,104,0.466,105,1.805,107,1.045,108,1.981,110,1.289,113,0.042,114,0.582,115,0.939,124,1.934,132,1.569,138,1.624,148,2.081,157,2.893,164,1.396,166,3,170,1.086,250,0.004,251,0.004,252,0.003,274,1.757,283,1.23,305,1.519,417,1.569,419,1.289,421,1.007,425,4.083,429,2.067,433,3.444,434,4.088,435,3.294,437,2.621,440,1.355,441,2.621,449,2.08,452,2.748,466,4.145,476,1.624,556,2.884,633,1.624,634,3,755,1.934,762,3.121,804,2.834,806,2.621,815,2.834,827,1.934,845,3.121,865,1.757,867,1.519,878,2.834,880,1.985,885,1.9,953,4.795,966,4.088,967,2.621,1104,1.624,1124,5.595,1129,3.121,1146,1.757,1156,1.934,1161,3.923,1175,1.934,1176,4.469,1177,3.555,1178,3.555,1179,3.555,1180,5.128,1181,3.555,1182,3.555,1183,3.555,1184,2.204,1185,3.555,1186,2.204,1187,3.555,1188,2.204,1189,3.555,1190,2.621,1191,3.121,1192,3.555,1193,2.204,1194,4.501,1195,3.121,1196,3.555,1197,2.204,1198,3.555,1199,2.204,1200,3.555,1201,2.204,1202,2.204,1203,5.625,1204,3.555,1205,2.204,1206,3.555,1207,2.204,1208,3.555,1209,2.204,1210,3.555,1211,2.204,1212,2.204,1213,2.204,1214,2.204,1215,2.204,1216,2.204,1217,2.204,1218,2.204,1219,2.204,1220,3.555,1221,2.204,1222,2.204,1223,2.204,1224,2.204,1225,2.204,1226,2.204,1227,2.204,1228,2.204,1229,2.204,1230,2.204,1231,3.555,1232,2.204,1233,2.204,1234,2.204,1235,4.469,1236,2.204,1237,2.204,1238,2.204,1239,2.204,1240,2.204,1241,2.204,1242,2.204,1243,2.204,1244,2.204,1245,1.934,1246,1.934,1247,1.934,1248,2.204,1249,4.469,1250,2.204,1251,2.204,1252,2.204,1253,3.294,1254,2.204,1255,2.204,1256,2.204,1257,2.204,1258,3.555,1259,2.204,1260,2.204,1261,2.204,1262,2.204,1263,2.204,1264,2.204,1265,3.555,1266,2.204,1267,2.204,1268,2.204,1269,2.204,1270,2.204,1271,2.204,1272,2.204,1273,2.204,1274,2.204,1275,2.204,1276,2.204,1277,2.204,1278,2.204,1279,2.204,1280,2.204,1281,2.204,1282,1.519,1283,1.934,1284,2.204,1285,2.204,1286,2.204,1287,2.204]],["title/modules/HomePageModule.html",[253,0.669,1288,3.107]],["body/modules/HomePageModule.html",[3,0.108,4,0.108,9,0.093,14,0.033,53,0.011,99,0.252,101,0.233,104,1.193,113,0.108,216,2.459,250,0.007,251,0.009,252,0.007,255,0.818,256,2.067,261,2.189,262,1.766,263,1.622,265,2.253,266,1.11,267,1.11,268,2.32,269,1.818,270,2.32,271,1.818,272,2.253,273,1.818,330,4.501,364,3.664,1288,6.377,1289,4.955,1290,4.955,1291,4.955,1292,5.735,1293,5.735,1294,5.645,1295,4.955,1296,5.645,1297,5.645]],["title/modules/HomePageRoutingModule.html",[253,0.669,1292,2.904]],["body/modules/HomePageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,216,2.199,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,1292,5.128,1295,5.486,1298,6.25]],["title/components/InvitePage.html",[0,0.276,218,1.211]],["body/components/InvitePage.html",[0,0.372,1,0.898,2,1.534,3,0.061,4,0.061,5,1.066,6,1.066,7,1.066,8,1.066,9,0.053,13,0.826,14,0.033,16,0.873,17,1.491,19,1.742,20,2.031,21,1.939,22,1.066,23,2.853,24,2.692,25,1.58,27,1.58,29,0.68,30,1.157,31,1.628,33,2.692,38,1.368,39,2.419,46,1.526,49,3.283,51,1.916,52,1.368,53,0.011,57,1.006,62,0.95,64,1.065,65,1.234,67,0.923,72,2.06,73,4.181,87,2.06,94,2.178,99,0.223,101,0.132,102,4.325,104,0.68,105,2.209,107,1.525,110,1.88,113,0.061,114,1.499,115,1.37,116,1.963,117,2.215,119,1.648,121,2.563,123,2.215,132,1.418,148,1.77,157,1.47,164,1.185,166,2.102,175,1.88,189,1.37,194,1.066,195,1.58,196,1.534,197,1.066,198,2.022,199,1.066,200,1.066,201,0.95,202,1.066,203,0.923,204,0.95,205,1.58,206,0.923,207,1.58,208,0.923,209,1.066,210,0.923,211,1.58,212,0.923,213,1.58,214,0.923,215,1.066,216,0.95,217,1.066,218,1.803,219,1.066,220,0.923,221,1.066,222,0.923,223,1.066,224,0.923,225,1.066,226,0.923,227,0.923,228,1.066,229,0.923,230,0.923,231,1.066,232,0.923,233,1.066,234,0.923,235,0.923,236,1.066,237,0.923,238,1.066,239,0.923,240,1.255,241,0.923,242,0.923,243,1.066,244,0.923,245,1.066,246,0.923,247,1.006,248,1.066,249,1.066,250,0.006,251,0.006,252,0.004,278,0.541,307,1.325,412,5.596,429,0.977,456,3.798,464,4.35,474,2.031,475,2.278,496,2.563,678,1.525,686,2.178,687,1.648,688,1.584,689,1.88,711,1.648,713,1.977,848,2.563,857,2.822,885,3.354,886,1.977,907,3.504,1047,2.563,1104,3.511,1283,4.982,1299,2.822,1300,4.764,1301,6.276,1302,5.675,1303,4.764,1304,5.675,1305,6.276,1306,6.276,1307,3.214,1308,3.214,1309,3.214,1310,4.764,1311,3.214,1312,3.214,1313,3.214,1314,2.563,1315,3.214,1316,3.214,1317,3.214,1318,3.214,1319,3.214,1320,3.214,1321,3.214,1322,3.214,1323,3.214,1324,3.214,1325,3.214,1326,3.214,1327,3.214,1328,3.214,1329,3.214,1330,5.675,1331,3.214,1332,3.214,1333,3.214,1334,2.087,1335,3.214,1336,3.214,1337,4.764,1338,4.764]],["title/modules/InvitePageModule.html",[253,0.669,1339,3.107]],["body/modules/InvitePageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,218,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,412,4.624,1339,6.316,1340,5.091,1341,5.091,1342,5.091,1343,5.773,1344,5.8,1345,5.091]],["title/modules/InvitePageRoutingModule.html",[253,0.669,1343,2.904]],["body/modules/InvitePageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,218,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,1343,5.128,1345,5.486,1346,6.25]],["title/components/LoginPage.html",[0,0.276,220,1.211]],["body/components/LoginPage.html",[0,0.363,1,0.861,2,1.488,3,0.059,4,0.059,5,1.023,6,1.023,7,1.023,8,1.023,9,0.051,13,0.792,14,0.033,16,0.838,19,1.392,20,1.969,21,1.892,22,1.023,23,2.841,24,2.681,25,1.532,27,1.532,29,0.652,30,1.122,38,1.327,46,1.558,48,2.302,51,1.893,52,1.327,53,0.011,57,1.445,60,2.368,62,0.911,63,0.993,64,1.238,65,1.503,66,0.993,67,0.886,80,3.683,81,3.683,99,0.165,101,0.127,108,2.139,109,1.463,113,0.059,114,1.22,116,1.271,148,1.22,155,2.125,170,1.52,189,1.315,194,1.023,195,1.532,196,1.488,197,1.023,198,1.981,199,1.023,200,1.023,201,0.911,202,1.023,203,0.886,204,0.911,205,1.532,206,0.886,207,1.532,208,0.886,209,1.023,210,0.886,211,1.532,212,0.886,213,1.532,214,0.886,215,1.023,216,0.911,217,1.023,218,0.886,219,1.023,220,1.766,221,1.023,222,0.886,223,1.023,224,0.886,225,1.023,226,0.886,227,0.886,228,1.023,229,0.886,230,0.886,231,1.023,232,0.886,233,1.023,234,0.886,235,0.886,236,1.023,237,0.886,238,1.023,239,0.886,240,1.229,241,0.886,242,0.886,243,1.023,244,0.886,245,1.023,246,0.886,247,0.965,248,1.023,249,1.023,250,0.004,251,0.006,252,0.004,278,0.519,326,3.405,336,5.079,376,4.289,429,2.488,449,2.702,457,4.208,459,4.054,462,3.183,463,3.992,464,2.998,475,2.01,491,3.683,492,3.683,500,3.992,513,2.125,583,2.002,588,1.896,589,2.276,590,2.125,591,1.896,592,2.273,593,3.816,594,4.415,597,1.896,599,4.082,600,2.84,601,2.125,602,2.273,603,2.273,604,1.896,605,2.84,606,1.896,607,2.273,608,3.405,609,3.183,610,1.896,732,2.273,736,3.405,790,2.459,882,3.992,927,5.25,967,3.405,1035,2.459,1081,2.273,1091,2.459,1347,2.707,1348,5.538,1349,4.619,1350,5.538,1351,5.538,1352,6.149,1353,3.084,1354,4.619,1355,3.084,1356,4.054,1357,3.084,1358,3.084,1359,4.619,1360,3.084,1361,4.054,1362,4.619,1363,3.084,1364,3.084,1365,5.538,1366,5.538,1367,5.538,1368,5.538,1369,3.084,1370,3.084,1371,3.084,1372,2.707,1373,4.619,1374,4.619,1375,4.054,1376,4.619,1377,3.084,1378,3.084,1379,3.084,1380,3.084,1381,3.084,1382,3.084]],["title/modules/LoginPageModule.html",[253,0.669,1383,3.107]],["body/modules/LoginPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,220,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,336,3.997,1383,6.316,1384,5.091,1385,5.091,1386,5.091,1387,5.773,1388,5.8,1389,5.091]],["title/modules/LoginPageRoutingModule.html",[253,0.669,1387,2.904]],["body/modules/LoginPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,220,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,1387,5.128,1389,5.486,1390,6.25]],["title/components/MemberViewPage.html",[0,0.276,222,1.211]],["body/components/MemberViewPage.html",[0,0.364,1,0.865,2,1.493,3,0.059,4,0.059,5,1.028,6,1.028,7,1.028,8,1.028,9,0.051,13,1.19,14,0.033,16,0.841,17,1.45,18,3.1,19,1.649,20,1.976,21,1.897,22,1.028,23,2.843,24,2.682,25,1.537,27,1.537,29,0.655,30,1.126,31,2.578,33,2.633,38,1.331,46,1.434,49,3.194,50,4.495,51,1.895,52,1.331,53,0.011,57,1.45,62,2.181,63,0.998,64,1.241,65,1.34,66,0.998,67,0.89,99,0.233,101,0.128,104,0.655,105,2.17,107,1.469,108,2.381,109,1.469,110,1.812,111,3.036,112,1.812,113,0.059,114,1.466,115,1.321,117,2.135,119,1.588,148,2.06,164,0.875,189,1.321,190,3.416,194,1.028,195,1.537,196,1.493,197,1.028,198,1.985,199,1.028,200,1.028,201,0.915,202,1.028,203,0.89,204,0.915,205,1.537,206,0.89,207,1.537,208,0.89,209,1.028,210,0.89,211,1.537,212,0.89,213,1.537,214,0.89,215,1.028,216,0.915,217,1.028,218,0.89,219,1.028,220,0.89,221,1.028,222,1.77,223,1.028,224,0.89,225,1.028,226,0.89,227,0.89,228,1.028,229,0.89,230,0.89,231,1.028,232,0.89,233,1.028,234,0.89,235,0.89,236,1.028,237,0.89,238,1.028,239,0.89,240,1.232,241,0.89,242,0.89,243,1.028,244,0.89,245,1.028,246,0.89,247,0.969,248,1.028,249,1.028,250,0.006,251,0.006,252,0.004,278,0.521,297,1.588,298,1.469,307,1.277,352,1.588,400,2.588,402,4.771,429,2.006,433,3.146,474,1.976,475,2.237,556,2.376,582,2.588,584,2.711,620,2.283,627,1.526,673,2.477,678,1.469,679,1.73,683,1.73,684,2.588,686,2.119,687,1.588,688,1.526,689,1.812,711,1.588,766,3.441,784,2.719,811,3.194,878,5.52,885,3.294,886,1.905,887,2.719,888,2.719,892,2.719,898,2.719,900,2.719,906,2.719,907,1.73,909,4.913,918,3.695,1000,5.41,1006,2.719,1047,2.47,1048,2.719,1049,2.719,1050,2.47,1105,4.068,1334,2.011,1375,4.068,1391,5.104,1392,2.719,1393,5.553,1394,4.635,1395,4.635,1396,3.098,1397,4.635,1398,3.098,1399,3.098,1400,3.098,1401,3.098,1402,3.098,1403,3.098,1404,3.098,1405,3.098,1406,3.098,1407,3.098,1408,5.553]],["title/modules/MemberViewPageModule.html",[253,0.669,1409,3.107]],["body/modules/MemberViewPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,62,2.091,99,0.25,101,0.237,104,1.216,113,0.11,222,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,400,3.211,402,3.964,1391,4.24,1409,6.306,1410,5.049,1411,5.049,1412,5.049,1413,5.762,1414,5.752,1415,5.049]],["title/modules/MemberViewPageRoutingModule.html",[253,0.669,1413,2.904]],["body/modules/MemberViewPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,62,1.834,99,0.237,101,0.256,113,0.118,164,1.173,222,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,400,3.466,402,4.278,1391,4.576,1413,5.108,1415,5.449]],["title/components/OptionsPage.html",[0,0.276,224,1.211]],["body/components/OptionsPage.html",[0,0.278,1,0.569,2,1.075,3,0.039,4,0.039,5,0.676,6,0.676,7,0.676,8,0.676,9,0.033,13,1.088,14,0.025,15,1.783,16,0.553,17,1.532,19,0.896,21,0.696,22,0.676,23,2.699,24,2.566,25,1.107,27,1.107,29,0.431,30,0.811,31,1.673,38,0.958,39,3.032,46,1.48,48,2.752,51,2.049,52,1.836,53,0.011,57,1.532,60,2.973,62,0.602,63,0.656,64,0.947,65,0.921,66,0.656,67,0.585,72,1.777,87,1.211,99,0.183,101,0.084,105,1.724,113,0.039,114,0.538,116,0.84,132,0.899,148,1.532,164,0.925,166,2.702,192,2.478,194,0.676,195,1.107,196,1.075,197,0.676,198,1.972,199,0.676,200,0.676,201,0.602,202,0.676,203,0.585,204,0.602,205,1.107,206,0.585,207,1.107,208,0.585,209,0.676,210,0.585,211,1.107,212,0.585,213,1.107,214,0.585,215,0.676,216,0.602,217,0.676,218,0.585,219,0.676,220,0.585,221,0.676,222,0.585,223,0.676,224,1.406,225,0.676,226,0.585,227,0.585,228,0.676,229,0.585,230,1.759,231,0.676,232,0.585,233,0.676,234,0.585,235,0.585,236,0.676,237,0.585,238,0.676,239,0.585,240,0.979,241,0.585,242,0.585,243,0.676,244,0.585,245,0.676,246,0.585,247,0.638,248,0.676,249,0.676,250,0.002,251,0.004,252,0.002,278,0.343,286,0.869,297,1.045,298,0.967,307,0.84,352,2.51,360,2.166,376,1.71,381,4.276,421,2.239,429,1.288,474,1.422,475,1.777,485,4.298,500,2.166,526,1.789,529,3.393,557,1.253,568,1.323,589,3.017,600,3.321,601,1.404,602,1.502,604,2.052,605,1.253,606,3.011,608,2.052,610,2.052,620,3.622,627,2.412,635,3.567,636,4.731,645,2.052,647,2.166,648,1.952,649,3.011,650,2.052,651,2.052,652,1.863,653,2.052,654,1.71,657,3.031,659,2.052,660,3.011,661,1.783,662,3.622,663,2.052,664,2.052,673,1.783,677,1.253,678,0.967,679,1.863,683,1.863,684,1.863,686,1.525,688,1.004,693,2.75,708,1.789,713,2.605,714,2.75,716,2.75,718,2.75,719,2.605,720,2.75,723,1.625,724,2.66,725,1.404,726,1.625,727,1.502,729,1.625,732,3.123,757,4.624,766,3.239,778,1.502,790,1.625,880,3.239,882,4.618,948,2.66,951,4.276,961,4.69,1030,3.374,1282,3.997,1416,1.789,1417,2.459,1418,4.236,1419,3.337,1420,3.377,1421,3.609,1422,4.896,1423,4.896,1424,3.337,1425,3.609,1426,2.038,1427,4.624,1428,4.624,1429,2.459,1430,4.624,1431,4.624,1432,2.038,1433,2.038,1434,5.091,1435,6.805,1436,2.038,1437,2.038,1438,2.038,1439,3.337,1440,2.66,1441,3.337,1442,3.337,1443,3.337,1444,2.929,1445,3.997,1446,2.929,1447,2.929,1448,3.123,1449,3.337,1450,3.337,1451,2.038,1452,3.337,1453,3.337,1454,2.929,1455,2.038,1456,2.038,1457,2.038,1458,1.625,1459,1.502,1460,3.377,1461,3.377,1462,3.377,1463,3.123,1464,1.502,1465,3.123,1466,3.123,1467,3.609,1468,2.459,1469,2.66,1470,1.625,1471,1.625,1472,1.625,1473,1.625,1474,1.625,1475,2.038,1476,2.038,1477,2.038,1478,2.038,1479,2.038,1480,2.038,1481,4.236,1482,4.896,1483,2.929,1484,2.929,1485,2.929,1486,1.789,1487,2.038,1488,2.038,1489,2.038,1490,2.038,1491,1.625]],["title/modules/OptionsPageModule.html",[253,0.669,1492,3.107]],["body/modules/OptionsPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,224,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,360,3.765,1492,6.316,1493,5.091,1494,5.091,1495,5.091,1496,5.773,1497,5.8,1498,5.091]],["title/modules/OptionsPageRoutingModule.html",[253,0.669,1496,2.904]],["body/modules/OptionsPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,224,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,1496,5.128,1498,5.486,1499,6.25]],["title/components/PasswordPage.html",[0,0.276,226,1.211]],["body/components/PasswordPage.html",[0,0.343,1,0.784,2,1.385,3,0.053,4,0.053,5,0.931,6,0.931,7,0.931,8,0.931,9,0.046,13,0.721,14,0.031,16,0.762,17,1.834,19,1.105,21,0.959,22,0.931,23,2.813,24,2.653,25,1.426,27,1.426,29,0.593,30,1.045,31,0.959,38,1.235,39,2.841,46,1.508,48,2.495,51,1.104,52,1.502,53,0.011,57,0.878,60,3.004,62,0.829,64,0.961,65,1.274,67,0.806,72,1.018,87,1.018,99,0.156,101,0.116,108,1.661,113,0.053,114,0.741,116,1.157,132,1.897,148,1.136,164,0.812,166,2.788,170,2.887,175,1.642,192,2.515,194,0.931,195,1.944,196,1.385,197,0.931,198,2.147,199,0.931,200,0.931,201,0.829,202,0.931,203,0.806,204,0.829,205,1.426,206,0.806,207,1.426,208,0.806,209,0.931,210,0.806,211,1.426,212,0.806,213,1.426,214,0.806,215,0.931,216,0.829,217,0.931,218,0.806,219,0.931,220,0.806,221,0.931,222,0.806,223,0.931,224,0.806,225,0.931,226,1.683,227,0.806,228,0.931,229,0.806,230,0.806,231,0.931,232,0.806,233,0.931,234,0.806,235,0.806,236,0.931,237,0.806,238,0.931,239,0.806,240,1.171,241,0.806,242,0.806,243,0.931,244,0.806,245,0.931,246,0.806,247,0.878,248,0.931,249,0.931,250,0.003,251,0.005,252,0.003,278,0.472,286,1.196,307,1.157,376,3.84,421,1.966,429,2.027,463,3.804,464,2.791,474,1.833,475,2.127,500,5.079,515,2.463,529,3.428,543,3.428,579,4.589,580,3.774,585,5.851,589,2.887,595,2.463,620,3.284,627,2.887,635,2.644,636,4.402,637,3.17,713,2.644,714,2.791,716,2.791,718,2.791,719,2.644,720,2.791,725,1.934,752,3.854,766,2.401,774,4.914,880,2.401,882,3.804,961,2.963,1030,2.963,1194,3.774,1417,3.17,1421,4.319,1425,4.319,1429,3.17,1444,3.774,1445,2.963,1463,2.069,1464,2.069,1465,3.17,1466,3.17,1467,3.17,1468,2.069,1484,3.774,1500,2.463,1501,5.228,1502,5.228,1503,5.228,1504,2.806,1505,4.3,1506,2.806,1507,4.3,1508,4.3,1509,4.3,1510,2.806,1511,4.3,1512,5.86,1513,4.3,1514,4.3,1515,4.3,1516,3.774,1517,4.3,1518,4.3,1519,4.3,1520,2.806,1521,2.806,1522,2.806,1523,2.806,1524,4.3,1525,5.228,1526,5.228,1527,3.854,1528,2.237,1529,2.806,1530,4.3,1531,5.86,1532,4.3,1533,4.3,1534,2.806,1535,2.806,1536,4.3,1537,4.589,1538,2.806,1539,2.806,1540,2.806,1541,2.806,1542,2.806,1543,2.806,1544,2.806,1545,2.806,1546,2.806,1547,2.806,1548,2.806]],["title/modules/PasswordPageModule.html",[253,0.669,1549,3.107]],["body/modules/PasswordPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,226,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,376,2.973,617,4.276,1549,6.316,1550,5.091,1551,5.091,1552,5.091,1553,5.773,1554,5.8]],["title/modules/PasswordPageRoutingModule.html",[253,0.669,1553,2.904]],["body/modules/PasswordPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,226,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,617,4.607,1553,5.128,1555,6.25]],["title/components/PaymentPage.html",[0,0.276,227,1.211]],["body/components/PaymentPage.html",[0,0.34,1,0.773,2,1.371,3,0.053,4,0.053,5,0.919,6,0.919,7,0.919,8,0.919,9,0.045,13,0.711,14,0.03,16,0.752,17,1.821,19,1.096,21,0.946,22,0.919,23,2.808,24,2.65,25,1.412,27,1.412,29,0.586,30,1.034,31,1.988,38,1.223,39,2.826,46,1.365,48,2.178,51,2.105,52,1.489,53,0.011,57,0.867,60,2.983,62,0.818,64,0.952,65,0.925,67,0.795,72,2.112,74,3.736,87,1.545,99,0.188,101,0.114,105,2.049,113,0.053,114,0.731,148,1.537,164,0.804,166,2.568,192,2.49,194,0.919,195,1.412,196,1.371,197,0.919,198,2.136,199,0.919,200,0.919,201,0.818,202,0.919,203,0.795,204,0.818,205,1.412,206,0.795,207,1.412,208,0.795,209,0.919,210,0.795,211,1.412,212,0.795,213,1.412,214,0.795,215,0.919,216,0.818,217,0.919,218,0.795,219,0.919,220,0.795,221,0.919,222,0.795,223,0.919,224,0.795,225,0.919,226,0.795,227,1.672,228,0.919,229,0.795,230,1.489,231,0.919,232,0.795,233,0.919,234,0.795,235,0.795,236,0.919,237,0.795,238,0.919,239,0.795,240,1.163,241,0.795,242,0.795,243,0.919,244,0.795,245,0.919,246,0.795,247,0.867,248,0.919,249,0.919,250,0.003,251,0.005,252,0.003,278,0.466,286,1.18,307,1.141,376,2.182,421,1.946,474,1.814,475,2.112,497,3.138,529,3.404,589,2.867,620,3.512,627,2.867,635,3.578,636,4.383,645,2.617,647,2.763,648,2.49,649,3.578,650,2.617,651,2.617,652,2.377,653,2.617,654,2.182,657,3.145,659,2.617,660,2.617,661,2.275,662,3.677,663,2.617,664,2.617,673,2.275,677,1.703,678,1.313,684,2.377,686,1.946,688,1.364,693,2.763,713,2.617,714,2.763,716,2.763,718,2.763,719,2.617,720,2.763,766,3.249,778,2.041,880,3.249,882,4.627,951,4.29,961,4.912,1030,2.933,1282,4.01,1417,4.888,1420,4.134,1421,4.29,1425,4.29,1427,4.64,1428,4.64,1429,3.138,1430,4.64,1431,4.64,1445,2.933,1460,3.394,1461,3.394,1462,3.394,1463,3.138,1464,2.041,1465,3.138,1466,3.138,1467,3.138,1468,2.041,1469,2.208,1483,5.108,1527,4.29,1556,2.431,1557,5.185,1558,4.257,1559,2.769,1560,2.769,1561,2.769,1562,2.769,1563,2.769,1564,4.257,1565,4.257,1566,4.257,1567,3.736]],["title/modules/PaymentPageModule.html",[253,0.669,1568,3.107]],["body/modules/PaymentPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,227,2.407,230,1.666,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,1568,6.316,1569,5.091,1570,5.091,1571,5.091,1572,5.773,1573,5.8,1574,5.091]],["title/modules/PaymentPageRoutingModule.html",[253,0.669,1572,2.904]],["body/modules/PaymentPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,227,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,1572,5.128,1574,5.486,1575,6.25]],["title/components/PaymentReminderPage.html",[0,0.276,229,1.211]],["body/components/PaymentReminderPage.html",[0,0.37,1,0.89,2,1.525,3,0.061,4,0.061,5,1.057,6,1.057,7,1.057,8,1.057,9,0.052,13,0.819,14,0.033,15,2.53,16,0.866,17,1.767,19,1.194,20,2.018,21,1.93,22,1.057,23,2.851,24,2.69,25,1.57,27,1.57,29,0.674,30,1.15,38,1.36,46,1.682,51,1.216,52,0.916,53,0.011,57,0.998,62,0.942,64,1.058,65,1.653,67,0.916,72,1.157,87,1.157,99,0.141,101,0.131,102,4.308,103,5.487,104,0.674,113,0.061,114,1.25,116,1.314,148,1.25,171,2.799,189,1.359,192,2.77,193,4.156,194,1.057,195,1.57,196,1.525,197,1.057,198,2.013,199,1.057,200,1.057,201,0.942,202,1.057,203,0.916,204,0.942,205,1.57,206,0.916,207,1.57,208,0.916,209,1.057,210,0.916,211,1.57,212,0.916,213,1.57,214,0.916,215,1.057,216,0.942,217,1.057,218,0.916,219,1.057,220,0.916,221,1.057,222,0.916,223,1.057,224,0.916,225,1.057,226,0.916,227,0.916,228,1.057,229,1.796,230,2.283,231,1.057,232,0.916,233,1.057,234,0.916,235,0.916,236,1.057,237,0.916,238,1.057,239,0.916,240,1.249,241,0.916,242,0.916,243,1.057,244,0.916,245,1.057,246,0.916,247,0.998,248,1.057,249,1.057,250,0.004,251,0.006,252,0.004,326,2.911,348,1.78,405,5.158,407,5.41,429,2.531,582,1.78,583,2.07,588,1.96,589,1.571,590,2.197,591,1.96,600,2.911,601,2.197,603,2.35,604,1.96,605,1.96,606,1.96,607,2.35,608,1.96,610,1.96,634,2.77,654,2.895,811,3.263,907,1.78,1334,2.07,1576,5.787,1577,2.799,1578,4.156,1579,5.648,1580,4.735,1581,3.892,1582,5.648,1583,6.678,1584,4.163,1585,6.678,1586,4.958,1587,5.648,1588,6.678,1589,6.251,1590,3.188,1591,4.156,1592,3.188,1593,3.188,1594,3.188,1595,3.188,1596,3.188,1597,3.188,1598,3.188,1599,3.188,1600,3.188,1601,3.188,1602,3.188,1603,2.799,1604,3.188,1605,2.35,1606,3.188,1607,2.35,1608,3.188,1609,2.35,1610,3.188,1611,3.188,1612,3.188,1613,4.735,1614,3.188,1615,3.188,1616,4.735,1617,3.188,1618,3.188,1619,2.799,1620,3.188,1621,2.35,1622,3.188,1623,2.542,1624,3.188,1625,3.188,1626,3.188,1627,3.188,1628,4.735,1629,3.188,1630,3.188,1631,3.188,1632,3.188,1633,3.188,1634,3.188,1635,3.188,1636,3.188,1637,3.188]],["title/modules/PaymentReminderPageModule.html",[253,0.669,1638,3.107]],["body/modules/PaymentReminderPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,229,2.402,230,2.033,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,405,4.24,407,3.964,1576,4.24,1638,6.306,1639,5.049,1640,5.049,1641,5.049,1642,5.762,1643,5.752,1644,5.049]],["title/modules/PaymentReminderPageRoutingModule.html",[253,0.669,1642,2.904]],["body/modules/PaymentReminderPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,229,2.129,230,1.783,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,405,4.576,407,4.278,1576,4.576,1642,5.108,1644,5.449]],["title/components/PrivacyPage.html",[0,0.276,232,1.211]],["body/components/PrivacyPage.html",[0,0.301,1,0.639,2,1.18,3,0.044,4,0.044,5,0.759,6,0.759,7,0.759,8,0.759,9,0.038,13,0.588,14,0.027,16,0.621,17,1.64,19,0.969,21,0.782,22,0.759,23,2.743,24,2.588,25,1.215,27,1.215,29,0.484,30,0.89,31,2.195,38,1.053,39,2.935,46,1.397,48,2.29,51,2.164,52,1.647,53,0.011,57,1.147,60,2.687,62,0.676,64,0.819,65,0.797,67,0.657,72,2.423,87,1.33,99,0.199,101,0.094,105,1.845,108,2.024,109,1.085,111,2.582,112,1.339,113,0.044,114,0.604,132,2.022,148,1.697,164,0.866,166,3.038,174,1.824,175,1.339,177,2.009,181,2.379,192,2.681,194,0.759,195,1.215,196,1.18,197,0.759,198,2.069,199,0.759,200,0.759,201,0.676,202,0.759,203,0.657,204,1.354,205,1.215,206,0.657,207,1.215,208,0.657,209,0.759,210,0.657,211,1.215,212,0.657,213,1.215,214,0.657,215,0.759,216,0.676,217,0.759,218,0.657,219,0.759,220,0.657,221,0.759,222,0.657,223,0.759,224,0.657,225,0.759,226,0.657,227,0.657,228,0.759,229,0.657,230,0.657,231,0.759,232,1.505,233,0.759,234,0.657,235,0.657,236,0.759,237,0.657,238,0.759,239,0.657,240,1.048,241,0.657,242,0.657,243,0.759,244,0.657,245,0.759,246,0.657,247,0.716,248,0.759,249,0.759,250,0.003,251,0.004,252,0.003,278,0.385,286,0.975,307,0.943,381,3.863,421,2.396,452,4.343,474,1.562,475,1.902,478,3.217,529,3.579,539,2.144,556,1.173,589,3.014,620,3.289,627,2.582,633,2.701,635,3.222,636,4.343,645,2.253,647,2.379,648,2.144,649,3.222,650,2.253,651,2.253,652,2.046,653,2.253,654,1.879,657,2.901,659,2.253,660,2.253,661,1.958,662,3.48,663,2.253,664,2.253,673,1.958,677,1.407,678,1.085,684,2.046,686,1.675,688,1.127,693,2.379,701,2.009,710,2.009,713,2.818,714,2.975,716,2.975,718,2.975,719,2.818,720,2.975,766,2.926,778,1.687,835,2.922,880,2.926,882,4.585,885,2.801,886,1.407,903,2.701,951,3.863,961,4.601,992,2.525,994,2.379,1020,3.654,1022,2.009,1028,2.009,1030,3.159,1124,2.701,1282,3.611,1417,4.509,1420,3.654,1421,3.863,1425,3.863,1427,4.178,1428,4.178,1429,2.701,1430,4.178,1431,4.178,1445,2.525,1460,2.922,1461,2.922,1462,2.922,1463,2.701,1464,1.687,1465,3.379,1466,3.379,1467,3.379,1468,1.687,1469,1.824,1485,3.217,1527,3.863,1645,2.009,1646,4.583,1647,3.664,1648,5.24,1649,5.24,1650,2.288,1651,2.288,1652,3.217,1653,3.217,1654,3.664,1655,2.288,1656,3.664,1657,5.24,1658,3.217,1659,3.217,1660,3.664,1661,3.217,1662,2.288,1663,2.288,1664,2.288,1665,2.288,1666,2.009,1667,2.288,1668,4.023,1669,2.009,1670,2.288,1671,2.288,1672,2.288,1673,2.288,1674,2.288,1675,2.288,1676,2.288,1677,2.288,1678,2.009,1679,4.6,1680,3.664,1681,5.24,1682,3.664,1683,5.24]],["title/modules/PrivacyPageModule.html",[253,0.669,1684,3.107]],["body/modules/PrivacyPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,232,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,381,4.276,1684,6.316,1685,5.091,1686,5.091,1687,5.091,1688,5.773,1689,5.8,1690,5.091]],["title/modules/PrivacyPageRoutingModule.html",[253,0.669,1688,2.904]],["body/modules/PrivacyPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,232,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,1688,5.128,1690,5.486,1691,6.25]],["title/components/ProfilePage.html",[0,0.276,234,1.211]],["body/components/ProfilePage.html",[0,0.308,1,0.662,2,1.214,3,0.045,4,0.045,5,0.786,6,0.786,7,0.786,8,0.786,9,0.039,13,1.871,14,0.028,15,2.857,16,0.643,17,1.179,19,0.992,21,0.81,22,0.786,23,2.756,24,2.6,25,1.25,27,1.25,29,0.501,30,0.915,31,2.122,38,1.535,39,2.969,46,1.47,48,2.325,51,1.933,52,1.784,53,0.011,57,1.468,62,0.7,63,1.214,64,1.511,65,1.02,66,1.214,67,0.681,71,2.104,72,1.367,87,1.367,99,0.218,101,0.098,105,1.882,108,2.065,109,1.124,111,1.856,113,0.045,114,0.626,116,1.553,148,1.958,164,0.712,166,2.359,194,0.786,195,1.25,196,1.214,197,0.786,198,1.879,199,0.786,200,0.786,201,0.7,202,0.786,203,0.681,204,0.7,205,1.25,206,0.681,207,1.25,208,0.681,209,0.786,210,0.681,211,1.25,212,0.681,213,1.25,214,0.681,215,0.786,216,0.7,217,0.786,218,0.681,219,0.786,220,0.681,221,0.786,222,0.681,223,0.786,224,0.681,225,0.786,226,0.681,227,0.681,228,0.786,229,0.681,230,1.347,231,0.786,232,0.681,233,0.786,234,1.535,235,0.681,236,0.786,237,0.681,238,0.786,239,0.681,240,1.068,241,0.681,242,0.681,243,0.786,244,0.681,245,0.786,246,0.681,247,0.741,248,0.786,249,0.786,250,0.003,251,0.005,252,0.003,263,1.082,278,0.399,286,1.01,297,1.215,298,1.124,307,0.977,352,2.74,360,2.446,418,2.597,421,1.723,429,1.889,438,3.045,439,1.889,474,1.606,475,1.94,534,3.684,539,1.386,557,1.457,588,1.457,589,1.856,591,1.457,592,4.983,593,1.633,597,2.317,600,1.457,604,1.457,605,2.317,606,3.287,608,3.287,609,1.633,610,1.457,620,3.331,621,4.117,622,3.307,623,4.117,626,5.718,627,2.634,628,3.307,631,3.307,633,3.94,634,3.127,635,4.157,636,4.56,637,3.94,638,4.692,639,5.934,640,4.262,641,3.307,642,3.307,643,5.121,644,4.117,645,4.39,647,2.446,648,2.204,649,3.287,650,2.317,651,2.317,652,2.104,653,2.317,654,1.932,657,1.787,659,2.317,660,2.317,661,2.014,662,1.856,663,2.317,664,2.317,665,3.307,666,5.121,668,3.307,674,2.08,677,1.457,678,1.124,679,2.104,680,1.889,681,2.08,682,3.004,683,2.104,685,3.307,686,1.723,687,1.215,693,1.538,695,2.08,697,2.08,702,2.08,703,2.08,704,2.08,711,1.215,713,2.317,714,2.446,715,3.307,716,2.446,717,3.307,718,2.446,719,2.317,720,2.446,721,3.004,722,3.004,723,1.889,724,3.004,725,2.597,726,1.889,727,3.94,728,2.08,729,1.889,730,2.08,731,2.08,732,1.747,733,2.08,734,2.08,735,2.08,736,2.777,737,2.08,738,2.08,739,2.08,766,2.985,1356,3.307,1527,1.747,1658,4.692,1661,4.692,1678,2.08,1692,2.08,1693,5.345,1694,2.369,1695,2.369,1696,2.369,1697,2.369,1698,2.369,1699,2.369,1700,2.369,1701,2.369,1702,2.369,1703,2.369,1704,2.369,1705,2.08,1706,2.369,1707,2.369,1708,2.369,1709,2.369,1710,2.369,1711,3.307]],["title/modules/ProfilePageModule.html",[253,0.669,1712,3.107]],["body/modules/ProfilePageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,234,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,352,2.973,746,4.276,1712,6.316,1713,5.091,1714,5.091,1715,5.091,1716,5.773,1717,5.8]],["title/modules/ProfilePageRoutingModule.html",[253,0.669,1716,2.904]],["body/modules/ProfilePageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,234,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,746,4.607,1716,5.128,1718,6.25]],["title/components/RegisterPage.html",[0,0.276,235,1.211]],["body/components/RegisterPage.html",[0,0.382,1,0.936,2,1.583,3,0.064,4,0.064,5,1.112,6,1.112,7,1.112,8,1.112,9,0.055,13,0.861,14,0.034,16,0.91,17,2.004,19,1.23,20,2.094,21,1.987,22,1.112,23,2.865,24,2.703,25,1.63,27,1.63,29,0.709,30,1.194,38,1.411,46,1.549,48,1.839,51,2.062,52,0.963,53,0.011,57,1.049,62,0.991,64,1.098,65,1.482,67,0.963,99,0.174,101,0.138,108,2.247,109,1.59,113,0.064,114,1.297,116,1.382,155,2.31,175,1.961,189,1.429,194,1.112,195,1.63,196,1.583,197,1.112,198,2.063,199,1.112,200,1.112,201,0.991,202,1.112,203,0.963,204,0.991,205,1.63,206,0.963,207,1.63,208,0.963,209,1.112,210,0.963,211,1.63,212,0.963,213,1.63,214,0.963,215,1.112,216,0.991,217,1.112,218,0.963,219,1.112,220,0.963,221,1.112,222,0.963,223,1.112,224,0.963,225,1.112,226,0.963,227,0.963,228,1.112,229,0.963,230,0.963,231,1.112,232,0.963,233,1.112,234,0.963,235,1.84,236,1.112,237,0.963,238,1.112,239,0.963,240,1.28,241,0.963,242,0.963,243,1.112,244,0.963,245,1.112,246,0.963,247,1.049,248,1.112,249,1.112,250,0.004,251,0.006,252,0.004,278,0.564,326,4.193,336,3.386,376,3.774,388,5.203,429,2.381,449,2.874,457,3.807,462,4.413,463,3.189,464,3.189,469,5.436,471,4.313,475,2.111,491,3.917,492,3.917,500,4.157,557,2.061,583,2.176,587,4.313,588,2.061,589,1.652,590,2.31,591,2.061,593,3.386,594,3.917,596,2.942,597,2.061,599,2.471,600,3.576,601,2.31,602,2.471,603,2.471,604,3.021,605,3.576,606,2.061,608,2.061,609,2.31,610,2.061,640,2.672,736,3.622,927,5.436,1029,2.942,1035,3.917,1081,2.471,1372,2.942,1537,4.313,1719,2.942,1720,5.816,1721,4.913,1722,5.816,1723,3.352,1724,3.352,1725,3.352,1726,4.913,1727,3.352,1728,3.352,1729,4.913,1730,3.352,1731,3.352,1732,3.352,1733,3.352,1734,3.352,1735,3.352,1736,3.352,1737,3.352,1738,6.404,1739,4.913,1740,4.913,1741,3.352,1742,3.352,1743,3.352]],["title/modules/RegisterPageModule.html",[253,0.669,1744,3.107]],["body/modules/RegisterPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,235,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,388,3.997,1744,6.316,1745,5.091,1746,5.091,1747,5.091,1748,5.773,1749,5.8,1750,5.091]],["title/modules/RegisterPageRoutingModule.html",[253,0.669,1748,2.904]],["body/modules/RegisterPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,235,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,1748,5.128,1750,5.486,1751,6.25]],["title/classes/SimpleTransaction.html",[14,0.025,1752,3.36]],["body/classes/SimpleTransaction.html",[3,0.074,4,0.074,9,0.064,13,1.408,14,0.037,15,4.009,29,0.826,30,1.332,46,1.738,51,2.177,53,0.011,63,1.258,64,0.873,65,1.738,66,1.258,68,4.328,94,2.507,99,0.117,113,0.074,132,2.419,148,2.077,240,1.619,250,0.005,251,0.007,252,0.005,286,1.665,317,2.088,330,5.477,400,3.836,429,2.618,433,3.198,527,3.779,654,4.032,661,2.93,662,2.702,873,2.88,972,3.565,1112,4.372,1191,4.813,1486,4.813,1581,5.694,1584,5.797,1586,6.903,1591,4.813,1603,3.429,1605,2.88,1607,2.88,1609,2.88,1752,4.372,1753,3.429,1754,5.483,1755,5.483,1756,5.483,1757,5.483,1758,5.483,1759,4.813,1760,4.813,1761,5.064,1762,5.483,1763,5.483,1764,5.483,1765,7.864,1766,7.864,1767,7.109,1768,5.483,1769,5.483,1770,5.483,1771,5.483,1772,3.779,1773,3.779,1774,5.483,1775,5.483,1776,5.483,1777,5.483,1778,3.906,1779,3.906,1780,3.906,1781,3.906,1782,3.906,1783,3.906,1784,3.906,1785,3.114,1786,3.429,1787,3.906,1788,3.906]],["title/classes/Statistic.html",[14,0.025,931,2.904]],["body/classes/Statistic.html",[3,0.07,4,0.07,9,0.061,13,1.351,14,0.031,15,1.97,17,1.647,19,0.779,29,0.779,30,1.278,46,1.872,53,0.011,63,1.187,64,0.824,65,1.872,66,1.187,72,3.081,87,3.081,113,0.07,114,0.973,148,1.39,170,4.35,250,0.005,251,0.006,252,0.005,286,1.571,317,1.97,355,2.393,931,3.626,947,5.028,972,4.215,1314,2.939,1789,3.235,1790,3.686,1791,6.137,1792,6.137,1793,6.137,1794,6.137,1795,6.137,1796,6.137,1797,6.137,1798,6.137,1799,6.137,1800,6.137,1801,6.137,1802,6.137,1803,6.137,1804,6.137,1805,6.137,1806,6.137,1807,6.137,1808,6.137,1809,7.747,1810,7.577,1811,6.137,1812,5.262,1813,5.262,1814,4.619,1815,3.686,1816,3.686,1817,3.686,1818,3.686,1819,3.686,1820,3.686,1821,3.686,1822,3.686,1823,3.686,1824,3.686,1825,3.686,1826,3.686,1827,3.686,1828,3.686,1829,3.686,1830,3.686,1831,3.686,1832,3.686,1833,3.686,1834,3.686,1835,3.686,1836,3.686,1837,3.686,1838,3.686,1839,3.235]],["title/components/StatisticsPage.html",[0,0.276,237,1.211]],["body/components/StatisticsPage.html",[0,0.31,1,0.668,2,1.223,3,0.046,4,0.046,5,0.793,6,0.793,7,0.793,8,0.793,9,0.039,13,1.212,14,0.028,16,0.65,17,1.477,19,0.998,20,1.618,21,1.613,22,0.793,23,2.759,24,2.603,25,1.259,27,1.259,29,0.506,30,0.922,31,1.836,38,1.091,39,2.012,46,1.556,48,2.012,51,1.876,52,1.356,53,0.011,57,1.188,62,0.707,63,1.223,64,1.201,65,1.519,66,1.223,67,0.687,72,1.95,87,1.95,99,0.209,100,1.763,101,0.099,105,1.892,106,2.1,111,1.871,113,0.046,114,0.632,116,0.986,132,1.055,138,2.799,148,1.727,170,3.074,183,2.799,189,2.291,194,1.259,195,1.259,196,1.223,197,0.793,198,1.888,199,0.793,200,0.793,201,0.707,202,0.793,203,0.687,204,0.707,205,1.259,206,0.687,207,1.259,208,0.687,209,0.793,210,0.687,211,1.259,212,0.687,213,1.259,214,0.687,215,0.793,216,0.707,217,0.793,218,0.687,219,0.793,220,0.687,221,0.793,222,0.687,223,0.793,224,0.687,225,0.793,226,0.687,227,0.687,228,0.793,229,0.687,230,0.687,231,0.793,232,0.687,233,0.793,234,0.687,235,0.687,236,0.793,237,1.544,238,0.793,239,0.687,240,1.307,241,0.687,242,0.687,243,0.793,244,0.687,245,0.793,246,0.687,247,0.749,248,0.793,249,0.793,250,0.003,251,0.005,252,0.003,278,0.403,286,1.02,307,0.986,352,1.946,355,4.05,360,1.553,421,1.736,449,3.144,474,1.618,475,1.95,539,2.761,550,2.465,553,3.333,556,3.963,597,1.471,620,2.648,634,2.221,645,2.335,648,2.221,649,4.171,650,2.335,651,3.305,652,3.001,653,2.335,654,1.946,657,3.625,659,3.305,660,2.335,661,2.029,662,1.871,663,2.335,664,3.305,677,1.471,680,1.907,682,3.027,686,1.736,687,1.226,693,1.553,711,1.226,757,4.285,759,2.799,787,2.1,821,3.027,825,3.333,929,5.954,930,4.143,933,3.333,942,5.739,959,4.285,972,3.847,984,2.1,985,3.333,990,3.333,992,2.616,993,4.717,994,2.465,996,3.333,997,3.333,1003,2.1,1075,2.1,1076,2.1,1077,2.1,1078,4.673,1079,4.673,1080,2.1,1081,1.763,1082,2.1,1083,2.1,1084,2.1,1085,2.1,1086,2.1,1087,2.1,1088,3.333,1089,2.1,1090,2.1,1091,1.907,1097,2.1,1098,2.1,1705,2.1,1773,4.039,1840,2.1,1841,4.72,1842,3.797,1843,5.861,1844,5.861,1845,3.797,1846,3.797,1847,2.392,1848,3.961,1849,3.797,1850,5.954,1851,3.797,1852,6.133,1853,5.374,1854,4.717,1855,3.797,1856,2.392,1857,3.797,1858,3.797,1859,3.797,1860,2.392,1861,3.797,1862,3.797,1863,3.797,1864,3.797,1865,3.797,1866,2.392,1867,2.392,1868,2.392,1869,2.392,1870,2.392,1871,2.392,1872,2.392,1873,2.392,1874,2.392,1875,2.392,1876,2.392,1877,2.392,1878,2.392,1879,6.783,1880,2.392,1881,2.392,1882,2.392,1883,4.72,1884,6.238,1885,2.392,1886,4.72,1887,2.392,1888,2.392,1889,2.392,1890,3.797,1891,3.797,1892,3.797,1893,3.797,1894,3.797,1895,3.797,1896,3.027]],["title/modules/StatisticsPageModule.html",[253,0.669,1897,3.107]],["body/modules/StatisticsPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,237,2.407,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,355,3.765,1897,6.316,1898,5.091,1899,5.091,1900,5.091,1901,5.773,1902,5.8,1903,5.091]],["title/modules/StatisticsPageRoutingModule.html",[253,0.669,1901,2.904]],["body/modules/StatisticsPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,237,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,1901,5.128,1903,5.486,1904,6.25]],["title/injectables/StatisticsService.html",[417,1.859,550,2.736]],["body/injectables/StatisticsService.html",[3,0.048,4,0.048,9,0.042,13,1.643,14,0.015,17,2.228,19,1.174,29,0.537,38,1.143,46,1.311,48,2.395,51,2.145,52,2.36,53,0.011,63,1.943,64,1.348,65,1.311,66,1.943,89,5.105,99,0.147,101,0.105,113,0.048,114,0.67,148,1.993,157,2.539,170,3.589,198,1.58,240,1.529,250,0.003,251,0.005,252,0.003,283,1.417,355,3.605,417,1.755,419,1.485,421,2.925,429,2.165,440,1.561,539,4.886,550,2.583,552,1.561,556,3.28,568,4.154,634,2.327,637,4.717,657,1.887,759,2.933,821,3.172,880,3.101,931,4.157,947,4.64,959,6.24,972,4.027,992,1.749,994,1.648,1002,2.228,1052,4.307,1114,5.64,1190,2.933,1314,2.024,1760,3.492,1772,4.61,1773,4.157,1814,3.492,1839,2.228,1850,7.045,1852,6.935,1854,5.616,1905,2.228,1906,3.978,1907,3.978,1908,3.978,1909,3.978,1910,3.978,1911,3.978,1912,3.978,1913,3.978,1914,7.651,1915,2.538,1916,4.428,1917,6.398,1918,5.101,1919,6.398,1920,3.978,1921,2.538,1922,3.978,1923,2.538,1924,3.978,1925,5.554,1926,2.538,1927,5.554,1928,3.978,1929,3.492,1930,4.906,1931,3.978,1932,2.538,1933,3.978,1934,3.978,1935,3.978,1936,6.689,1937,2.538,1938,2.538,1939,2.538,1940,2.538,1941,6.925,1942,2.538,1943,2.538,1944,4.809,1945,2.538,1946,6.925,1947,6.689,1948,2.538,1949,2.538,1950,2.538,1951,3.978,1952,2.538,1953,2.538,1954,2.538,1955,2.538,1956,2.538,1957,2.538,1958,2.538,1959,2.538,1960,2.538,1961,2.538,1962,2.538,1963,2.538,1964,2.538,1965,2.538,1966,2.538,1967,5.554,1968,6.689,1969,3.492,1970,3.978,1971,3.978,1972,2.538,1973,2.538,1974,2.538]],["title/classes/Transaction.html",[14,0.025,240,0.842]],["body/classes/Transaction.html",[3,0.09,4,0.09,9,0.077,14,0.028,29,0.996,30,1.514,46,1.852,53,0.011,63,1.518,64,1.054,65,1.899,66,1.518,68,3.33,113,0.09,240,1.246,250,0.006,251,0.008,252,0.006,286,2.009,317,2.519,429,2.59,433,3.451,529,4.346,654,4.15,867,5.579,947,4.568,972,3.07,1440,6.454,1581,5.579,1584,5.967,1605,3.474,1607,3.474,1609,3.474,1767,7.106,1785,3.757,1786,4.137,1975,4.137,1976,7.725,1977,7.106,1978,5.967,1979,6.232,1980,6.232,1981,4.713,1982,4.713,1983,4.713,1984,4.713,1985,4.713,1986,4.713,1987,4.713,1988,4.713,1989,4.713,1990,4.713,1991,4.713,1992,4.137,1993,4.137,1994,3.757,1995,4.137,1996,3.757]],["title/classes/Transaction-1.html",[14,0.021,240,0.701,556,1.797]],["body/classes/Transaction-1.html",[3,0.075,4,0.075,9,0.064,13,1.006,14,0.037,15,2.094,19,1.732,29,0.828,30,1.335,46,1.824,51,2.081,53,0.011,65,1.897,68,3.676,94,1.791,99,0.164,113,0.075,114,1.035,117,2.7,148,2.14,230,1.125,240,1.637,250,0.005,251,0.007,252,0.005,317,2.094,366,3.902,425,2.292,429,2.601,433,3.201,527,2.7,654,3.953,657,2.606,662,1.93,769,3.123,867,5.423,873,2.888,880,2.187,947,3.379,972,3.389,1440,5.987,1581,5.175,1584,5.535,1605,2.888,1607,2.888,1609,2.888,1759,3.439,1772,2.7,1773,2.7,1785,3.123,1977,6.591,1978,5.535,1992,3.439,1993,3.439,1994,3.123,1995,3.439,1996,3.123,1997,3.439,1998,4.05,1999,4.992,2000,6.346,2001,5.801,2002,5.57,2003,5.059,2004,3.918,2005,3.918,2006,3.918,2007,3.918,2008,3.918,2009,3.918,2010,3.918,2011,3.918,2012,3.918,2013,3.918,2014,3.918,2015,3.918,2016,3.918,2017,3.918,2018,3.918,2019,3.918,2020,3.918,2021,3.918,2022,5.494,2023,3.918,2024,3.918,2025,3.918,2026,3.123,2027,3.918,2028,3.918,2029,3.918,2030,3.439,2031,2.7,2032,3.918,2033,3.918,2034,3.918]],["title/components/TransactionCreatePage.html",[0,0.276,239,1.211]],["body/components/TransactionCreatePage.html",[0,0.285,1,0.592,2,1.109,3,0.04,4,0.04,5,0.703,6,0.703,7,0.703,8,0.703,9,0.035,14,0.02,16,0.575,17,2.289,19,1.371,20,1.468,21,1.486,22,0.703,23,2.714,24,2.56,25,1.142,27,1.142,29,0.448,30,0.837,31,2.127,33,2.063,38,0.989,39,1.855,46,1.635,48,2.428,51,1.77,52,1.697,53,0.011,57,1.948,60,1.765,62,0.626,64,0.77,65,1.41,67,0.609,68,3.584,72,2.259,87,2.259,94,1.989,99,0.218,101,0.087,104,0.448,105,1.764,107,1.005,108,1.936,109,1.005,110,1.239,111,2.469,112,1.239,113,0.04,114,0.559,115,0.903,119,1.086,132,2.432,148,1.713,157,1.989,164,0.4,166,0.935,189,2.136,194,0.703,195,1.142,196,1.109,197,0.703,198,1.614,199,0.703,200,0.703,201,0.626,202,0.703,203,0.609,204,0.626,205,1.142,206,0.609,207,1.142,208,0.609,209,0.703,210,0.609,211,1.142,212,0.609,213,1.142,214,0.609,215,0.703,216,0.626,217,0.703,218,0.609,219,0.703,220,0.609,221,0.703,222,0.609,223,0.703,224,0.609,225,0.703,226,0.609,227,0.609,228,0.703,229,0.609,230,0.609,231,0.703,232,0.609,233,0.703,234,0.609,235,0.609,236,0.703,237,0.609,238,0.703,239,1.439,240,1.642,241,0.609,242,0.609,243,0.703,244,0.609,245,0.703,246,0.609,247,0.663,248,0.703,249,0.703,250,0.004,251,0.004,252,0.003,278,0.357,307,0.873,339,2.325,364,4.938,366,3.081,372,3.253,400,1.183,429,1.323,472,1.689,474,1.468,475,1.819,505,3.023,506,2.745,552,1.303,582,1.923,584,2.014,589,1.044,590,1.46,591,2.117,607,2.538,620,2.469,627,2.469,630,1.562,657,1.633,661,1.84,662,2.144,673,1.84,678,1.005,684,1.923,686,1.574,687,1.086,688,1.044,689,1.239,711,1.086,727,1.562,752,4.354,774,4.063,834,3.023,875,1.689,876,3.819,877,3.023,883,1.859,884,1.859,885,2.678,886,1.303,907,1.923,947,2.675,972,1.044,994,2.824,1009,2.538,1014,3.023,1015,3.023,1031,5.185,1066,2.745,1070,3.819,1106,2.373,1124,4.063,1150,1.859,1253,2.538,1434,3.023,1445,1.46,1448,1.562,1454,4.398,1458,1.689,1459,1.562,1470,1.689,1471,1.689,1472,1.689,1473,1.689,1474,1.689,1491,1.689,1528,1.689,1619,3.819,1621,3.207,1623,2.745,1761,3.693,1772,1.46,1848,2.538,1929,1.859,1944,2.745,1998,1.562,1999,2.373,2001,2.538,2026,2.745,2030,1.859,2031,2.373,2035,3.608,2036,4.351,2037,5.01,2038,4.351,2039,4.351,2040,4.398,2041,5.01,2042,4.398,2043,2.118,2044,2.118,2045,4.709,2046,2.118,2047,2.118,2048,3.023,2049,3.023,2050,3.023,2051,3.443,2052,2.118,2053,2.118,2054,3.443,2055,3.443,2056,2.118,2057,2.118,2058,2.118,2059,2.118,2060,2.118,2061,2.118,2062,3.443,2063,2.118,2064,1.375,2065,1.689,2066,1.562,2067,2.118,2068,2.118,2069,2.118,2070,2.118,2071,2.118,2072,3.207,2073,2.118,2074,2.118,2075,2.118,2076,2.118,2077,2.118,2078,2.118,2079,2.118,2080,2.118,2081,2.118,2082,2.118,2083,1.859,2084,2.118,2085,1.859,2086,2.118,2087,2.118,2088,2.118,2089,2.118,2090,2.118,2091,2.118,2092,2.118,2093,2.118,2094,1.562,2095,2.118,2096,2.118,2097,2.745,2098,2.118,2099,2.118,2100,2.118,2101,2.118,2102,2.118,2103,2.118,2104,2.118,2105,2.118,2106,2.745,2107,1.859,2108,2.118,2109,1.859,2110,3.023,2111,1.859,2112,1.859,2113,1.859,2114,1.859,2115,1.859,2116,2.118,2117,2.118,2118,1.859,2119,2.118,2120,1.562,2121,1.689,2122,1.689,2123,1.562,2124,1.689,2125,1.689,2126,1.689,2127,1.689,2128,2.745,2129,1.689,2130,1.689,2131,3.443,2132,2.118,2133,3.023,2134,2.118,2135,2.118,2136,1.859,2137,1.859,2138,1.859,2139,1.859,2140,2.745,2141,3.443,2142,3.443,2143,3.023,2144,2.118,2145,3.023,2146,3.023,2147,2.118,2148,1.859,2149,3.023,2150,3.023,2151,3.023,2152,3.023,2153,3.023,2154,3.023,2155,3.023,2156,2.745,2157,3.023,2158,2.745,2159,3.443,2160,2.118,2161,2.118,2162,1.859]],["title/modules/TransactionCreatePageModule.html",[253,0.669,1293,2.904]],["body/modules/TransactionCreatePageModule.html",[3,0.107,4,0.107,9,0.092,14,0.033,53,0.011,99,0.248,101,0.231,104,1.184,113,0.107,239,2.507,240,1.391,250,0.007,251,0.009,252,0.007,255,0.811,256,2.057,261,2.178,262,1.752,263,1.608,265,2.242,266,1.104,267,1.104,268,2.308,269,1.803,270,2.308,271,1.803,272,2.242,273,1.803,281,2.178,339,2.992,364,3.634,915,4.914,916,4.127,1293,5.914,2035,2.655,2163,4.914,2164,4.914,2165,4.914,2166,4.914,2167,5.724]],["title/modules/TransactionCreatePageRoutingModule.html",[253,0.669,2167,2.904]],["body/modules/TransactionCreatePageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,239,2.129,240,1.241,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,339,3.317,364,4.03,916,4.576,2035,2.944,2167,5.108]],["title/components/TransactionDetailsPage.html",[0,0.276,241,1.211]],["body/components/TransactionDetailsPage.html",[0,0.278,1,0.569,2,1.075,3,0.039,4,0.039,5,0.676,6,0.676,7,0.676,8,0.676,9,0.033,13,0.857,14,0.02,16,0.553,19,0.896,20,1.422,21,1.447,22,0.676,23,2.699,24,2.546,25,1.107,27,1.107,29,0.431,30,0.811,31,2.092,33,2.009,38,0.958,39,1.806,46,1.673,48,2.752,51,1.573,52,1.9,53,0.011,57,1.815,62,0.602,63,1.075,64,1.095,65,1.673,66,1.075,67,0.585,68,3.535,72,1.211,78,2.299,87,1.211,94,1.525,99,0.208,101,0.084,104,0.431,105,1.724,107,0.967,108,1.891,109,0.967,111,2.412,112,1.192,113,0.039,114,0.538,115,0.869,119,1.045,123,1.404,132,2.16,148,1.797,157,3.252,164,0.385,166,0.899,189,2.087,194,0.676,195,1.107,196,1.075,197,0.676,198,1.577,199,0.676,200,0.676,201,0.602,202,0.676,203,0.585,204,0.602,205,1.107,206,0.585,207,1.107,208,0.585,209,0.676,210,0.585,211,1.107,212,0.585,213,1.107,214,0.585,215,0.676,216,0.602,217,0.676,218,0.585,219,0.676,220,0.585,221,0.676,222,0.585,223,0.676,224,0.585,225,0.676,226,0.585,227,0.585,228,0.676,229,0.585,230,1.406,231,0.676,232,0.585,233,0.676,234,0.585,235,0.585,236,0.676,237,0.585,238,0.676,239,0.585,240,1.666,241,1.406,242,0.585,243,0.676,244,0.585,245,0.676,246,0.585,247,0.638,248,0.676,249,0.676,250,0.004,251,0.004,252,0.002,263,0.585,278,0.343,297,1.045,298,0.967,307,0.84,348,2.365,366,1.253,370,5.348,400,1.138,429,2.235,433,0.869,452,3.929,472,1.625,474,1.422,475,1.777,499,1.502,513,2.919,552,1.253,582,1.863,584,1.952,627,2.412,648,1.952,662,1.004,673,1.783,678,0.967,679,1.863,683,1.863,684,1.863,686,1.525,687,1.045,688,1.004,689,1.192,711,1.045,907,1.863,909,2.66,917,1.625,919,3.718,920,2.929,948,3.904,965,1.789,971,1.789,972,1.644,977,1.789,978,1.789,980,1.789,981,1.789,1009,2.459,1020,1.625,1026,1.625,1106,2.299,1112,2.66,1113,2.929,1114,2.459,1282,4.404,1448,1.502,1458,1.625,1459,1.502,1470,1.625,1471,1.625,1472,1.625,1473,1.625,1474,1.625,1491,1.625,1516,3.718,1578,2.929,1621,2.459,1623,2.66,1669,2.929,1761,4.276,1772,1.404,1773,2.299,1969,1.789,1978,4.514,1998,1.502,1999,2.919,2026,2.66,2031,3.722,2035,3.681,2042,4.298,2066,1.502,2072,1.502,2094,4.276,2120,1.502,2123,2.459,2136,1.789,2137,2.929,2138,1.789,2139,1.789,2143,2.929,2145,1.789,2146,1.789,2149,2.929,2150,2.929,2151,1.789,2152,1.789,2153,1.789,2154,1.789,2155,1.789,2168,4.236,2169,4.236,2170,4.236,2171,4.236,2172,4.236,2173,4.896,2174,3.337,2175,3.337,2176,4.896,2177,4.896,2178,2.038,2179,3.337,2180,6.805,2181,2.038,2182,3.337,2183,2.038,2184,4.896,2185,4.896,2186,4.896,2187,4.896,2188,3.337,2189,2.038,2190,2.038,2191,2.038,2192,3.337,2193,2.038,2194,3.337,2195,4.896,2196,2.038,2197,3.337,2198,4.236,2199,2.66,2200,2.038,2201,2.038,2202,2.038,2203,2.038,2204,2.038,2205,3.337,2206,2.038,2207,2.038,2208,2.038,2209,2.038,2210,2.038,2211,2.038,2212,1.789,2213,3.337,2214,2.038,2215,2.038,2216,2.038,2217,2.038,2218,2.038,2219,2.038,2220,2.038,2221,3.337,2222,3.337,2223,2.038,2224,2.038,2225,3.337,2226,2.038,2227,2.038,2228,2.038,2229,2.038,2230,2.038,2231,3.337,2232,2.038,2233,2.038,2234,2.038,2235,2.038,2236,2.038,2237,2.038,2238,2.038,2239,5.401,2240,2.038,2241,2.038,2242,3.337,2243,3.337,2244,3.337,2245,2.038,2246,2.038,2247,3.337,2248,3.337,2249,3.337,2250,3.337,2251,3.337,2252,3.337,2253,4.896,2254,3.337]],["title/modules/TransactionDetailsPageModule.html",[253,0.669,2255,3.107]],["body/modules/TransactionDetailsPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,240,1.415,241,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,348,3.211,370,3.964,1121,5.049,1122,4.24,2035,2.728,2255,6.306,2256,5.049,2257,5.049,2258,5.049,2259,5.762]],["title/modules/TransactionDetailsPageRoutingModule.html",[253,0.669,2259,2.904]],["body/modules/TransactionDetailsPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,240,1.241,241,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,348,3.466,370,4.278,1122,4.576,2035,2.944,2259,5.108]],["title/components/TransactionParticipantsPage.html",[0,0.276,242,1.211]],["body/components/TransactionParticipantsPage.html",[0,0.346,1,0.793,2,1.398,3,0.054,4,0.054,5,0.942,6,0.942,7,0.942,8,0.942,9,0.047,14,0.026,16,0.772,17,1.845,19,1.114,20,1.85,21,1.8,22,0.942,23,2.817,24,2.657,25,1.44,27,1.44,29,0.601,30,1.055,31,1.8,38,1.247,46,1.601,48,2.507,50,2.818,51,1.892,52,1.694,53,0.011,57,1.845,62,0.84,64,0.97,65,1.456,67,0.816,68,3.395,72,1.912,87,1.912,94,2.696,99,0.208,101,0.117,107,1.347,111,2.906,112,1.662,113,0.054,114,0.75,115,1.211,132,1.254,148,1.557,189,2.514,194,0.942,195,1.44,196,1.398,197,0.942,198,1.9,199,0.942,200,0.942,201,0.84,202,0.942,203,0.816,204,0.84,205,1.44,206,0.816,207,1.44,208,0.816,209,0.942,210,0.816,211,1.44,212,0.816,213,1.44,214,0.816,215,0.942,216,0.84,217,0.942,218,0.816,219,0.942,220,0.816,221,0.942,222,0.816,223,0.942,224,0.816,225,0.942,226,0.816,227,0.816,228,0.942,229,0.816,230,0.816,231,0.942,232,0.816,233,0.942,234,0.816,235,0.816,236,0.942,237,0.816,238,0.942,239,0.816,240,1.675,241,0.816,242,1.694,243,0.942,244,0.816,245,0.942,246,0.816,247,0.889,248,0.942,249,0.942,250,0.003,251,0.005,252,0.003,278,0.478,297,1.456,298,1.347,366,4.419,367,5.178,372,4.124,421,1.985,425,2.539,475,2.14,506,3.461,513,1.958,539,1.662,552,1.747,620,1.4,630,3.2,673,2.32,679,2.424,683,2.424,684,2.424,811,1.958,972,1.4,1066,2.265,1253,3.2,1848,3.2,1918,2.265,1999,2.991,2001,3.2,2002,4.624,2003,2.265,2031,2.991,2035,3.564,2040,5.177,2045,3.461,2048,3.81,2064,1.844,2065,2.265,2066,2.094,2072,2.094,2083,3.81,2085,3.81,2094,2.094,2097,2.265,2106,2.265,2109,2.494,2110,3.81,2111,2.494,2112,2.494,2113,2.494,2114,2.494,2115,2.494,2120,2.094,2121,2.265,2122,2.265,2123,3.883,2124,2.265,2125,2.265,2126,2.265,2127,2.265,2128,3.461,2129,2.265,2130,2.265,2133,2.494,2156,3.461,2212,2.494,2260,2.494,2261,5.268,2262,4.341,2263,5.268,2264,5.268,2265,5.177,2266,5.898,2267,2.841,2268,4.341,2269,4.341,2270,2.841,2271,4.341,2272,4.341,2273,4.341,2274,4.341,2275,2.841,2276,2.841,2277,4.341,2278,4.341,2279,2.841,2280,2.841,2281,2.841,2282,2.841,2283,2.841,2284,2.841,2285,5.268,2286,4.341,2287,2.841,2288,2.494,2289,2.841,2290,5.268,2291,5.268,2292,2.841,2293,2.841,2294,2.841,2295,2.841,2296,2.841,2297,2.841,2298,2.841,2299,4.341,2300,3.81]],["title/modules/TransactionParticipantsPageModule.html",[253,0.669,2301,3.107]],["body/modules/TransactionParticipantsPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,240,1.415,242,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,366,3.537,367,3.964,2035,2.728,2301,6.306,2302,5.049,2303,5.049,2304,5.049,2305,5.762,2306,5.752,2307,5.049]],["title/modules/TransactionParticipantsPageRoutingModule.html",[253,0.669,2305,2.904]],["body/modules/TransactionParticipantsPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,240,1.241,242,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,366,3.817,367,4.278,2035,2.944,2305,5.108,2307,5.449]],["title/components/TransactionStakesPage.html",[0,0.276,244,1.211]],["body/components/TransactionStakesPage.html",[0,0.373,1,0.901,2,1.538,3,0.061,4,0.061,5,1.07,6,1.07,7,1.07,8,1.07,9,0.053,14,0.028,16,0.876,17,2.199,19,1.202,20,2.036,21,1.943,22,1.07,23,2.854,24,2.693,25,1.584,27,1.584,29,0.682,30,1.16,31,1.102,38,1.372,46,1.459,48,2.353,52,1.634,53,0.011,57,1.494,60,2.448,62,0.953,64,1.068,65,1.038,67,0.927,72,1.171,87,1.171,94,2.184,99,0.21,101,0.133,111,3.097,112,1.887,113,0.061,114,0.852,115,1.375,116,1.33,148,1.261,157,1.475,170,2.353,189,2.68,194,1.07,195,1.584,196,1.538,197,1.07,198,2.025,199,1.07,200,1.07,201,0.953,202,1.07,203,0.927,204,0.953,205,1.584,206,0.927,207,1.584,208,0.927,209,1.07,210,0.927,211,1.584,212,0.927,213,1.584,214,0.927,215,1.07,216,0.953,217,1.07,218,0.927,219,1.07,220,0.927,221,1.07,222,0.927,223,1.07,224,0.927,225,1.07,226,0.927,227,0.927,228,1.07,229,0.927,230,0.927,231,1.07,232,0.927,233,1.07,234,0.927,235,0.927,236,1.07,237,0.927,238,1.07,239,0.927,240,1.695,241,0.927,242,0.927,243,1.07,244,1.806,245,1.07,246,0.927,247,1.009,248,1.07,249,1.07,250,0.004,251,0.006,252,0.004,278,0.543,297,1.654,298,1.53,372,3.692,373,4.843,400,1.801,475,2.282,501,2.572,513,2.223,552,1.984,599,4.634,679,2.667,683,1.801,752,4.947,774,4.634,972,1.589,1114,3.521,1334,2.094,1528,2.572,1581,3.291,1621,2.378,1761,3.521,1848,3.521,1998,2.378,1999,3.291,2001,3.521,2031,3.291,2035,3.333,2045,3.808,2050,4.192,2064,2.094,2065,2.572,2066,2.378,2072,2.378,2094,2.378,2097,2.572,2106,3.808,2107,2.831,2118,2.831,2120,2.378,2121,2.572,2122,2.572,2123,2.378,2124,2.572,2125,2.572,2126,2.572,2127,2.572,2128,3.808,2129,2.572,2130,2.572,2148,2.831,2158,3.808,2162,2.831,2265,5.518,2288,2.831,2300,5.518,2308,2.831,2309,5.687,2310,4.776,2311,7.028,2312,3.226,2313,4.776,2314,4.776,2315,3.226,2316,3.226,2317,3.226,2318,3.226,2319,3.226,2320,3.226,2321,3.226,2322,3.226,2323,3.226,2324,4.776,2325,3.226,2326,3.226,2327,3.226,2328,4.776,2329,3.226,2330,3.226,2331,3.226,2332,3.226,2333,4.192,2334,4.776,2335,4.776,2336,4.192]],["title/modules/TransactionStakesPageModule.html",[253,0.669,2337,3.107]],["body/modules/TransactionStakesPageModule.html",[3,0.11,4,0.11,9,0.094,14,0.034,53,0.011,99,0.25,101,0.237,104,1.216,113,0.11,240,1.415,244,2.402,250,0.007,251,0.009,252,0.007,255,0.833,256,2.091,261,2.214,262,1.8,263,1.652,265,2.279,266,1.123,267,1.123,268,2.347,269,1.853,270,2.347,271,1.853,272,2.279,273,1.853,372,3.734,373,3.964,2035,2.728,2337,6.306,2338,5.049,2339,5.049,2340,5.049,2341,5.762,2342,5.752,2343,5.049]],["title/modules/TransactionStakesPageRoutingModule.html",[253,0.669,2341,2.904]],["body/modules/TransactionStakesPageRoutingModule.html",[0,0.407,3,0.118,4,0.118,9,0.102,14,0.036,53,0.011,99,0.237,101,0.256,113,0.118,164,1.173,240,1.241,244,2.129,250,0.008,251,0.009,252,0.008,255,0.899,266,0.985,267,1.176,275,2,276,2.342,277,2.387,278,1.045,279,2,280,2.059,281,1.942,372,4.03,373,4.278,2035,2.944,2341,5.108,2343,5.449]],["title/classes/TransactionTracker.html",[14,0.025,2064,2.736]],["body/classes/TransactionTracker.html",[3,0.083,4,0.083,9,0.072,13,1.519,14,0.039,15,3.161,29,0.922,30,1.437,46,1.756,51,1.993,53,0.011,63,1.405,64,0.975,65,1.8,66,1.405,99,0.177,113,0.083,148,2.049,240,1.719,250,0.005,251,0.007,252,0.005,286,1.859,317,2.33,339,3.161,429,1.799,433,2.862,539,4.211,657,2.806,867,5.704,873,3.214,880,4.333,947,5.342,950,6.812,972,3.708,1918,4.716,1944,4.716,1978,6.101,1994,3.476,1996,3.476,2049,5.192,2064,4.673,2344,3.827,2345,5.915,2346,8.076,2347,8.076,2348,8.076,2349,7.761,2350,5.915,2351,5.915,2352,5.915,2353,5.915,2354,5.915,2355,4.36,2356,4.36,2357,4.36,2358,4.36,2359,4.36,2360,4.36,2361,4.36,2362,4.36,2363,4.36,2364,4.36,2365,4.36]],["title/components/TutorialPage.html",[0,0.276,246,1.211]],["body/components/TutorialPage.html",[0,0.358,1,0.841,2,1.461,3,0.057,4,0.057,5,0.998,6,0.998,7,0.998,8,0.998,9,0.049,13,0.773,14,0.032,16,0.817,17,1.419,19,1.154,20,1.933,21,1.864,22,0.998,23,2.834,24,2.698,25,1.504,27,1.504,53,0.011,62,0.889,64,1.014,67,0.865,99,0.135,101,0.124,113,0.057,114,1.198,148,0.795,181,2.944,189,1.283,190,3.343,194,0.998,195,1.504,196,1.461,197,0.998,198,1.957,199,0.998,200,0.998,201,0.889,202,0.998,203,0.865,204,0.889,205,1.504,206,0.865,207,1.504,208,0.865,209,0.998,210,0.865,211,1.504,212,0.865,213,1.504,214,0.865,215,0.998,216,0.889,217,0.998,218,0.865,219,0.998,220,0.865,221,0.998,222,0.865,223,0.998,224,0.865,225,0.998,226,0.865,227,0.865,228,0.998,229,0.865,230,0.865,231,0.998,232,0.865,233,0.998,234,0.865,235,0.865,236,0.998,237,0.865,238,0.998,239,0.865,240,1.214,241,0.865,242,0.865,243,0.998,244,0.865,245,0.998,246,1.745,247,2.484,248,0.998,249,0.998,250,0.004,251,0.006,252,0.004,278,0.507,326,2.789,388,3.125,457,2.532,475,2.205,499,5.393,502,3.981,508,3.981,556,2.325,568,1.954,583,1.954,588,1.851,725,2.074,903,3.343,907,3.824,908,4.843,994,2.944,1009,6.146,1010,3.616,1011,3.981,1012,6.421,1078,3.616,1079,3.616,1106,4.72,1334,4.446,1361,6.012,1668,3.981,1711,3.981,1896,5.46,2140,4.843,2156,3.616,2157,3.981,2366,2.642,2367,5.457,2368,4.535,2369,4.535,2370,4.535,2371,4.535,2372,6.074,2373,4.535,2374,4.535,2375,6.891,2376,6.074,2377,6.074,2378,4.535,2379,7.316,2380,6.849,2381,6.074,2382,7.85,2383,4.535,2384,6.074,2385,6.074,2386,6.849,2387,6.074,2388,4.535,2389,4.535,2390,4.535,2391,7.627,2392,4.535,2393,7.316,2394,5.46,2395,6.074,2396,4.535,2397,4.535,2398,4.535,2399,4.535,2400,4.535,2401,4.535,2402,4.535,2403,4.535,2404,6.074,2405,3.981,2406,4.535,2407,4.535,2408,4.535,2409,4.535,2410,4.535,2411,6.074,2412,6.074,2413,4.535,2414,4.535,2415,4.535,2416,4.535,2417,4.535,2418,4.535,2419,3.01]],["title/modules/TutorialPageModule.html",[253,0.669,2420,3.107]],["body/modules/TutorialPageModule.html",[3,0.11,4,0.11,9,0.095,14,0.034,53,0.011,99,0.25,101,0.239,104,1.226,113,0.11,246,2.407,247,1.815,250,0.007,251,0.009,252,0.007,255,0.84,256,2.102,261,2.226,262,1.815,263,1.666,265,2.291,266,1.128,267,1.128,268,2.359,269,1.868,270,2.359,271,1.868,272,2.291,273,1.868,2420,6.316,2421,5.091,2422,5.091,2423,5.091,2424,5.773,2425,5.8,2426,5.091]],["title/modules/TutorialPageRoutingModule.html",[253,0.669,2424,2.904]],["body/modules/TutorialPageRoutingModule.html",[0,0.41,3,0.119,4,0.119,9,0.103,14,0.037,53,0.011,99,0.237,101,0.257,113,0.119,164,1.181,246,2.138,250,0.008,251,0.009,252,0.008,255,0.905,266,0.991,267,1.18,275,2.013,276,2.348,277,2.397,278,1.052,279,2.013,280,2.073,281,1.956,2424,5.128,2426,5.486,2427,6.25]],["title/classes/User.html",[14,0.025,51,1.082]],["body/classes/User.html",[3,0.074,4,0.074,9,0.064,13,1.855,14,0.023,29,0.822,30,1.328,46,1.842,51,1.404,53,0.011,63,1.253,64,0.87,65,1.842,66,2.837,68,4.713,71,4.034,113,0.074,116,3.679,250,0.005,251,0.007,252,0.005,286,2.33,317,2.079,423,5.76,429,2.666,433,2.923,457,4.034,527,2.681,529,4.93,1567,6.341,2428,3.414,2429,7.224,2430,7.224,2431,7.224,2432,7.224,2433,7.224,2434,7.224,2435,7.224,2436,7.224,2437,7.224,2438,3.89,2439,3.89,2440,3.89,2441,3.89,2442,3.89,2443,3.89,2444,3.89,2445,3.89,2446,3.89,2447,3.89,2448,3.89,2449,3.89,2450,3.89,2451,3.89,2452,3.89,2453,3.89]],["title/injectables/UserService.html",[105,1.484,417,1.859]],["body/injectables/UserService.html",[3,0.058,4,0.058,9,0.05,13,1.837,14,0.032,16,1.249,17,0.96,29,0.972,30,1.117,31,1.886,38,1.321,46,1.6,51,2.287,52,2.201,53,0.011,57,1.919,63,2.304,64,1.599,65,1.6,66,2.304,67,1.321,71,3.424,78,3.17,94,3.364,99,0.165,101,0.126,105,1.619,107,1.455,113,0.058,114,0.81,115,1.307,148,2.024,157,3.004,164,1.241,170,1.511,250,0.004,251,0.006,252,0.004,283,1.712,305,2.113,417,2.029,419,1.794,425,2.691,426,4.4,427,3.667,428,3.667,429,2.485,431,4.889,433,3.564,435,4.068,437,3.391,440,1.886,441,3.391,442,2.445,444,2.445,445,2.445,449,2.691,452,3.394,457,4.45,466,3.17,469,5.499,556,2.358,709,2.445,721,2.445,722,2.445,759,3.391,804,3.667,806,3.391,813,4.037,815,3.667,823,4.037,828,2.692,835,2.445,864,2.692,865,2.445,953,5.499,966,4.889,967,4.52,1190,4.843,1195,4.844,1245,2.692,1246,2.692,1247,2.692,1253,3.391,1652,2.692,1653,2.692,1659,4.037,2394,2.445,2454,2.692,2455,4.6,2456,4.6,2457,4.6,2458,3.067,2459,4.6,2460,3.067,2461,4.6,2462,3.067,2463,4.6,2464,5.519,2465,4.6,2466,3.067,2467,3.067,2468,4.6,2469,3.067,2470,3.067,2471,3.067,2472,3.067,2473,3.067,2474,3.067,2475,4.6,2476,3.067,2477,3.067,2478,3.067,2479,3.067,2480,3.067,2481,3.067,2482,3.067,2483,3.067,2484,3.067,2485,3.067,2486,3.067,2487,3.067,2488,3.067,2489,3.067,2490,3.067,2491,3.067,2492,3.067,2493,3.067,2494,3.067,2495,3.067]],["title/coverage.html",[2496,5.073]],["body/coverage.html",[0,0.572,1,1.089,9,0.064,10,2.875,11,2.532,12,3.424,14,0.047,17,1.221,19,0.825,51,1.002,53,0.011,65,0.848,105,1.373,108,1.507,111,1.922,170,3.989,201,1.153,203,1.121,206,1.121,208,1.121,210,1.121,212,1.121,214,1.121,216,1.153,218,1.121,220,1.121,222,1.121,224,1.121,226,1.121,227,1.121,229,1.121,232,1.121,234,1.121,235,1.121,237,1.121,239,1.121,240,1.095,241,1.121,242,1.121,244,1.121,246,1.121,250,0.005,251,0.007,252,0.005,282,3.424,308,4.367,316,3.11,318,3.424,341,2.688,345,2.688,349,2.688,364,2.532,367,2.688,370,2.688,373,2.688,385,2.688,394,2.688,402,2.688,407,2.688,417,3.469,418,2.688,420,3.424,438,2.532,448,3.424,525,3.424,534,2.688,535,3.424,550,2.532,557,4.222,561,3.424,568,5,576,2.875,577,3.424,618,2.875,619,3.424,675,2.688,747,3.424,803,3.424,866,3.424,874,3.383,875,4.367,885,2.085,917,4.367,931,2.688,992,2.688,1123,3.424,1175,3.424,1299,3.424,1347,3.424,1391,2.875,1392,3.424,1416,3.424,1446,6.026,1500,3.424,1556,3.424,1576,2.875,1577,3.424,1645,3.424,1666,3.424,1692,3.424,1719,3.424,1752,3.11,1753,3.424,1789,3.424,1840,3.424,1905,3.424,1975,3.424,1997,3.424,2035,3.256,2064,2.532,2260,3.424,2308,3.424,2344,3.424,2366,3.424,2428,3.424,2454,3.424,2496,3.424,2497,3.901,2498,3.901,2499,3.901,2500,3.901,2501,3.901,2502,5.478,2503,3.901,2504,3.901,2505,5.478,2506,5.478,2507,3.901,2508,3.901,2509,3.901,2510,3.901,2511,3.901,2512,3.901,2513,3.901,2514,3.901,2515,3.901,2516,5.478,2517,3.901,2518,3.901,2519,3.901,2520,3.901,2521,3.901,2522,3.901,2523,3.901,2524,3.901,2525,3.901,2526,3.901,2527,3.901,2528,3.901,2529,3.901,2530,3.901,2531,3.901,2532,5.478,2533,3.901,2534,3.901,2535,3.901,2536,3.901,2537,3.901,2538,5.478,2539,3.901,2540,5.478,2541,5.478,2542,3.901,2543,3.901,2544,3.901,2545,3.901,2546,3.901,2547,3.901,2548,3.901,2549,3.901,2550,3.424,2551,3.901,2552,3.901,2553,3.901,2554,3.901,2555,3.901,2556,3.901,2557,3.901,2558,3.424,2559,6.866,2560,3.424,2561,4.808,2562,3.424,2563,3.424,2564,3.901,2565,3.901]],["title/dependencies.html",[256,1.5,2566,3.506]],["body/dependencies.html",[53,0.011,101,0.229,104,1.174,250,0.007,251,0.008,252,0.007,256,1.641,269,1.789,271,1.789,278,0.935,297,3.55,298,3.284,303,4.875,462,3.827,635,4.64,1146,5.521,1447,6.623,1448,4.094,1459,4.094,2567,8.289,2568,5.553,2569,5.553,2570,5.553,2571,5.553,2572,7.546,2573,5.553,2574,5.553,2575,5.553,2576,5.553,2577,5.553,2578,5.553,2579,5.553,2580,6.925,2581,5.553,2582,5.553,2583,5.553,2584,5.553,2585,5.553,2586,5.553,2587,5.553,2588,5.553,2589,7.546,2590,5.553,2591,5.553,2592,5.553,2593,5.553,2594,5.553,2595,5.553,2596,5.553,2597,5.553,2598,5.553,2599,5.553,2600,6.925,2601,5.553,2602,5.553,2603,5.553,2604,5.553,2605,5.553]],["title/index.html",[29,0.741,2606,3.506,2607,3.506]],["body/index.html",[19,1.51,24,2.235,53,0.009,174,5.693,179,5.693,181,3.789,183,4.303,250,0.007,251,0.009,252,0.007,499,4.303,501,4.654,907,3.259,908,5.693,1010,4.654,1013,5.124,1026,4.654,1106,4.023,1167,6.268,1334,5.009,1679,6.268,1896,5.693,1916,5.693,2140,5.693,2158,4.654,2333,6.268,2336,5.124,2375,5.124,2394,6.151,2405,5.124,2608,5.837,2609,5.837,2610,5.837,2611,5.837,2612,7.141,2613,5.837,2614,5.837,2615,5.837,2616,5.837,2617,5.837,2618,5.837,2619,5.837,2620,5.837,2621,7.716,2622,5.837,2623,5.837,2624,5.837,2625,5.837,2626,5.837,2627,5.837,2628,5.837,2629,5.837,2630,5.837,2631,5.837,2632,5.837,2633,5.837,2634,5.837,2635,5.837,2636,7.141,2637,5.837,2638,5.837]],["title/modules.html",[255,0.837]],["body/modules.html",[53,0.007,250,0.005,251,0.007,252,0.005,254,3.261,255,0.641,260,3.048,288,3.261,293,3.048,298,4.181,611,3.261,615,3.048,740,3.261,744,3.048,795,3.261,799,3.048,910,3.261,914,3.048,1116,3.261,1120,3.048,1168,3.261,1172,3.048,1288,3.261,1292,3.048,1293,3.048,1339,3.261,1343,3.048,1383,3.261,1387,3.048,1409,3.261,1413,3.048,1492,3.261,1496,3.048,1549,3.261,1553,3.048,1568,3.261,1572,3.048,1638,3.261,1642,3.048,1684,3.261,1688,3.048,1712,3.261,1716,3.048,1744,3.261,1748,3.048,1897,3.261,1901,3.048,2167,3.048,2255,3.261,2259,3.048,2301,3.261,2305,3.048,2337,3.261,2341,3.048,2420,3.261,2424,3.048,2639,8.815,2640,8.815,2641,9.001,2642,8.815,2643,8.815]],["title/overview.html",[2199,4.608]],["body/overview.html",[1,1.584,2,1.034,53,0.011,201,2.146,203,1.629,206,1.629,208,1.629,210,1.629,212,1.629,214,1.629,216,1.676,218,1.629,220,1.629,222,1.629,224,1.629,226,1.629,227,1.629,229,1.629,232,1.629,234,1.629,235,1.629,237,1.629,239,2.086,241,1.629,242,1.629,244,1.629,246,1.629,250,0.004,251,0.006,252,0.004,254,5.171,255,0.465,256,1.406,257,2.818,258,2.818,259,2.818,260,3.908,261,1.489,262,1.005,263,0.922,276,0.949,288,5.353,289,2.818,290,2.818,291,2.818,292,2.818,293,3.908,317,1.716,419,1.878,557,1.974,611,5.171,612,2.818,613,2.818,614,2.818,615,3.908,740,5.171,741,2.818,742,2.818,743,2.818,744,3.908,795,5.171,796,2.818,797,2.818,798,2.818,799,3.908,910,5.171,911,2.818,912,2.818,913,2.818,914,3.908,1116,5.171,1117,2.818,1118,2.818,1119,2.818,1120,3.908,1168,5.171,1169,2.818,1170,2.818,1171,2.818,1172,3.908,1288,5.497,1289,2.818,1290,2.818,1291,2.818,1292,3.908,1293,5.139,1339,5.171,1340,2.818,1341,2.818,1342,2.818,1343,3.908,1383,5.171,1384,2.818,1385,2.818,1386,2.818,1387,3.908,1409,5.171,1410,2.818,1411,2.818,1412,2.818,1413,3.908,1492,5.171,1493,2.818,1494,2.818,1495,2.818,1496,3.908,1549,5.171,1550,2.818,1551,2.818,1552,2.818,1553,3.908,1568,5.171,1569,2.818,1570,2.818,1571,2.818,1572,3.908,1638,5.171,1639,2.818,1640,2.818,1641,2.818,1642,3.908,1684,5.171,1685,2.818,1686,2.818,1687,2.818,1688,3.908,1712,5.171,1713,2.818,1714,2.818,1715,2.818,1716,3.908,1744,5.171,1745,2.818,1746,2.818,1747,2.818,1748,3.908,1897,5.171,1898,2.818,1899,2.818,1900,2.818,1901,3.908,2163,2.818,2164,2.818,2165,2.818,2166,2.818,2167,3.908,2199,2.56,2255,5.171,2256,2.818,2257,2.818,2258,2.818,2259,3.908,2301,5.171,2302,2.818,2303,2.818,2304,2.818,2305,3.908,2337,5.171,2338,2.818,2339,2.818,2340,2.818,2341,3.908,2420,5.171,2421,2.818,2422,2.818,2423,2.818,2424,3.908,2550,2.818,2644,3.211,2645,3.211,2646,3.211]],["title/routes.html",[276,1.708]],["body/routes.html",[53,0.01,250,0.009,251,0.01,252,0.009,276,2.053]],["title/miscellaneous/variables.html",[652,2.834,2647,3.077]],["body/miscellaneous/variables.html",[19,1.634,29,1.239,53,0.011,65,1.75,72,2.806,87,2.806,94,2.68,132,3.159,250,0.007,251,0.009,252,0.007,308,6.419,652,3.273,1050,4.674,1190,5.278,1916,6.163,2003,4.674,2558,5.146,2560,5.146,2561,5.146,2562,6.285,2563,6.285,2647,5.146,2648,7.16,2649,5.862,2650,5.862,2651,5.862,2652,5.862,2653,7.16,2654,5.862,2655,5.862,2656,5.862,2657,5.862,2658,5.862,2659,5.862,2660,5.862,2661,5.862,2662,5.862,2663,5.862,2664,5.862,2665,5.862,2666,5.862,2667,5.862,2668,5.862,2669,5.862,2670,5.862]]],"invertedIndex":[["",{"_index":53,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":170,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/PasswordPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.11.4",{"_index":2605,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2559,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2549,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2522,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2501,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2500,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2516,"title":{},"body":{"coverage.html":{}}}],["006600",{"_index":792,"title":{},"body":{"components/FriendsPage.html":{}}}],["0d0d0d",{"_index":603,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{}}}],["1",{"_index":556,"title":{"classes/Transaction-1.html":{}},"body":{"injectables/BadgeService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["1.0.1",{"_index":2597,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":2572,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2592,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2557,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2517,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":2519,"title":{},"body":{"coverage.html":{}}}],["1/23",{"_index":2518,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2521,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":561,"title":{},"body":{"injectables/BadgeService.html":{},"coverage.html":{}}}],["100",{"_index":568,"title":{},"body":{"injectables/BadgeService.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"injectables/StatisticsService.html":{},"components/TutorialPage.html":{},"coverage.html":{}}}],["1000",{"_index":572,"title":{},"body":{"injectables/BadgeService.html":{}}}],["1000).todatestring",{"_index":2101,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["10000",{"_index":1321,"title":{},"body":{"components/InvitePage.html":{}}}],["100px",{"_index":724,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["104",{"_index":1088,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["10px",{"_index":605,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["11",{"_index":2520,"title":{},"body":{"coverage.html":{}}}],["11/27",{"_index":2509,"title":{},"body":{"coverage.html":{}}}],["110px",{"_index":728,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["12.0.1",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["13/14",{"_index":2506,"title":{},"body":{"coverage.html":{}}}],["136",{"_index":1086,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["13px",{"_index":1379,"title":{},"body":{"components/LoginPage.html":{}}}],["15/30",{"_index":2515,"title":{},"body":{"coverage.html":{}}}],["160px",{"_index":1488,"title":{},"body":{"components/OptionsPage.html":{}}}],["18",{"_index":2523,"title":{},"body":{"coverage.html":{}}}],["1:429680376038:web:1ac23e75a712fea6756327",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":602,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/RegisterPage.html":{}}}],["2",{"_index":903,"title":{},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{},"components/TutorialPage.html":{}}}],["2.0.0",{"_index":2603,"title":{},"body":{"dependencies.html":{}}}],["2.3.6",{"_index":2595,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":2524,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":2502,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2542,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2556,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":598,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["20px",{"_index":609,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["237",{"_index":1085,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["24",{"_index":2100,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["25",{"_index":2550,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["27/31",{"_index":2546,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1636,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["3",{"_index":994,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TutorialPage.html":{}}}],["3.0.0",{"_index":2574,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2571,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":2588,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":2554,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2513,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2512,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2553,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":731,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["30px",{"_index":595,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/PasswordPage.html":{}}}],["33",{"_index":2555,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2538,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1666,"title":{},"body":{"components/PrivacyPage.html":{},"coverage.html":{}}}],["4.20.0",{"_index":2580,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":2539,"title":{},"body":{"coverage.html":{}}}],["4/16",{"_index":2551,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2533,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2531,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2528,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2508,"title":{},"body":{"coverage.html":{}}}],["41c23",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41c23.appspot.com",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41c23.firebaseapp.com",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":2511,"title":{},"body":{"coverage.html":{}}}],["429680376038",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":2527,"title":{},"body":{"coverage.html":{}}}],["4c8dff",{"_index":1378,"title":{},"body":{"components/LoginPage.html":{}}}],["5",{"_index":1660,"title":{},"body":{"components/PrivacyPage.html":{}}}],["5.0.2",{"_index":2590,"title":{},"body":{"dependencies.html":{}}}],["5.33.1",{"_index":2585,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":2586,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2507,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2526,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":557,"title":{},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"overview.html":{}}}],["50px",{"_index":736,"title":{},"body":{"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["55",{"_index":2525,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":1637,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["6",{"_index":992,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["6.1.5",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":2600,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2510,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":2543,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2541,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2535,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":607,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{}}}],["66",{"_index":2532,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2099,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["7.0",{"_index":2598,"title":{},"body":{"dependencies.html":{}}}],["7/19",{"_index":2552,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2504,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2537,"title":{},"body":{"coverage.html":{}}}],["74",{"_index":2646,"title":{},"body":{"overview.html":{}}}],["75",{"_index":2534,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2536,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2644,"title":{},"body":{"overview.html":{}}}],["8.0",{"_index":2599,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2503,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2548,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":2529,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2540,"title":{},"body":{"coverage.html":{}}}],["86400000",{"_index":1839,"title":{},"body":{"classes/Statistic.html":{},"injectables/StatisticsService.html":{}}}],["87",{"_index":2545,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2547,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2645,"title":{},"body":{"overview.html":{}}}],["9/11",{"_index":2530,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1491,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["92",{"_index":2505,"title":{},"body":{"coverage.html":{}}}],["abbrechen",{"_index":192,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{}}}],["absolute",{"_index":1382,"title":{},"body":{"components/LoginPage.html":{}}}],["accepted",{"_index":1999,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["acceptedentry",{"_index":2112,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["accessors",{"_index":45,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["account",{"_index":1668,"title":{},"body":{"components/PrivacyPage.html":{},"components/TutorialPage.html":{}}}],["achievements",{"_index":432,"title":{},"body":{"injectables/ArwardService.html":{}}}],["action",{"_index":761,"title":{},"body":{"components/FriendsPage.html":{}}}],["activatedroute",{"_index":673,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["actual",{"_index":841,"title":{},"body":{"injectables/FriendsService.html":{}}}],["actual_component",{"_index":249,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["add",{"_index":16,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["added",{"_index":543,"title":{},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/PasswordPage.html":{}}}],["addfriend",{"_index":625,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{}}}],["addfriend(email",{"_index":807,"title":{},"body":{"injectables/FriendsService.html":{}}}],["addfriendinput",{"_index":750,"title":{},"body":{"components/FriendsPage.html":{}}}],["addfriendsoutput",{"_index":751,"title":{},"body":{"components/FriendsPage.html":{}}}],["addmembers",{"_index":878,"title":{},"body":{"components/GroupCreatePage.html":{},"injectables/GroupService.html":{},"components/MemberViewPage.html":{}}}],["addmembers(group",{"_index":1183,"title":{},"body":{"injectables/GroupService.html":{}}}],["addmemberspage",{"_index":1,"title":{"components/AddMembersPage.html":{}},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["addmemberspagemodule",{"_index":254,"title":{"modules/AddMembersPageModule.html":{}},"body":{"modules/AddMembersPageModule.html":{},"modules.html":{},"overview.html":{}}}],["addmemberspageroutingmodule",{"_index":260,"title":{"modules/AddMembersPageRoutingModule.html":{}},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adds",{"_index":49,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/BadgeService.html":{},"components/GroupCreatePage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{}}}],["addtogroup",{"_index":1305,"title":{},"body":{"components/InvitePage.html":{}}}],["addusertogroup",{"_index":1177,"title":{},"body":{"injectables/GroupService.html":{}}}],["addusertogroup(group",{"_index":1185,"title":{},"body":{"injectables/GroupService.html":{}}}],["admin",{"_index":1408,"title":{},"body":{"components/MemberViewPage.html":{}}}],["adresse",{"_index":2392,"title":{},"body":{"components/TutorialPage.html":{}}}],["af",{"_index":686,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["afs",{"_index":441,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["afs.collection('achievement",{"_index":443,"title":{},"body":{"injectables/ArwardService.html":{}}}],["afs.collection('group",{"_index":1215,"title":{},"body":{"injectables/GroupService.html":{}}}],["afs.collection('user",{"_index":828,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["afterwards",{"_index":1444,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{}}}],["afuser",{"_index":1876,"title":{},"body":{"components/StatisticsPage.html":{}}}],["again",{"_index":1428,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["aizasyauoe",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aktuell",{"_index":1108,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["alert",{"_index":636,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alert(\"bitte",{"_index":1007,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["alert(\"gruppe",{"_index":897,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["alert(\"gruppenname",{"_index":902,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["alert(\"mind",{"_index":1406,"title":{},"body":{"components/MemberViewPage.html":{}}}],["alert(msg",{"_index":187,"title":{},"body":{"components/AddMembersPage.html":{}}}],["alert.buttons",{"_index":716,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alert.header",{"_index":714,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alert.message",{"_index":715,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["alert.ondiddismiss",{"_index":720,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alert.present",{"_index":719,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["alertcontroller",{"_index":1000,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["align",{"_index":590,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{}}}],["alle",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["allen",{"_index":2627,"title":{},"body":{"index.html":{}}}],["allocation",{"_index":536,"title":{},"body":{"injectables/BadgeService.html":{}}}],["allowediting",{"_index":1472,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["allselected",{"_index":2263,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["alltimecost",{"_index":1791,"title":{},"body":{"classes/Statistic.html":{}}}],["alltimeincome",{"_index":1792,"title":{},"body":{"classes/Statistic.html":{}}}],["alltimetotal",{"_index":1793,"title":{},"body":{"classes/Statistic.html":{}}}],["alltransactions",{"_index":921,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["already",{"_index":61,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{}}}],["alreadyfriends",{"_index":840,"title":{},"body":{"injectables/FriendsService.html":{}}}],["als",{"_index":2331,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["altes",{"_index":1531,"title":{},"body":{"components/PasswordPage.html":{}}}],["always",{"_index":1281,"title":{},"body":{"injectables/GroupService.html":{}}}],["ammount",{"_index":1968,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["amount",{"_index":1581,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionStakesPage.html":{}}}],["android",{"_index":2613,"title":{},"body":{"index.html":{}}}],["angelegte",{"_index":1895,"title":{},"body":{"components/StatisticsPage.html":{}}}],["angezeigt",{"_index":2629,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1629,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["angular/common",{"_index":269,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":101,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["angular/fire/firestore",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":271,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"dependencies.html":{}}}],["angular/router",{"_index":278,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageRoutingModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"components/TutorialPage.html":{},"modules/TutorialPageRoutingModule.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["angularfireauthmodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebaseconfig",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":437,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["angularfirestorecollection",{"_index":435,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["angularfirestoremodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["anlegen",{"_index":1107,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["anmelden",{"_index":1376,"title":{},"body":{"components/LoginPage.html":{}}}],["another",{"_index":1591,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{}}}],["anteil",{"_index":2250,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["anywhere",{"_index":1764,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["apikey",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["app.component",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":201,"title":{"components/AppComponent.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applikationen",{"_index":2610,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":288,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":316,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":293,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archievments",{"_index":655,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["archiv",{"_index":1109,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["array",{"_index":89,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{}}}],["arrays",{"_index":2269,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["arwardservice",{"_index":418,"title":{"injectables/ArwardService.html":{}},"body":{"injectables/ArwardService.html":{},"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["asked",{"_index":1505,"title":{},"body":{"components/PasswordPage.html":{}}}],["asks",{"_index":1427,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["async",{"_index":39,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["attach",{"_index":2054,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["attachment",{"_index":2195,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["auch",{"_index":2414,"title":{},"body":{"components/TutorialPage.html":{}}}],["auf",{"_index":2382,"title":{},"body":{"components/TutorialPage.html":{}}}],["aufgeteilter",{"_index":2329,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["aufteilen",{"_index":2158,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{},"index.html":{}}}],["aufzuteilen",{"_index":2378,"title":{},"body":{"components/TutorialPage.html":{}}}],["ausfüllen",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"components/TutorialPage.html":{}}}],["ausgabe",{"_index":2146,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["ausgaben",{"_index":1079,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"components/TutorialPage.html":{}}}],["ausgewählt",{"_index":2335,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["auswahl",{"_index":173,"title":{},"body":{"components/AddMembersPage.html":{}}}],["auswählen",{"_index":2156,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TutorialPage.html":{}}}],["auszeichnungen",{"_index":1683,"title":{},"body":{"components/PrivacyPage.html":{}}}],["auth",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"components/PrivacyPage.html":{}}}],["auth.service",{"_index":827,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{}}}],["auth/argument",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/email",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/invalid",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/user",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/weak",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/wrong",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdomain",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":108,"title":{"injectables/AuthService.html":{}},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/PasswordPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"coverage.html":{}}}],["authservice.currentuser",{"_index":2095,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["auto",{"_index":610,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["available",{"_index":2643,"title":{},"body":{"modules.html":{}}}],["await",{"_index":166,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["award",{"_index":438,"title":{"classes/Award.html":{}},"body":{"injectables/ArwardService.html":{},"classes/Award.html":{},"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["awards",{"_index":423,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"classes/User.html":{}}}],["awardservice",{"_index":685,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["awardspublic",{"_index":2429,"title":{},"body":{"classes/User.html":{}}}],["awardspublicfriends",{"_index":2430,"title":{},"body":{"classes/User.html":{}}}],["back",{"_index":961,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["backbtn",{"_index":1421,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["background",{"_index":1741,"title":{},"body":{"components/RegisterPage.html":{}}}],["backgroundcolor",{"_index":1083,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["badge",{"_index":642,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badgedescription",{"_index":626,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badgedescription(badgename",{"_index":631,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badgename",{"_index":644,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badges",{"_index":623,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["badgeservice",{"_index":534,"title":{"injectables/BadgeService.html":{}},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"coverage.html":{}}}],["bar",{"_index":74,"title":{},"body":{"components/AddMembersPage.html":{},"components/PaymentPage.html":{}}}],["base",{"_index":658,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["base64",{"_index":1443,"title":{},"body":{"components/OptionsPage.html":{}}}],["beenden",{"_index":2235,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["beendet",{"_index":2230,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["befreundet",{"_index":859,"title":{},"body":{"injectables/FriendsService.html":{}}}],["beige",{"_index":1742,"title":{},"body":{"components/RegisterPage.html":{}}}],["beigetretten",{"_index":1336,"title":{},"body":{"components/InvitePage.html":{}}}],["beitreten",{"_index":1338,"title":{},"body":{"components/InvitePage.html":{}}}],["beleg",{"_index":2159,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["belieben",{"_index":2408,"title":{},"body":{"components/TutorialPage.html":{}}}],["benutzername",{"_index":1739,"title":{},"body":{"components/RegisterPage.html":{}}}],["ber",{"_index":2634,"title":{},"body":{"index.html":{}}}],["berein",{"_index":1539,"title":{},"body":{"components/PasswordPage.html":{}}}],["bereits",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FriendsService.html":{},"components/InvitePage.html":{}}}],["berischt",{"_index":2633,"title":{},"body":{"index.html":{}}}],["berspringen",{"_index":2379,"title":{},"body":{"components/TutorialPage.html":{}}}],["beschreibung",{"_index":835,"title":{},"body":{"injectables/FriendsService.html":{},"components/PrivacyPage.html":{},"injectables/UserService.html":{}}}],["bestehen",{"_index":1037,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["bestätigen",{"_index":193,"title":{},"body":{"components/AddMembersPage.html":{},"components/PaymentReminderPage.html":{}}}],["bestätigt",{"_index":176,"title":{},"body":{"components/AddMembersPage.html":{}}}],["betrag",{"_index":1621,"title":{},"body":{"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["between",{"_index":1760,"title":{},"body":{"classes/SimpleTransaction.html":{},"injectables/StatisticsService.html":{}}}],["bezahlen",{"_index":2253,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["bill",{"_index":2022,"title":{},"body":{"classes/Transaction-1.html":{}}}],["bist",{"_index":1021,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["bitte",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionCreatePage.html":{}}}],["black",{"_index":1490,"title":{},"body":{"components/OptionsPage.html":{}}}],["block",{"_index":1487,"title":{},"body":{"components/OptionsPage.html":{}}}],["bodenleiste",{"_index":2400,"title":{},"body":{"components/TutorialPage.html":{}}}],["bold",{"_index":735,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["boolean",{"_index":68,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":600,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["bottom",{"_index":1380,"title":{},"body":{"components/LoginPage.html":{}}}],["break",{"_index":133,"title":{},"body":{"components/AddMembersPage.html":{}}}],["browse",{"_index":2641,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":324,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.mit",{"_index":2615,"title":{},"body":{"index.html":{}}}],["browsermodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":640,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["buttons",{"_index":1029,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/RegisterPage.html":{}}}],["calculate",{"_index":1848,"title":{},"body":{"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["calculated",{"_index":656,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["calculates",{"_index":1927,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["calculatestakes",{"_index":2040,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["calculating",{"_index":1907,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["calculation",{"_index":2080,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["calling",{"_index":1509,"title":{},"body":{"components/PasswordPage.html":{}}}],["calls",{"_index":757,"title":{},"body":{"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/StatisticsPage.html":{}}}],["came",{"_index":2088,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["camera",{"_index":1448,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"dependencies.html":{}}}],["camera.getphoto",{"_index":1470,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["cameraresulttype",{"_index":1458,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["cameraresulttype.base64",{"_index":1474,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["cancel",{"_index":1031,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{}}}],["cancelsearch",{"_index":40,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["capacitor/android",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["capacitor/camera",{"_index":1459,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"dependencies.html":{}}}],["capacitor/core",{"_index":2573,"title":{},"body":{"dependencies.html":{}}}],["capacitor/filesystem",{"_index":2575,"title":{},"body":{"dependencies.html":{}}}],["capacitor/share",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["capacitor/storage",{"_index":2578,"title":{},"body":{"dependencies.html":{}}}],["capicitor",{"_index":1449,"title":{},"body":{"components/OptionsPage.html":{}}}],["case",{"_index":1282,"title":{},"body":{"injectables/GroupService.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{}}}],["cases",{"_index":1517,"title":{},"body":{"components/PasswordPage.html":{}}}],["cash",{"_index":2431,"title":{},"body":{"classes/User.html":{}}}],["catch((error",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["center",{"_index":591,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{}}}],["certain",{"_index":1849,"title":{},"body":{"components/StatisticsPage.html":{}}}],["change",{"_index":204,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["changeawardspublicfriends",{"_index":1648,"title":{},"body":{"components/PrivacyPage.html":{}}}],["changed",{"_index":951,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["changeinputtype",{"_index":1352,"title":{},"body":{"components/LoginPage.html":{}}}],["changepassword",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(email",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepasswordpage",{"_index":203,"title":{"components/ChangePasswordPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordpagemodule",{"_index":611,"title":{"modules/ChangePasswordPageModule.html":{}},"body":{"modules/ChangePasswordPageModule.html":{},"modules.html":{},"overview.html":{}}}],["changepasswordpageroutingmodule",{"_index":615,"title":{"modules/ChangePasswordPageRoutingModule.html":{}},"body":{"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["changes",{"_index":882,"title":{},"body":{"components/GroupCreatePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["changestats",{"_index":1845,"title":{},"body":{"components/StatisticsPage.html":{}}}],["changestats(days",{"_index":1846,"title":{},"body":{"components/StatisticsPage.html":{}}}],["changing",{"_index":1189,"title":{},"body":{"injectables/GroupService.html":{}}}],["chart",{"_index":942,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["chart(this.piechart.nativeelement",{"_index":1076,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["chart.js",{"_index":2587,"title":{},"body":{"dependencies.html":{}}}],["chart.js/auto",{"_index":1003,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["check",{"_index":661,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{}}}],["checks",{"_index":60,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["checkselectedfriendscontainfriend",{"_index":41,"title":{},"body":{"components/AddMembersPage.html":{}}}],["checkselectedfriendscontainfriend(friend",{"_index":58,"title":{},"body":{"components/AddMembersPage.html":{}}}],["choose",{"_index":2277,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["chooser",{"_index":2582,"title":{},"body":{"dependencies.html":{}}}],["chose",{"_index":2284,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["class",{"_index":14,"title":{"classes/AppPage.html":{},"classes/Award.html":{},"classes/Group.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{}},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":317,"title":{},"body":{"classes/AppPage.html":{},"classes/Award.html":{},"classes/Group.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"overview.html":{}}}],["click",{"_index":641,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["clicked",{"_index":768,"title":{},"body":{"components/FriendsPage.html":{}}}],["clicking",{"_index":668,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["close",{"_index":639,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["cluster_addmemberspagemodule",{"_index":257,"title":{},"body":{"modules/AddMembersPageModule.html":{},"overview.html":{}}}],["cluster_addmemberspagemodule_declarations",{"_index":258,"title":{},"body":{"modules/AddMembersPageModule.html":{},"overview.html":{}}}],["cluster_addmemberspagemodule_imports",{"_index":259,"title":{},"body":{"modules/AddMembersPageModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_changepasswordpagemodule",{"_index":612,"title":{},"body":{"modules/ChangePasswordPageModule.html":{},"overview.html":{}}}],["cluster_changepasswordpagemodule_declarations",{"_index":613,"title":{},"body":{"modules/ChangePasswordPageModule.html":{},"overview.html":{}}}],["cluster_changepasswordpagemodule_imports",{"_index":614,"title":{},"body":{"modules/ChangePasswordPageModule.html":{},"overview.html":{}}}],["cluster_friendprofilepagemodule",{"_index":741,"title":{},"body":{"modules/FriendProfilePageModule.html":{},"overview.html":{}}}],["cluster_friendprofilepagemodule_declarations",{"_index":742,"title":{},"body":{"modules/FriendProfilePageModule.html":{},"overview.html":{}}}],["cluster_friendprofilepagemodule_imports",{"_index":743,"title":{},"body":{"modules/FriendProfilePageModule.html":{},"overview.html":{}}}],["cluster_friendspagemodule",{"_index":796,"title":{},"body":{"modules/FriendsPageModule.html":{},"overview.html":{}}}],["cluster_friendspagemodule_declarations",{"_index":797,"title":{},"body":{"modules/FriendsPageModule.html":{},"overview.html":{}}}],["cluster_friendspagemodule_imports",{"_index":798,"title":{},"body":{"modules/FriendsPageModule.html":{},"overview.html":{}}}],["cluster_groupcreatepagemodule",{"_index":911,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"overview.html":{}}}],["cluster_groupcreatepagemodule_declarations",{"_index":912,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"overview.html":{}}}],["cluster_groupcreatepagemodule_imports",{"_index":913,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"overview.html":{}}}],["cluster_groupdetailspagemodule",{"_index":1117,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"overview.html":{}}}],["cluster_groupdetailspagemodule_declarations",{"_index":1118,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"overview.html":{}}}],["cluster_groupdetailspagemodule_imports",{"_index":1119,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"overview.html":{}}}],["cluster_grouplistpagemodule",{"_index":1169,"title":{},"body":{"modules/GroupListPageModule.html":{},"overview.html":{}}}],["cluster_grouplistpagemodule_declarations",{"_index":1170,"title":{},"body":{"modules/GroupListPageModule.html":{},"overview.html":{}}}],["cluster_grouplistpagemodule_imports",{"_index":1171,"title":{},"body":{"modules/GroupListPageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":1289,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1291,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":1290,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_invitepagemodule",{"_index":1340,"title":{},"body":{"modules/InvitePageModule.html":{},"overview.html":{}}}],["cluster_invitepagemodule_declarations",{"_index":1342,"title":{},"body":{"modules/InvitePageModule.html":{},"overview.html":{}}}],["cluster_invitepagemodule_imports",{"_index":1341,"title":{},"body":{"modules/InvitePageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":1384,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1385,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_imports",{"_index":1386,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_memberviewpagemodule",{"_index":1410,"title":{},"body":{"modules/MemberViewPageModule.html":{},"overview.html":{}}}],["cluster_memberviewpagemodule_declarations",{"_index":1411,"title":{},"body":{"modules/MemberViewPageModule.html":{},"overview.html":{}}}],["cluster_memberviewpagemodule_imports",{"_index":1412,"title":{},"body":{"modules/MemberViewPageModule.html":{},"overview.html":{}}}],["cluster_optionspagemodule",{"_index":1493,"title":{},"body":{"modules/OptionsPageModule.html":{},"overview.html":{}}}],["cluster_optionspagemodule_declarations",{"_index":1495,"title":{},"body":{"modules/OptionsPageModule.html":{},"overview.html":{}}}],["cluster_optionspagemodule_imports",{"_index":1494,"title":{},"body":{"modules/OptionsPageModule.html":{},"overview.html":{}}}],["cluster_passwordpagemodule",{"_index":1550,"title":{},"body":{"modules/PasswordPageModule.html":{},"overview.html":{}}}],["cluster_passwordpagemodule_declarations",{"_index":1551,"title":{},"body":{"modules/PasswordPageModule.html":{},"overview.html":{}}}],["cluster_passwordpagemodule_imports",{"_index":1552,"title":{},"body":{"modules/PasswordPageModule.html":{},"overview.html":{}}}],["cluster_paymentpagemodule",{"_index":1569,"title":{},"body":{"modules/PaymentPageModule.html":{},"overview.html":{}}}],["cluster_paymentpagemodule_declarations",{"_index":1570,"title":{},"body":{"modules/PaymentPageModule.html":{},"overview.html":{}}}],["cluster_paymentpagemodule_imports",{"_index":1571,"title":{},"body":{"modules/PaymentPageModule.html":{},"overview.html":{}}}],["cluster_paymentreminderpagemodule",{"_index":1639,"title":{},"body":{"modules/PaymentReminderPageModule.html":{},"overview.html":{}}}],["cluster_paymentreminderpagemodule_declarations",{"_index":1641,"title":{},"body":{"modules/PaymentReminderPageModule.html":{},"overview.html":{}}}],["cluster_paymentreminderpagemodule_imports",{"_index":1640,"title":{},"body":{"modules/PaymentReminderPageModule.html":{},"overview.html":{}}}],["cluster_privacypagemodule",{"_index":1685,"title":{},"body":{"modules/PrivacyPageModule.html":{},"overview.html":{}}}],["cluster_privacypagemodule_declarations",{"_index":1686,"title":{},"body":{"modules/PrivacyPageModule.html":{},"overview.html":{}}}],["cluster_privacypagemodule_imports",{"_index":1687,"title":{},"body":{"modules/PrivacyPageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule",{"_index":1713,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":1715,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_imports",{"_index":1714,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule",{"_index":1745,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":1746,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_imports",{"_index":1747,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule",{"_index":1898,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule_declarations",{"_index":1900,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_statisticspagemodule_imports",{"_index":1899,"title":{},"body":{"modules/StatisticsPageModule.html":{},"overview.html":{}}}],["cluster_transactioncreatepagemodule",{"_index":2163,"title":{},"body":{"modules/TransactionCreatePageModule.html":{},"overview.html":{}}}],["cluster_transactioncreatepagemodule_declarations",{"_index":2166,"title":{},"body":{"modules/TransactionCreatePageModule.html":{},"overview.html":{}}}],["cluster_transactioncreatepagemodule_exports",{"_index":2165,"title":{},"body":{"modules/TransactionCreatePageModule.html":{},"overview.html":{}}}],["cluster_transactioncreatepagemodule_imports",{"_index":2164,"title":{},"body":{"modules/TransactionCreatePageModule.html":{},"overview.html":{}}}],["cluster_transactiondetailspagemodule",{"_index":2256,"title":{},"body":{"modules/TransactionDetailsPageModule.html":{},"overview.html":{}}}],["cluster_transactiondetailspagemodule_declarations",{"_index":2258,"title":{},"body":{"modules/TransactionDetailsPageModule.html":{},"overview.html":{}}}],["cluster_transactiondetailspagemodule_imports",{"_index":2257,"title":{},"body":{"modules/TransactionDetailsPageModule.html":{},"overview.html":{}}}],["cluster_transactionparticipantspagemodule",{"_index":2302,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{},"overview.html":{}}}],["cluster_transactionparticipantspagemodule_declarations",{"_index":2303,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{},"overview.html":{}}}],["cluster_transactionparticipantspagemodule_imports",{"_index":2304,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{},"overview.html":{}}}],["cluster_transactionstakespagemodule",{"_index":2338,"title":{},"body":{"modules/TransactionStakesPageModule.html":{},"overview.html":{}}}],["cluster_transactionstakespagemodule_declarations",{"_index":2339,"title":{},"body":{"modules/TransactionStakesPageModule.html":{},"overview.html":{}}}],["cluster_transactionstakespagemodule_imports",{"_index":2340,"title":{},"body":{"modules/TransactionStakesPageModule.html":{},"overview.html":{}}}],["cluster_tutorialpagemodule",{"_index":2421,"title":{},"body":{"modules/TutorialPageModule.html":{},"overview.html":{}}}],["cluster_tutorialpagemodule_declarations",{"_index":2422,"title":{},"body":{"modules/TutorialPageModule.html":{},"overview.html":{}}}],["cluster_tutorialpagemodule_imports",{"_index":2423,"title":{},"body":{"modules/TutorialPageModule.html":{},"overview.html":{}}}],["collection",{"_index":1659,"title":{},"body":{"components/PrivacyPage.html":{},"injectables/UserService.html":{}}}],["color",{"_index":790,"title":{},"body":{"components/FriendsPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{}}}],["comes",{"_index":1452,"title":{},"body":{"components/OptionsPage.html":{}}}],["commonmodule",{"_index":268,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["compat",{"_index":2601,"title":{},"body":{"dependencies.html":{}}}],["complete",{"_index":2271,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["component",{"_index":0,"title":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageRoutingModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"components/TutorialPage.html":{},"modules/TutorialPageRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":199,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["componentprops",{"_index":1269,"title":{},"body":{"injectables/GroupService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"overview.html":{}}}],["confirm('wollen",{"_index":2231,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["confirmation",{"_index":2180,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["confirms",{"_index":760,"title":{},"body":{"components/FriendsPage.html":{}}}],["console.log(error",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error.code",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error.message",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(stakeentry",{"_index":2295,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["console.log(this.transaction",{"_index":2246,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["const",{"_index":164,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"classes/Award.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"classes/Group.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"classes/Transaction.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{}}}],["constructor(gid",{"_index":1979,"title":{},"body":{"classes/Transaction.html":{}}}],["constructor(id",{"_index":527,"title":{},"body":{"classes/Award.html":{},"classes/Group.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction-1.html":{},"classes/User.html":{}}}],["constructor(originaltransaction",{"_index":2350,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["constructor(private",{"_index":115,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":583,"title":{},"body":{"components/ChangePasswordPage.html":{},"classes/Group.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/TutorialPage.html":{}}}],["constructor(startdate",{"_index":1812,"title":{},"body":{"classes/Statistic.html":{}}}],["containing",{"_index":1935,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["contains",{"_index":637,"title":{},"body":{"components/FriendProfilePage.html":{},"components/PasswordPage.html":{},"components/ProfilePage.html":{},"injectables/StatisticsService.html":{}}}],["containsuser",{"_index":1249,"title":{},"body":{"injectables/GroupService.html":{}}}],["content",{"_index":588,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TutorialPage.html":{}}}],["content')).gettext",{"_index":327,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":2562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["copy",{"_index":815,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["copy.creator",{"_index":1276,"title":{},"body":{"injectables/GroupService.html":{}}}],["copy.id",{"_index":865,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["copy.members",{"_index":1278,"title":{},"body":{"injectables/GroupService.html":{}}}],["copy.members.push(member.id",{"_index":1286,"title":{},"body":{"injectables/GroupService.html":{}}}],["copy.members.push(member.tostring",{"_index":1287,"title":{},"body":{"injectables/GroupService.html":{}}}],["copyandprepare",{"_index":804,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["copyandprepare(group",{"_index":1187,"title":{},"body":{"injectables/GroupService.html":{}}}],["copyandprepare(user",{"_index":813,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["cordova",{"_index":2589,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1512,"title":{},"body":{"components/PasswordPage.html":{}}}],["corresponding",{"_index":2085,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["cost",{"_index":1772,"title":{},"body":{"classes/SimpleTransaction.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["costs",{"_index":1967,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["coverage",{"_index":2496,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"classes/TransactionTracker.html":{}}}],["create'},{'name",{"_index":211,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["create.module",{"_index":1297,"title":{},"body":{"modules/HomePageModule.html":{}}}],["create.module').then",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["create.module.ts",{"_index":915,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"modules/TransactionCreatePageModule.html":{}}}],["create.page",{"_index":916,"title":{},"body":{"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{}}}],["create.page.html",{"_index":877,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{}}}],["create.page.scss",{"_index":876,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{}}}],["create.page.ts",{"_index":875,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{},"coverage.html":{}}}],["create.page.ts:107",{"_index":2047,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:159",{"_index":2044,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:166",{"_index":2053,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:176",{"_index":2052,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:25",{"_index":883,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{}}}],["create.page.ts:27",{"_index":2061,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:29",{"_index":884,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TransactionCreatePage.html":{}}}],["create.page.ts:31",{"_index":2059,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:33",{"_index":2056,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:35",{"_index":2063,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:37",{"_index":2058,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:39",{"_index":2060,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:40",{"_index":2057,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:42",{"_index":2046,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create.page.ts:54",{"_index":881,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["create.page.ts:63",{"_index":879,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["create.page.ts:90",{"_index":2043,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["create/group",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"coverage.html":{}}}],["create/transaction",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"coverage.html":{}}}],["created",{"_index":880,"title":{},"body":{"components/GroupCreatePage.html":{},"injectables/GroupService.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["createdate",{"_index":2346,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["creategroup",{"_index":1129,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{}}}],["creategroup(group",{"_index":1192,"title":{},"body":{"injectables/GroupService.html":{}}}],["createpaymentreminder",{"_index":1589,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["createpiechart",{"_index":933,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["createpiechart(days",{"_index":1855,"title":{},"body":{"components/StatisticsPage.html":{}}}],["creates",{"_index":634,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["createtransaction",{"_index":934,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["creating",{"_index":2272,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["creation",{"_index":2045,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["creator",{"_index":867,"title":{},"body":{"classes/Group.html":{},"injectables/GroupService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["current",{"_index":1761,"title":{},"body":{"classes/SimpleTransaction.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["currentcost",{"_index":922,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currentdate",{"_index":2036,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["currentincome",{"_index":923,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currently",{"_index":85,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{}}}],["currentstats",{"_index":924,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currenttotal",{"_index":925,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currenttransactions",{"_index":926,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["currentuser",{"_index":33,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["currentuserid",{"_index":808,"title":{},"body":{"injectables/FriendsService.html":{}}}],["currentuserparam",{"_index":1271,"title":{},"body":{"injectables/GroupService.html":{}}}],["currentview",{"_index":2168,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["curuser",{"_index":850,"title":{},"body":{"injectables/FriendsService.html":{}}}],["curuser.friends.push(u.id",{"_index":853,"title":{},"body":{"injectables/FriendsService.html":{}}}],["d",{"_index":1099,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["d.getdate",{"_index":1101,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["d.getfullyear",{"_index":1103,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["d.getmonth()+1",{"_index":1102,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["da",{"_index":178,"title":{},"body":{"components/AddMembersPage.html":{}}}],["dafür",{"_index":2395,"title":{},"body":{"components/TutorialPage.html":{}}}],["daily",{"_index":2226,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["danger",{"_index":791,"title":{},"body":{"components/FriendsPage.html":{}}}],["dann",{"_index":2387,"title":{},"body":{"components/TutorialPage.html":{}}}],["das",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionDetailsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["dass",{"_index":1025,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["data",{"_index":657,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"classes/TransactionTracker.html":{}}}],["data.base64string",{"_index":2139,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["data:image/jpeg;base64",{"_index":2138,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["data:image/png;base64",{"_index":1475,"title":{},"body":{"components/OptionsPage.html":{}}}],["database",{"_index":425,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"classes/Transaction-1.html":{},"components/TransactionParticipantsPage.html":{},"injectables/UserService.html":{}}}],["dataset",{"_index":1082,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["dataset.data",{"_index":1097,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["datasets",{"_index":1080,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["date",{"_index":947,"title":{},"body":{"components/GroupDetailsPage.html":{},"classes/Statistic.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"classes/TransactionTracker.html":{}}}],["date().getfullyear",{"_index":2062,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["date().gettime",{"_index":2098,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["date().todatestring",{"_index":2096,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["date().toisostring",{"_index":2055,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["date(item.purchasedate",{"_index":1974,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["date(new",{"_index":2097,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["date(olddate",{"_index":1100,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["date(this.duedate).tolocaledatestring",{"_index":1624,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["date(this.transaction.duedate",{"_index":2129,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["date(this.transaction.duedate).gettime",{"_index":2127,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["date(transaction.duedate",{"_index":2126,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["date(transaction.purchasedate",{"_index":1947,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["date(transactions[0].purchasedate",{"_index":1938,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["date1",{"_index":1930,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["date2",{"_index":1925,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["dateformat",{"_index":935,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["dateformat(olddate",{"_index":944,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["dateformat(transaction.purchasedate",{"_index":1111,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["daten",{"_index":1319,"title":{},"body":{"components/InvitePage.html":{}}}],["dates",{"_index":1929,"title":{},"body":{"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{}}}],["days",{"_index":1852,"title":{},"body":{"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["deactivates",{"_index":55,"title":{},"body":{"components/AddMembersPage.html":{}}}],["decided",{"_index":2075,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["declarations",{"_index":265,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["decorators",{"_index":984,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["default",{"_index":87,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["deinen",{"_index":1667,"title":{},"body":{"components/PrivacyPage.html":{}}}],["delete",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{},"injectables/UserService.html":{}}}],["delete(group",{"_index":1196,"title":{},"body":{"injectables/GroupService.html":{}}}],["delete(id",{"_index":2459,"title":{},"body":{"injectables/UserService.html":{}}}],["deletebtn",{"_index":1649,"title":{},"body":{"components/PrivacyPage.html":{}}}],["deleted",{"_index":78,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/GroupService.html":{},"components/TransactionDetailsPage.html":{},"injectables/UserService.html":{}}}],["deletememberfromgroup",{"_index":1285,"title":{},"body":{"injectables/GroupService.html":{}}}],["deletes",{"_index":953,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["deletetracker",{"_index":2173,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["deleteuserfromallgroups",{"_index":1178,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteuserfromallgroups(user",{"_index":1198,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteuserfromfriends",{"_index":2455,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserfromfriends(user",{"_index":2461,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserfromgroup",{"_index":1179,"title":{},"body":{"injectables/GroupService.html":{}}}],["deleteuserfromgroup(user",{"_index":1200,"title":{},"body":{"injectables/GroupService.html":{}}}],["deletion",{"_index":1656,"title":{},"body":{"components/PrivacyPage.html":{}}}],["dem",{"_index":2402,"title":{},"body":{"components/TutorialPage.html":{}}}],["den",{"_index":2405,"title":{},"body":{"components/TutorialPage.html":{},"index.html":{}}}],["denen",{"_index":2620,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":256,"title":{"dependencies.html":{}},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1359,"title":{},"body":{"components/LoginPage.html":{}}}],["der",{"_index":1334,"title":{},"body":{"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["descriptionpublic",{"_index":2432,"title":{},"body":{"classes/User.html":{}}}],["desired",{"_index":946,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{}}}],["details'},{'name",{"_index":213,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["details.module').then",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["details.module.ts",{"_index":1121,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"modules/TransactionDetailsPageModule.html":{}}}],["details.page",{"_index":1122,"title":{},"body":{"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{}}}],["details.page.html",{"_index":920,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.scss",{"_index":919,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts",{"_index":917,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{},"coverage.html":{}}}],["details.page.ts:123",{"_index":954,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:125",{"_index":2178,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:136",{"_index":2181,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:151",{"_index":2191,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:177",{"_index":2196,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:191",{"_index":970,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:192",{"_index":2193,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:199",{"_index":968,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:206",{"_index":943,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:221",{"_index":964,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:23",{"_index":2203,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:231",{"_index":941,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:24",{"_index":2200,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:25",{"_index":2202,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:26",{"_index":2201,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:264",{"_index":957,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:27",{"_index":981,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:28",{"_index":980,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:29",{"_index":978,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:30",{"_index":971,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:31",{"_index":977,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:315",{"_index":945,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:32",{"_index":982,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:33",{"_index":987,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:34",{"_index":999,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:35",{"_index":979,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:36",{"_index":998,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:37",{"_index":975,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:38",{"_index":976,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:39",{"_index":973,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:40",{"_index":974,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:41",{"_index":983,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:43",{"_index":986,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:55",{"_index":2190,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:77",{"_index":965,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["details.page.ts:84",{"_index":2189,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details.page.ts:93",{"_index":952,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["details.page.ts:99",{"_index":2183,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["details/group",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"coverage.html":{}}}],["details/transaction",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"coverage.html":{}}}],["detal",{"_index":2204,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["device",{"_index":1441,"title":{},"body":{"components/OptionsPage.html":{}}}],["die",{"_index":1026,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{},"index.html":{}}}],["dies",{"_index":1670,"title":{},"body":{"components/PrivacyPage.html":{}}}],["diese",{"_index":172,"title":{},"body":{"components/AddMembersPage.html":{}}}],["dieser",{"_index":2234,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["difference",{"_index":1928,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["different",{"_index":1933,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["dir",{"_index":1023,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["directive",{"_index":197,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["directives",{"_index":248,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["discarded",{"_index":1429,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["discription",{"_index":666,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["display",{"_index":1486,"title":{},"body":{"components/OptionsPage.html":{},"classes/SimpleTransaction.html":{}}}],["displayed",{"_index":763,"title":{},"body":{"components/FriendsPage.html":{}}}],["displayname",{"_index":2433,"title":{},"body":{"classes/User.html":{}}}],["displayname_currentuser",{"_index":1582,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["displayname_otheruser",{"_index":1583,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["displays",{"_index":1726,"title":{},"body":{"components/RegisterPage.html":{}}}],["distributed",{"_index":2313,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["doc",{"_index":2122,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["doc.data",{"_index":1246,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["doc.foreach(g",{"_index":1234,"title":{},"body":{"injectables/GroupService.html":{}}}],["doc.id",{"_index":1247,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["document.body.appendchild(alert",{"_index":718,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["document.body.appendchild(loading",{"_index":1322,"title":{},"body":{"components/InvitePage.html":{}}}],["document.createelement('ion",{"_index":713,"title":{},"body":{"components/FriendProfilePage.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["documentation",{"_index":2497,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["domsanitizer",{"_index":679,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["done",{"_index":1862,"title":{},"body":{"components/StatisticsPage.html":{}}}],["dort",{"_index":2390,"title":{},"body":{"components/TutorialPage.html":{}}}],["dosearch",{"_index":42,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["du",{"_index":1022,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{}}}],["due",{"_index":2024,"title":{},"body":{"classes/Transaction-1.html":{}}}],["duedate",{"_index":1584,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["dynamic",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["e2e/src/app.po.ts",{"_index":318,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":322,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":321,"title":{},"body":{"classes/AppPage.html":{}}}],["ec",{"_index":1564,"title":{},"body":{"components/PaymentPage.html":{}}}],["ec_card",{"_index":2434,"title":{},"body":{"classes/User.html":{}}}],["editing",{"_index":2274,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["eigener",{"_index":2249,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["ein",{"_index":1010,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["eine",{"_index":2394,"title":{},"body":{"components/TutorialPage.html":{},"injectables/UserService.html":{},"index.html":{}}}],["einem",{"_index":2638,"title":{},"body":{"index.html":{}}}],["einen",{"_index":1015,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{}}}],["einfach",{"_index":2374,"title":{},"body":{"components/TutorialPage.html":{}}}],["eingeben",{"_index":1532,"title":{},"body":{"components/PasswordPage.html":{}}}],["einladung",{"_index":1337,"title":{},"body":{"components/InvitePage.html":{}}}],["einmalig",{"_index":2151,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["einnahme",{"_index":2145,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["einnahmen",{"_index":1078,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"components/TutorialPage.html":{}}}],["einstellungen",{"_index":1482,"title":{},"body":{"components/OptionsPage.html":{}}}],["element",{"_index":196,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["element(by.deepcss('app",{"_index":325,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TutorialPage.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email.tolocalelowercase",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["email:string",{"_index":2472,"title":{},"body":{"injectables/UserService.html":{}}}],["entered",{"_index":1511,"title":{},"body":{"components/PasswordPage.html":{}}}],["enthalten",{"_index":901,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["entire",{"_index":1854,"title":{},"body":{"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["entry.user.id",{"_index":2216,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["entrycomponents",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["entsteht",{"_index":2631,"title":{},"body":{"index.html":{}}}],["entwicklung",{"_index":2608,"title":{},"body":{"index.html":{}}}],["environment",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["erfolgreich",{"_index":857,"title":{},"body":{"injectables/FriendsService.html":{},"components/InvitePage.html":{}}}],["ermöglicht",{"_index":2371,"title":{},"body":{"components/TutorialPage.html":{}}}],["error",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/LoginPage.html":{},"components/PasswordPage.html":{},"components/RegisterPage.html":{}}}],["error.code",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["errormessage",{"_index":927,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["errors",{"_index":752,"title":{},"body":{"components/FriendsPage.html":{},"components/PasswordPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["errors.get(\"addfriendsoutput",{"_index":793,"title":{},"body":{"components/FriendsPage.html":{}}}],["errors.get('amount",{"_index":2148,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["errors.get('group",{"_index":2144,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["errors.get('newpassword1",{"_index":1543,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get('newpassword2",{"_index":1544,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get('oldpassword",{"_index":1542,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get('purpose",{"_index":2147,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["errors.get(\\'amount",{"_index":2162,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["errors.get(\\'group",{"_index":2160,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["errors.get(\\'newpassword1",{"_index":1547,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get(\\'newpassword2",{"_index":1548,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get(\\'oldpassword",{"_index":1546,"title":{},"body":{"components/PasswordPage.html":{}}}],["errors.get(\\'purpose",{"_index":2161,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["erstelle",{"_index":2476,"title":{},"body":{"injectables/UserService.html":{}}}],["erstellen",{"_index":908,"title":{},"body":{"components/GroupCreatePage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["ersteller",{"_index":2251,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["erstellt",{"_index":2413,"title":{},"body":{"components/TutorialPage.html":{}}}],["erstellte",{"_index":2410,"title":{},"body":{"components/TutorialPage.html":{}}}],["es",{"_index":1036,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["everyone",{"_index":2030,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{}}}],["existiert",{"_index":1331,"title":{},"body":{"components/InvitePage.html":{}}}],["existing",{"_index":967,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":810,"title":{},"body":{"injectables/FriendsService.html":{}}}],["expense",{"_index":1373,"title":{},"body":{"components/LoginPage.html":{}}}],["expenses",{"_index":1916,"title":{},"body":{"injectables/StatisticsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":113,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":281,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["eye",{"_index":1367,"title":{},"body":{"components/LoginPage.html":{}}}],["f.id",{"_index":152,"title":{},"body":{"components/AddMembersPage.html":{}}}],["fair",{"_index":2157,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TutorialPage.html":{}}}],["fairlydistributedcosts",{"_index":2264,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["fairlydistributedprice",{"_index":2037,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["falsch",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordPage.html":{}}}],["false",{"_index":94,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendProfilePage.html":{},"injectables/FriendsService.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":812,"title":{},"body":{"injectables/FriendsService.html":{}}}],["fehler",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["felder",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["fertig",{"_index":2418,"title":{},"body":{"components/TutorialPage.html":{}}}],["festival",{"_index":2624,"title":{},"body":{"index.html":{}}}],["fields",{"_index":2314,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filechooser",{"_index":2591,"title":{},"body":{"dependencies.html":{}}}],["filesystem",{"_index":2596,"title":{},"body":{"dependencies.html":{}}}],["fill",{"_index":2268,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["filter",{"_index":90,"title":{},"body":{"components/AddMembersPage.html":{}}}],["filteredfriendsandmembers",{"_index":34,"title":{},"body":{"components/AddMembersPage.html":{}}}],["filteredgroups",{"_index":1127,"title":{},"body":{"components/GroupListPage.html":{}}}],["filters",{"_index":70,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["finally",{"_index":2238,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["find",{"_index":434,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{}}}],["findbyemail",{"_index":2456,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":2465,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":427,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":428,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["findgroup",{"_index":1306,"title":{},"body":{"components/InvitePage.html":{}}}],["finds",{"_index":431,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["finish",{"_index":2050,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["finished",{"_index":2000,"title":{},"body":{"classes/Transaction-1.html":{}}}],["firebase",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"components/GroupCreatePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"dependencies.html":{}}}],["firebaseconfig",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":2023,"title":{},"body":{"classes/Transaction-1.html":{}}}],["firstmsg",{"_index":1585,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["fit",{"_index":1191,"title":{},"body":{"injectables/GroupService.html":{},"classes/SimpleTransaction.html":{}}}],["flag",{"_index":2029,"title":{},"body":{"classes/Transaction-1.html":{}}}],["folgende",{"_index":180,"title":{},"body":{"components/AddMembersPage.html":{}}}],["follow",{"_index":2352,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["font",{"_index":593,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["for(const",{"_index":1235,"title":{},"body":{"injectables/GroupService.html":{}}}],["for(let",{"_index":845,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/GroupService.html":{}}}],["forgotpassword",{"_index":1377,"title":{},"body":{"components/LoginPage.html":{}}}],["format",{"_index":948,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["formatrhythm",{"_index":2174,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formatrhythm(rhythm",{"_index":2182,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formatrhythm(transaction.rhythm",{"_index":2252,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formattype",{"_index":2175,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formattype(transaction.type",{"_index":2248,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formattype(type",{"_index":2188,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["formsmodule",{"_index":270,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["formular",{"_index":2403,"title":{},"body":{"components/TutorialPage.html":{}}}],["forward",{"_index":962,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["found",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["frame",{"_index":960,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["fremde",{"_index":1680,"title":{},"body":{"components/PrivacyPage.html":{}}}],["freund",{"_index":1011,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TutorialPage.html":{}}}],["freunde",{"_index":181,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/PrivacyPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["freunden",{"_index":2377,"title":{},"body":{"components/TutorialPage.html":{}}}],["freundesliste",{"_index":2389,"title":{},"body":{"components/TutorialPage.html":{}}}],["friend",{"_index":67,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["friend.displayname",{"_index":191,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friend.displayname}\\n",{"_index":186,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friend.id",{"_index":153,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friend.tostring",{"_index":131,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendbttn",{"_index":753,"title":{},"body":{"components/FriendsPage.html":{}}}],["friendbttn(id",{"_index":764,"title":{},"body":{"components/FriendsPage.html":{}}}],["friendismember",{"_index":129,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendlist",{"_index":1658,"title":{},"body":{"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["friendprofilepage",{"_index":206,"title":{"components/FriendProfilePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["friendprofilepagemodule",{"_index":740,"title":{"modules/FriendProfilePageModule.html":{}},"body":{"modules/FriendProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["friendprofilepageroutingmodule",{"_index":744,"title":{"modules/FriendProfilePageRoutingModule.html":{}},"body":{"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["friends",{"_index":71,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AppRoutingModule.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"injectables/FriendsService.html":{},"components/ProfilePage.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["friends'},{'name",{"_index":209,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["friends.page",{"_index":801,"title":{},"body":{"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{}}}],["friends.page.html",{"_index":749,"title":{},"body":{"components/FriendsPage.html":{}}}],["friends.page.scss",{"_index":748,"title":{},"body":{"components/FriendsPage.html":{}}}],["friendsandmembers",{"_index":35,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendservice.addfriend",{"_index":758,"title":{},"body":{"components/FriendsPage.html":{}}}],["friendspage",{"_index":208,"title":{"components/FriendsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["friendspagemodule",{"_index":795,"title":{"modules/FriendsPageModule.html":{}},"body":{"modules/FriendsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["friendspageroutingmodule",{"_index":799,"title":{"modules/FriendsPageRoutingModule.html":{}},"body":{"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["friendsservice",{"_index":675,"title":{"injectables/FriendsService.html":{}},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"coverage.html":{}}}],["friendswithopentransactions",{"_index":159,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendswithopentransactions.foreach(friend",{"_index":185,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendswithopentransactions.length",{"_index":169,"title":{},"body":{"components/AddMembersPage.html":{}}}],["friendswithopentransactions.push(friend",{"_index":168,"title":{},"body":{"components/AddMembersPage.html":{}}}],["fromgroup",{"_index":1070,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{}}}],["full",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":48,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["functionality",{"_index":633,"title":{},"body":{"components/FriendProfilePage.html":{},"injectables/GroupService.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["functions",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/GroupCreatePage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/UserService.html":{}}}],["further",{"_index":2273,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["furthermore",{"_index":638,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["fälligkeitsdatum",{"_index":1623,"title":{},"body":{"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["fügen",{"_index":1008,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["fügt",{"_index":2619,"title":{},"body":{"index.html":{}}}],["für",{"_index":1679,"title":{},"body":{"components/PrivacyPage.html":{},"index.html":{}}}],["g",{"_index":1050,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"miscellaneous/variables.html":{}}}],["g.data().members",{"_index":1236,"title":{},"body":{"injectables/GroupService.html":{}}}],["g.id",{"_index":1239,"title":{},"body":{"injectables/GroupService.html":{}}}],["geben",{"_index":1014,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{}}}],["gefunden",{"_index":2142,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["gelangen",{"_index":2388,"title":{},"body":{"components/TutorialPage.html":{}}}],["geld",{"_index":2333,"title":{},"body":{"components/TransactionStakesPage.html":{},"index.html":{}}}],["gemacht",{"_index":1672,"title":{},"body":{"components/PrivacyPage.html":{}}}],["generate",{"_index":578,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["gesamt",{"_index":1893,"title":{},"body":{"components/StatisticsPage.html":{}}}],["gesamtbetrag",{"_index":2332,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["getall",{"_index":1180,"title":{},"body":{"injectables/GroupService.html":{}}}],["getallexpensesoftime",{"_index":1908,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallexpensesoftime(days",{"_index":1913,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallincomeoftime",{"_index":1909,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallincomeoftime(days",{"_index":1920,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallselfmadetransactionsoftime",{"_index":1910,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getallselfmadetransactionsoftime(userid",{"_index":1922,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getcurrentamount",{"_index":2311,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["getdays",{"_index":1911,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getdays(date1",{"_index":1924,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getgroupbyid",{"_index":1181,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupbyid(id",{"_index":1204,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupsbyuserid",{"_index":1182,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupsbyuserid(id",{"_index":1206,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroupstatistics",{"_index":1912,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getgroupstatistics(transactions",{"_index":1931,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getparagraphtext",{"_index":319,"title":{},"body":{"classes/AppPage.html":{}}}],["gets",{"_index":762,"title":{},"body":{"components/FriendsPage.html":{},"injectables/GroupService.html":{}}}],["getting",{"_index":2606,"title":{"index.html":{}},"body":{}}],["gid",{"_index":1976,"title":{},"body":{"classes/Transaction.html":{}}}],["given",{"_index":759,"title":{},"body":{"components/FriendsPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{}}}],["going",{"_index":2067,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["good",{"_index":1279,"title":{},"body":{"injectables/GroupService.html":{}}}],["graph",{"_index":2642,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":733,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["grmny",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":19,"title":{"classes/Group.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["group(\"0\",\"\",[],undefined",{"_index":1310,"title":{},"body":{"components/InvitePage.html":{}}}],["group.creator",{"_index":1230,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.creator.id",{"_index":1277,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.id",{"_index":1161,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{}}}],["group.members",{"_index":1231,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.members.foreach(m",{"_index":1240,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.members.foreach(member",{"_index":1156,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{}}}],["group.members.push(user",{"_index":1275,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.members.splice(index",{"_index":1264,"title":{},"body":{"injectables/GroupService.html":{}}}],["group.model",{"_index":2018,"title":{},"body":{"classes/Transaction-1.html":{}}}],["group.name",{"_index":1104,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{}}}],["group/add",{"_index":1213,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupchoice.name",{"_index":2141,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["groupcollection",{"_index":1176,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupcreatepage",{"_index":210,"title":{"components/GroupCreatePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["groupcreatepagemodule",{"_index":910,"title":{"modules/GroupCreatePageModule.html":{}},"body":{"modules/GroupCreatePageModule.html":{},"modules.html":{},"overview.html":{}}}],["groupcreatepageroutingmodule",{"_index":914,"title":{"modules/GroupCreatePageRoutingModule.html":{}},"body":{"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["groupdetailspage",{"_index":212,"title":{"components/GroupDetailsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["groupdetailspagemodule",{"_index":1116,"title":{"modules/GroupDetailsPageModule.html":{}},"body":{"modules/GroupDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["groupdetailspageroutingmodule",{"_index":1120,"title":{"modules/GroupDetailsPageRoutingModule.html":{}},"body":{"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["groupfound",{"_index":1304,"title":{},"body":{"components/InvitePage.html":{}}}],["groupid",{"_index":1047,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{}}}],["grouplistpage",{"_index":214,"title":{"components/GroupListPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["grouplistpagemodule",{"_index":1168,"title":{"modules/GroupListPageModule.html":{}},"body":{"modules/GroupListPageModule.html":{},"modules.html":{},"overview.html":{}}}],["grouplistpageroutingmodule",{"_index":1172,"title":{"modules/GroupListPageRoutingModule.html":{}},"body":{"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["groupname",{"_index":1586,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{}}}],["groupparam",{"_index":1270,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups",{"_index":1124,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{}}}],["groups.foreach(group",{"_index":1154,"title":{},"body":{"components/GroupListPage.html":{}}}],["groups.push(group",{"_index":1248,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups.push(this.creategroup(g.data",{"_index":1238,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups[i",{"_index":1261,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups[i].creator",{"_index":1251,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups[i].members",{"_index":1255,"title":{},"body":{"injectables/GroupService.html":{}}}],["groups[i].members[j",{"_index":1257,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupservice",{"_index":885,"title":{"injectables/GroupService.html":{}},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"coverage.html":{}}}],["groupsizegreaterone",{"_index":160,"title":{},"body":{"components/AddMembersPage.html":{}}}],["gruppe",{"_index":907,"title":{},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["gruppen",{"_index":1167,"title":{},"body":{"components/GroupListPage.html":{},"index.html":{}}}],["größer",{"_index":2330,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["haben",{"_index":1041,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["haben:\\n",{"_index":184,"title":{},"body":{"components/AddMembersPage.html":{}}}],["hallo",{"_index":1614,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["handler",{"_index":1032,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["handlesubmit",{"_index":2265,"title":{},"body":{"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["hasstake",{"_index":2169,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["header",{"_index":1019,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["height",{"_index":725,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/ProfilePage.html":{},"components/TutorialPage.html":{}}}],["helps",{"_index":2208,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["here",{"_index":660,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["hidepassword",{"_index":1381,"title":{},"body":{"components/LoginPage.html":{}}}],["hides",{"_index":56,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["hinzu",{"_index":1013,"title":{},"body":{"components/GroupDetailsPage.html":{},"index.html":{}}}],["hinzufügen",{"_index":190,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendsPage.html":{},"components/MemberViewPage.html":{},"components/TutorialPage.html":{}}}],["hinzugefügt",{"_index":858,"title":{},"body":{"injectables/FriendsService.html":{}}}],["hkywbms6a4cwqi820gixl0",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hold",{"_index":1790,"title":{},"body":{"classes/Statistic.html":{}}}],["home",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"classes/SimpleTransaction.html":{}}}],["home'},{'name",{"_index":217,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["home.page",{"_index":1295,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["homepage",{"_index":216,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["homepagemodule",{"_index":1288,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":1292,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["html",{"_index":195,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["https://bit.ly/2s904cs",{"_index":709,"title":{},"body":{"components/FriendProfilePage.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["icon",{"_index":1361,"title":{},"body":{"components/LoginPage.html":{},"components/TutorialPage.html":{}}}],["iconname",{"_index":1350,"title":{},"body":{"components/LoginPage.html":{}}}],["icons",{"_index":643,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["iconscol",{"_index":737,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["id",{"_index":433,"title":{},"body":{"injectables/ArwardService.html":{},"classes/Award.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/MemberViewPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identification",{"_index":1919,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["identifier",{"_index":2498,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":816,"title":{},"body":{"injectables/FriendsService.html":{}}}],["identify",{"_index":769,"title":{},"body":{"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Transaction-1.html":{}}}],["identisch",{"_index":1737,"title":{},"body":{"components/RegisterPage.html":{}}}],["if(!alreadyfriends",{"_index":852,"title":{},"body":{"injectables/FriendsService.html":{}}}],["if(!back",{"_index":1096,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(!transaction.finished",{"_index":1054,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(back",{"_index":1093,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(containsuser",{"_index":1259,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(creator.id",{"_index":1252,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(group",{"_index":1328,"title":{},"body":{"components/InvitePage.html":{}}}],["if(group.creator.id",{"_index":1262,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(group.members",{"_index":1155,"title":{},"body":{"components/GroupListPage.html":{}}}],["if(group.members.length",{"_index":1263,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(index",{"_index":2490,"title":{},"body":{"injectables/UserService.html":{}}}],["if(member.id",{"_index":1258,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(member.tostring",{"_index":1237,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(members",{"_index":1403,"title":{},"body":{"components/MemberViewPage.html":{}}}],["if(opentransactions",{"_index":1034,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(p.user.id",{"_index":2245,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["if(ret",{"_index":1372,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["if(this.authservice.currentuser",{"_index":2240,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["if(this.group",{"_index":1069,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.group.members",{"_index":891,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["if(this.group.members.length",{"_index":1005,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.group.name",{"_index":889,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["if(this.group.name.length",{"_index":1004,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.inputtype",{"_index":1369,"title":{},"body":{"components/LoginPage.html":{}}}],["if(this.password",{"_index":1731,"title":{},"body":{"components/RegisterPage.html":{}}}],["if(this.piechart",{"_index":1074,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(this.platform.is('desktop",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.transaction.amount",{"_index":2119,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["if(this.transaction.creator.id",{"_index":2241,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["if(this.transaction.participation.length",{"_index":2320,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["if(this.view",{"_index":1071,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["if(u",{"_index":847,"title":{},"body":{"injectables/FriendsService.html":{}}}],["if(user.id",{"_index":1228,"title":{},"body":{"injectables/GroupService.html":{}}}],["if(user1.friends[i",{"_index":863,"title":{},"body":{"injectables/FriendsService.html":{}}}],["if(user1.id",{"_index":860,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ignore",{"_index":114,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["ihnen",{"_index":2372,"title":{},"body":{"components/TutorialPage.html":{}}}],["ihre",{"_index":2404,"title":{},"body":{"components/TutorialPage.html":{}}}],["ihrem",{"_index":2383,"title":{},"body":{"components/TutorialPage.html":{}}}],["ihren",{"_index":2376,"title":{},"body":{"components/TutorialPage.html":{}}}],["ihrer",{"_index":1012,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TutorialPage.html":{}}}],["image",{"_index":526,"title":{},"body":{"classes/Award.html":{},"components/OptionsPage.html":{}}}],["image.base64string",{"_index":1476,"title":{},"body":{"components/OptionsPage.html":{}}}],["imagepicker",{"_index":2594,"title":{},"body":{"dependencies.html":{}}}],["imagepublic",{"_index":2435,"title":{},"body":{"classes/User.html":{}}}],["implements",{"_index":20,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["import",{"_index":99,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"injectables/UserService.html":{}}}],["import('./auth/change",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/login/login.module').then",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./auth/register/register.module').then",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./group/add",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./group/group",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./group/invite/invite.module').then",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./group/member",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./home/home.module').then",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./payment",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/friend",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/friends/friends.module').then",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/options/options.module').then",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/password/password.module').then",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/payment/payment.module').then",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/privacy/privacy.module').then",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile/profile.module').then",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/statistics/statistics.module').then",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./transaction/transaction",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tutorial/tutorial.module').then",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":659,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["imports",{"_index":266,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["income",{"_index":1773,"title":{},"body":{"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionDetailsPage.html":{}}}],["incomes",{"_index":1858,"title":{},"body":{"components/StatisticsPage.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AddMembersPage.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["individually",{"_index":2071,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["indiviudally",{"_index":2076,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["information",{"_index":648,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["initialization",{"_index":1863,"title":{},"body":{"components/StatisticsPage.html":{}}}],["initialized",{"_index":1861,"title":{},"body":{"components/StatisticsPage.html":{}}}],["initializes",{"_index":1507,"title":{},"body":{"components/PasswordPage.html":{}}}],["injectable",{"_index":417,"title":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":419,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":599,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TransactionStakesPage.html":{}}}],["inputfield",{"_index":756,"title":{},"body":{"components/FriendsPage.html":{}}}],["inputs",{"_index":2051,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["inputtype",{"_index":1351,"title":{},"body":{"components/LoginPage.html":{}}}],["inserted",{"_index":1519,"title":{},"body":{"components/PasswordPage.html":{}}}],["insgesamt",{"_index":988,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["intern",{"_index":2186,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["invite",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{}}}],["invite'},{'name",{"_index":219,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["invite.page",{"_index":1345,"title":{},"body":{"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{}}}],["invite.page.html",{"_index":1303,"title":{},"body":{"components/InvitePage.html":{}}}],["invite.page.scss",{"_index":1302,"title":{},"body":{"components/InvitePage.html":{}}}],["invitepage",{"_index":218,"title":{"components/InvitePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["invitepagemodule",{"_index":1339,"title":{"modules/InvitePageModule.html":{}},"body":{"modules/InvitePageModule.html":{},"modules.html":{},"overview.html":{}}}],["invitepageroutingmodule",{"_index":1343,"title":{"modules/InvitePageRoutingModule.html":{}},"body":{"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["involved",{"_index":2211,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["ion",{"_index":326,"title":{},"body":{"classes/AppPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendsPage.html":{},"components/LoginPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/TutorialPage.html":{}}}],["ionic",{"_index":635,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":104,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":272,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["ionicmodule.forroot",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["ionsearchbar",{"_index":82,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["ionviewdidleave",{"_index":1164,"title":{},"body":{"components/GroupListPage.html":{}}}],["ionviewwillenter",{"_index":627,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["ios",{"_index":2614,"title":{},"body":{"index.html":{}}}],["isfriend",{"_index":624,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["isfriends",{"_index":805,"title":{},"body":{"injectables/FriendsService.html":{}}}],["isfriends(user1",{"_index":818,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ist",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionStakesPage.html":{},"index.html":{}}}],["it's",{"_index":1755,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["item.creator.id",{"_index":1973,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["item.displayname",{"_index":794,"title":{},"body":{"components/FriendsPage.html":{}}}],["item2",{"_index":694,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["j",{"_index":1254,"title":{},"body":{"injectables/GroupService.html":{}}}],["ja",{"_index":1465,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["jahr",{"_index":990,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["jey1ddqvhv9minknpocc",{"_index":2478,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":1300,"title":{},"body":{"components/InvitePage.html":{}}}],["json.parse(localstorage.getitem('otheruser",{"_index":2214,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["json.parse(route.snapshot.parammap.get('fairlydistributedprice",{"_index":2287,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["json.stringify(this.fairlydistributedprice",{"_index":2134,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["json.stringify(this.user",{"_index":1461,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["json.stringify(this.userold",{"_index":1462,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["justify",{"_index":739,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["jährlich",{"_index":2155,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["kann",{"_index":174,"title":{},"body":{"components/AddMembersPage.html":{},"components/PrivacyPage.html":{},"index.html":{}}}],["karte",{"_index":1565,"title":{},"body":{"components/PaymentPage.html":{}}}],["keine",{"_index":834,"title":{},"body":{"injectables/FriendsService.html":{},"components/TransactionCreatePage.html":{}}}],["klicken",{"_index":2386,"title":{},"body":{"components/TutorialPage.html":{}}}],["kreditcard",{"_index":2436,"title":{},"body":{"classes/User.html":{}}}],["kreditkarte",{"_index":1566,"title":{},"body":{"components/PaymentPage.html":{}}}],["können",{"_index":2391,"title":{},"body":{"components/TutorialPage.html":{}}}],["label",{"_index":1081,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{}}}],["labels",{"_index":1077,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["lade",{"_index":1318,"title":{},"body":{"components/InvitePage.html":{}}}],["lang",{"_index":905,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["last",{"_index":1944,"title":{},"body":{"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"classes/TransactionTracker.html":{}}}],["lastdate",{"_index":2347,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["lastmonthcost",{"_index":1794,"title":{},"body":{"classes/Statistic.html":{}}}],["lastmonthincome",{"_index":1795,"title":{},"body":{"classes/Statistic.html":{}}}],["lastmonthtotal",{"_index":1796,"title":{},"body":{"classes/Statistic.html":{}}}],["lastsixmonthscost",{"_index":1797,"title":{},"body":{"classes/Statistic.html":{}}}],["lastsixmonthsincome",{"_index":1798,"title":{},"body":{"classes/Statistic.html":{}}}],["lastsixmonthstotal",{"_index":1799,"title":{},"body":{"classes/Statistic.html":{}}}],["lastthreemonthscost",{"_index":1800,"title":{},"body":{"classes/Statistic.html":{}}}],["lastthreemonthsincome",{"_index":1801,"title":{},"body":{"classes/Statistic.html":{}}}],["lastthreemonthstotal",{"_index":1802,"title":{},"body":{"classes/Statistic.html":{}}}],["lastweekcost",{"_index":1803,"title":{},"body":{"classes/Statistic.html":{}}}],["lastweekincome",{"_index":1804,"title":{},"body":{"classes/Statistic.html":{}}}],["lastweektotal",{"_index":1805,"title":{},"body":{"classes/Statistic.html":{}}}],["lastyearcost",{"_index":1806,"title":{},"body":{"classes/Statistic.html":{}}}],["lastyearincome",{"_index":1807,"title":{},"body":{"classes/Statistic.html":{}}}],["lastyeartotal",{"_index":1808,"title":{},"body":{"classes/Statistic.html":{}}}],["later",{"_index":2069,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["leave",{"_index":955,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["leavegroup",{"_index":936,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["left",{"_index":729,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["legend",{"_index":194,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["length",{"_index":1513,"title":{},"body":{"components/PasswordPage.html":{}}}],["lets",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{}}}],["letzte",{"_index":991,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["letzter",{"_index":995,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["letztes",{"_index":989,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["link",{"_index":1301,"title":{},"body":{"components/InvitePage.html":{}}}],["linking",{"_index":424,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{}}}],["links",{"_index":2385,"title":{},"body":{"components/TutorialPage.html":{}}}],["list",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{}}}],["list'},{'name",{"_index":215,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["list.module').then",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["list.module.ts",{"_index":1173,"title":{},"body":{"modules/GroupListPageModule.html":{}}}],["list.page",{"_index":1174,"title":{},"body":{"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{}}}],["list.page.html",{"_index":1126,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.scss",{"_index":1125,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts",{"_index":1123,"title":{},"body":{"components/GroupListPage.html":{},"coverage.html":{}}}],["list.page.ts:120",{"_index":1133,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:128",{"_index":1137,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:22",{"_index":1144,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:23",{"_index":1141,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:24",{"_index":1139,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:25",{"_index":1140,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:26",{"_index":1142,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:44",{"_index":1138,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:46",{"_index":1145,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:56",{"_index":1135,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:63",{"_index":1134,"title":{},"body":{"components/GroupListPage.html":{}}}],["list.page.ts:71",{"_index":1131,"title":{},"body":{"components/GroupListPage.html":{}}}],["list/group",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"coverage.html":{}}}],["lists",{"_index":2463,"title":{},"body":{"injectables/UserService.html":{}}}],["literal",{"_index":2003,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionParticipantsPage.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":649,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["loading",{"_index":1283,"title":{},"body":{"injectables/GroupService.html":{},"components/InvitePage.html":{}}}],["loading.cssclass",{"_index":1316,"title":{},"body":{"components/InvitePage.html":{}}}],["loading.dismiss",{"_index":1332,"title":{},"body":{"components/InvitePage.html":{}}}],["loading.duration",{"_index":1320,"title":{},"body":{"components/InvitePage.html":{}}}],["loading.message",{"_index":1317,"title":{},"body":{"components/InvitePage.html":{}}}],["loading.present",{"_index":1323,"title":{},"body":{"components/InvitePage.html":{}}}],["locally",{"_index":2048,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["log",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":663,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["loggout",{"_index":1661,"title":{},"body":{"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["logic",{"_index":2066,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["login",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{}}}],["login'},{'name",{"_index":221,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["login(email",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["login.page",{"_index":1389,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":1349,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1348,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":220,"title":{"components/LoginPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":1383,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpageroutingmodule",{"_index":1387,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["logout",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":1356,"title":{},"body":{"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["long",{"_index":1284,"title":{},"body":{"injectables/GroupService.html":{}}}],["längeren",{"_index":1016,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["löschen",{"_index":1020,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{}}}],["m",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.addmemberspagemodule",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.changepasswordpagemodule",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.friendprofilepagemodule",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.friendspagemodule",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.groupcreatepagemodule",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.groupdetailspagemodule",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.grouplistpagemodule",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.invitepagemodule",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.memberviewpagemodule",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.optionspagemodule",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.passwordpagemodule",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.paymentpagemodule",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.paymentreminderpagemodule",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.privacypagemodule",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.statisticspagemodule",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.transactioncreatepagemodule",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.transactiondetailspagemodule",{"_index":371,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.transactionparticipantspagemodule",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.transactionstakespagemodule",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.tutorialpagemodule",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mail",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["makes",{"_index":80,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{},"components/LoginPage.html":{}}}],["man",{"_index":2621,"title":{},"body":{"index.html":{}}}],["manage",{"_index":422,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{}}}],["map",{"_index":774,"title":{},"body":{"components/FriendsPage.html":{},"components/PasswordPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["margin",{"_index":608,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["mark",{"_index":2087,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["marked",{"_index":2033,"title":{},"body":{"classes/Transaction-1.html":{}}}],["match",{"_index":1515,"title":{},"body":{"components/PasswordPage.html":{}}}],["matching",{"_index":251,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.round(((date2",{"_index":1966,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["math.round(((newestdate",{"_index":1838,"title":{},"body":{"classes/Statistic.html":{}}}],["math.round(costs",{"_index":1971,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["math.round(sum*100)/100",{"_index":2327,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["math.round(transaction.amount",{"_index":1939,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["max",{"_index":727,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionCreatePage.html":{}}}],["maxdate",{"_index":2038,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["measurementid",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":62,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["member.displayname",{"_index":909,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{},"components/TransactionDetailsPage.html":{}}}],["member.id",{"_index":124,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/GroupService.html":{}}}],["member.tostring",{"_index":1157,"title":{},"body":{"components/GroupListPage.html":{}}}],["members",{"_index":18,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/MemberViewPage.html":{}}}],["members'},{'name",{"_index":200,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["members.length",{"_index":1404,"title":{},"body":{"components/MemberViewPage.html":{}}}],["members.module').then",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["members.module.ts",{"_index":264,"title":{},"body":{"modules/AddMembersPageModule.html":{}}}],["members.page",{"_index":274,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"injectables/GroupService.html":{}}}],["members.page.html",{"_index":28,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.scss",{"_index":26,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts",{"_index":12,"title":{},"body":{"components/AddMembersPage.html":{},"coverage.html":{}}}],["members.page.ts:103",{"_index":69,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:111",{"_index":54,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:121",{"_index":76,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:133",{"_index":59,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:146",{"_index":47,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:23",{"_index":91,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:27",{"_index":93,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:31",{"_index":92,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:35",{"_index":84,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:39",{"_index":88,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:43",{"_index":95,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:84",{"_index":83,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:86",{"_index":97,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.page.ts:96",{"_index":79,"title":{},"body":{"components/AddMembersPage.html":{}}}],["members.push(u",{"_index":1242,"title":{},"body":{"injectables/GroupService.html":{}}}],["members.push(user",{"_index":1227,"title":{},"body":{"injectables/GroupService.html":{}}}],["members/add",{"_index":11,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["memberviewpage",{"_index":222,"title":{"components/MemberViewPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["memberviewpagemodule",{"_index":1409,"title":{"modules/MemberViewPageModule.html":{}},"body":{"modules/MemberViewPageModule.html":{},"modules.html":{},"overview.html":{}}}],["memberviewpageroutingmodule",{"_index":1413,"title":{"modules/MemberViewPageRoutingModule.html":{}},"body":{"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["menu",{"_index":2089,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["message",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/PasswordPage.html":{},"components/RegisterPage.html":{}}}],["message/text",{"_index":1518,"title":{},"body":{"components/PasswordPage.html":{}}}],["messages",{"_index":2086,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["messagingsenderid",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["met",{"_index":545,"title":{},"body":{"injectables/BadgeService.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/AddMembersPage.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["mind",{"_index":899,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["miscellaneous",{"_index":2647,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":541,"title":{},"body":{"injectables/BadgeService.html":{}}}],["mit",{"_index":2375,"title":{},"body":{"components/TutorialPage.html":{},"index.html":{}}}],["mitglied",{"_index":900,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["mitglieder",{"_index":1105,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["mitte",{"_index":2401,"title":{},"body":{"components/TutorialPage.html":{}}}],["mobiler",{"_index":2609,"title":{},"body":{"index.html":{}}}],["modal",{"_index":1267,"title":{},"body":{"injectables/GroupService.html":{}}}],["modal.ondiddismiss",{"_index":1273,"title":{},"body":{"injectables/GroupService.html":{}}}],["modal.present",{"_index":1272,"title":{},"body":{"injectables/GroupService.html":{}}}],["modalcontroller",{"_index":102,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/PaymentReminderPage.html":{}}}],["model",{"_index":1758,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["models/award.model",{"_index":439,"title":{},"body":{"injectables/ArwardService.html":{},"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["models/group.model",{"_index":110,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{}}}],["models/statistics.model",{"_index":1002,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/StatisticsService.html":{}}}],["models/transaction.model",{"_index":552,"title":{},"body":{"injectables/BadgeService.html":{},"components/GroupDetailsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["models/transactiontracker.model",{"_index":2065,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["models/user.model",{"_index":107,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"injectables/UserService.html":{}}}],["module",{"_index":253,"title":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{}},"body":{}}],["modules",{"_index":255,"title":{"modules.html":{}},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monat",{"_index":996,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["monate",{"_index":993,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["monatlich",{"_index":2154,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["month",{"_index":1958,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["monthly",{"_index":2228,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["months",{"_index":1951,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["more",{"_index":2184,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["msg",{"_index":171,"title":{},"body":{"components/AddMembersPage.html":{},"components/PaymentReminderPage.html":{}}}],["muss",{"_index":898,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["möchtest",{"_index":1028,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/PrivacyPage.html":{}}}],["n",{"_index":1626,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["nach",{"_index":2407,"title":{},"body":{"components/TutorialPage.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["namen",{"_index":1017,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["native/core",{"_index":2579,"title":{},"body":{"dependencies.html":{}}}],["native/file",{"_index":2581,"title":{},"body":{"dependencies.html":{}}}],["native/image",{"_index":2583,"title":{},"body":{"dependencies.html":{}}}],["navcontroller",{"_index":582,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["navctrl",{"_index":584,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["navigate",{"_index":1454,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{}}}],["navigated",{"_index":1431,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["navigates",{"_index":766,"title":{},"body":{"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["navigateto",{"_index":320,"title":{},"body":{"classes/AppPage.html":{}}}],["navparams",{"_index":103,"title":{},"body":{"components/AddMembersPage.html":{},"components/PaymentReminderPage.html":{}}}],["navparams.get('amount",{"_index":1608,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('currentuserparam",{"_index":120,"title":{},"body":{"components/AddMembersPage.html":{}}}],["navparams.get('displayname_currentuser",{"_index":1612,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('displayname_otheruser",{"_index":1602,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('duedate",{"_index":1610,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('groupname",{"_index":1604,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["navparams.get('groupparam",{"_index":118,"title":{},"body":{"components/AddMembersPage.html":{}}}],["navparams.get('purpose",{"_index":1606,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["ndern",{"_index":1484,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{}}}],["nderungen",{"_index":1463,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["needed",{"_index":421,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionParticipantsPage.html":{}}}],["needs",{"_index":950,"title":{},"body":{"components/GroupDetailsPage.html":{},"classes/TransactionTracker.html":{}}}],["nein",{"_index":1480,"title":{},"body":{"components/OptionsPage.html":{}}}],["neu",{"_index":1375,"title":{},"body":{"components/LoginPage.html":{},"components/MemberViewPage.html":{}}}],["neue",{"_index":2140,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["neuen",{"_index":2399,"title":{},"body":{"components/TutorialPage.html":{}}}],["neues",{"_index":585,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/PasswordPage.html":{}}}],["new",{"_index":17,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["new(group",{"_index":1208,"title":{},"body":{"injectables/GroupService.html":{}}}],["newestdate",{"_index":1809,"title":{},"body":{"classes/Statistic.html":{}}}],["newgroup",{"_index":1243,"title":{},"body":{"injectables/GroupService.html":{}}}],["newgroups",{"_index":1153,"title":{},"body":{"components/GroupListPage.html":{}}}],["newgroups.foreach(group",{"_index":1159,"title":{},"body":{"components/GroupListPage.html":{}}}],["newgroups.push(group",{"_index":1158,"title":{},"body":{"components/GroupListPage.html":{}}}],["newlines",{"_index":1630,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["newpassword1",{"_index":1501,"title":{},"body":{"components/PasswordPage.html":{}}}],["newpassword2",{"_index":1502,"title":{},"body":{"components/PasswordPage.html":{}}}],["newselectedmembers",{"_index":36,"title":{},"body":{"components/AddMembersPage.html":{}}}],["next",{"_index":2049,"title":{},"body":{"components/TransactionCreatePage.html":{},"classes/TransactionTracker.html":{}}}],["nextdate",{"_index":2348,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["nextpage",{"_index":2041,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["ngmodule",{"_index":267,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["ngoninit",{"_index":189,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["nicht",{"_index":175,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/InvitePage.html":{},"components/PasswordPage.html":{},"components/PrivacyPage.html":{},"components/RegisterPage.html":{}}}],["noch",{"_index":179,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"index.html":{}}}],["notpaid",{"_index":2170,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["now",{"_index":2082,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["null",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["number",{"_index":972,"title":{},"body":{"components/GroupDetailsPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{}}}],["nun",{"_index":2393,"title":{},"body":{"components/TutorialPage.html":{}}}],["nutzer",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{}}}],["oben",{"_index":2384,"title":{},"body":{"components/TutorialPage.html":{}}}],["object",{"_index":1190,"title":{},"body":{"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":1203,"title":{},"body":{"injectables/GroupService.html":{}}}],["occuring",{"_index":2084,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["oder",{"_index":2625,"title":{},"body":{"index.html":{}}}],["offene",{"_index":182,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{}}}],["ohne",{"_index":1407,"title":{},"body":{"components/MemberViewPage.html":{}}}],["old",{"_index":1194,"title":{},"body":{"injectables/GroupService.html":{},"components/PasswordPage.html":{}}}],["olddate",{"_index":949,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["oldpassword",{"_index":1503,"title":{},"body":{"components/PasswordPage.html":{}}}],["oldtransactions",{"_index":928,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["once",{"_index":2072,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["one",{"_index":1516,"title":{},"body":{"components/PasswordPage.html":{},"components/TransactionDetailsPage.html":{}}}],["ones",{"_index":542,"title":{},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{}}}],["oninit",{"_index":21,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["open",{"_index":165,"title":{},"body":{"components/AddMembersPage.html":{}}}],["opened",{"_index":647,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["opens",{"_index":1439,"title":{},"body":{"components/OptionsPage.html":{}}}],["option",{"_index":1417,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["optional",{"_index":66,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["options",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["options'},{'name",{"_index":225,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["options.page",{"_index":1498,"title":{},"body":{"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{}}}],["options.page.html",{"_index":1419,"title":{},"body":{"components/OptionsPage.html":{}}}],["options.page.scss",{"_index":1418,"title":{},"body":{"components/OptionsPage.html":{}}}],["optionspage",{"_index":224,"title":{"components/OptionsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["optionspagemodule",{"_index":1492,"title":{"modules/OptionsPageModule.html":{}},"body":{"modules/OptionsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["optionspageroutingmodule",{"_index":1496,"title":{"modules/OptionsPageRoutingModule.html":{}},"body":{"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["original",{"_index":2354,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["originaltransaction",{"_index":2349,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["otheruser",{"_index":1765,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["otheruserid",{"_index":2171,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["otherwise",{"_index":664,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["out",{"_index":263,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"overview.html":{}}}],["outcome",{"_index":1843,"title":{},"body":{"components/StatisticsPage.html":{}}}],["outcomes",{"_index":1859,"title":{},"body":{"components/StatisticsPage.html":{}}}],["outgoing",{"_index":1766,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["outline",{"_index":1368,"title":{},"body":{"components/LoginPage.html":{}}}],["output",{"_index":838,"title":{},"body":{"injectables/FriendsService.html":{}}}],["overview",{"_index":2199,"title":{"overview.html":{}},"body":{"components/TransactionDetailsPage.html":{},"overview.html":{}}}],["owner",{"_index":2192,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["p",{"_index":1743,"title":{},"body":{"components/RegisterPage.html":{}}}],["p.paid",{"_index":2244,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["p.stake",{"_index":1970,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["p.user.id",{"_index":1969,"title":{},"body":{"injectables/StatisticsService.html":{},"components/TransactionDetailsPage.html":{}}}],["package",{"_index":2566,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":596,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["page",{"_index":620,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["paid",{"_index":2001,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["paidandnotaccepted",{"_index":2172,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["paidentry",{"_index":2111,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["param",{"_index":148,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":1435,"title":{},"body":{"components/OptionsPage.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["part",{"_index":1759,"title":{},"body":{"classes/SimpleTransaction.html":{},"classes/Transaction-1.html":{}}}],["participant",{"_index":2210,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["participant.participates",{"_index":2291,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participant.user.displayname",{"_index":2300,"title":{},"body":{"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["participant.user.username",{"_index":2334,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["participants",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{}}}],["participants'},{'name",{"_index":243,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["participants.module').then(m",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["participants.module.ts",{"_index":2306,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{}}}],["participants.page",{"_index":2307,"title":{},"body":{"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{}}}],["participants.page.html",{"_index":2262,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.scss",{"_index":2261,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts",{"_index":2260,"title":{},"body":{"components/TransactionParticipantsPage.html":{},"coverage.html":{}}}],["participants.page.ts:100",{"_index":2275,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:18",{"_index":2279,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:19",{"_index":2281,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:20",{"_index":2282,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:21",{"_index":2280,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:22",{"_index":2283,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:46",{"_index":2267,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:65",{"_index":2270,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants.page.ts:92",{"_index":2276,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participants/transaction",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"coverage.html":{}}}],["participates",{"_index":2285,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["participation",{"_index":2002,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionParticipantsPage.html":{}}}],["participation.stake",{"_index":2326,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["passed",{"_index":2068,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["passing",{"_index":767,"title":{},"body":{"components/FriendsPage.html":{}}}],["password",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"components/PaymentPage.html":{},"components/RegisterPage.html":{}}}],["password'},{'name",{"_index":205,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["password).then(ret",{"_index":1371,"title":{},"body":{"components/LoginPage.html":{}}}],["password.module').then",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password.module.ts",{"_index":616,"title":{},"body":{"modules/ChangePasswordPageModule.html":{}}}],["password.page",{"_index":617,"title":{},"body":{"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{}}}],["password.page.html",{"_index":580,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/PasswordPage.html":{}}}],["password.page.scss",{"_index":579,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/PasswordPage.html":{}}}],["password.page.ts",{"_index":577,"title":{},"body":{"components/ChangePasswordPage.html":{},"coverage.html":{}}}],["password.page.ts:18",{"_index":581,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password/change",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"coverage.html":{}}}],["passwordchange",{"_index":1422,"title":{},"body":{"components/OptionsPage.html":{}}}],["passwordpage",{"_index":226,"title":{"components/PasswordPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["passwordpagemodule",{"_index":1549,"title":{"modules/PasswordPageModule.html":{}},"body":{"modules/PasswordPageModule.html":{},"modules.html":{},"overview.html":{}}}],["passwordpageroutingmodule",{"_index":1553,"title":{"modules/PasswordPageRoutingModule.html":{}},"body":{"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["passwords",{"_index":1514,"title":{},"body":{"components/PasswordPage.html":{}}}],["passwordtext",{"_index":1545,"title":{},"body":{"components/PasswordPage.html":{}}}],["passwort",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/RegisterPage.html":{}}}],["passwörter",{"_index":1736,"title":{},"body":{"components/RegisterPage.html":{}}}],["past",{"_index":2078,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["path",{"_index":279,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["pathmatch",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pay",{"_index":2207,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["payment",{"_index":230,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["payment'},{'name",{"_index":228,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["payment.page",{"_index":1574,"title":{},"body":{"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{}}}],["payment.page.html",{"_index":1558,"title":{},"body":{"components/PaymentPage.html":{}}}],["payment.page.scss",{"_index":1557,"title":{},"body":{"components/PaymentPage.html":{}}}],["paymentdescription",{"_index":628,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["paymentdescription(name",{"_index":665,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["paymentpage",{"_index":227,"title":{"components/PaymentPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["paymentpagemodule",{"_index":1568,"title":{"modules/PaymentPageModule.html":{}},"body":{"modules/PaymentPageModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentpageroutingmodule",{"_index":1572,"title":{"modules/PaymentPageRoutingModule.html":{}},"body":{"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentreminderpage",{"_index":229,"title":{"components/PaymentReminderPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["paymentreminderpagemodule",{"_index":1638,"title":{"modules/PaymentReminderPageModule.html":{}},"body":{"modules/PaymentReminderPageModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentreminderpageroutingmodule",{"_index":1642,"title":{"modules/PaymentReminderPageRoutingModule.html":{}},"body":{"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["paypal",{"_index":1567,"title":{},"body":{"components/PaymentPage.html":{},"classes/User.html":{}}}],["pays",{"_index":2073,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["paytransaction",{"_index":2176,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["pending",{"_index":1767,"title":{},"body":{"classes/SimpleTransaction.html":{},"classes/Transaction.html":{}}}],["per",{"_index":1771,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["period",{"_index":1850,"title":{},"body":{"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["persist",{"_index":2457,"title":{},"body":{"injectables/UserService.html":{}}}],["persist(id",{"_index":2468,"title":{},"body":{"injectables/UserService.html":{}}}],["photo",{"_index":1440,"title":{},"body":{"components/OptionsPage.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["pichart",{"_index":1865,"title":{},"body":{"components/StatisticsPage.html":{}}}],["picked",{"_index":2070,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["picker",{"_index":2584,"title":{},"body":{"dependencies.html":{}}}],["pickers",{"_index":2079,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["picture",{"_index":2026,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["pie",{"_index":929,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["pieces",{"_index":1857,"title":{},"body":{"components/StatisticsPage.html":{}}}],["piechart",{"_index":930,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["platform",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["plugin",{"_index":1447,"title":{},"body":{"components/OptionsPage.html":{},"dependencies.html":{}}}],["plugins",{"_index":1090,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["plus",{"_index":2396,"title":{},"body":{"components/TutorialPage.html":{}}}],["position",{"_index":1091,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/StatisticsPage.html":{}}}],["pre",{"_index":1633,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["preloadallmodules",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":547,"title":{},"body":{"injectables/BadgeService.html":{}}}],["pressed",{"_index":963,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["prevent",{"_index":2077,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["price",{"_index":2020,"title":{},"body":{"classes/Transaction-1.html":{}}}],["privacy",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OptionsPage.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{}}}],["privacy'},{'name",{"_index":233,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["privacy.page",{"_index":1690,"title":{},"body":{"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{}}}],["privacy.page.html",{"_index":1647,"title":{},"body":{"components/PrivacyPage.html":{}}}],["privacy.page.scss",{"_index":1646,"title":{},"body":{"components/PrivacyPage.html":{}}}],["privacypage",{"_index":232,"title":{"components/PrivacyPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["privacypagemodule",{"_index":1684,"title":{"modules/PrivacyPageModule.html":{}},"body":{"modules/PrivacyPageModule.html":{},"modules.html":{},"overview.html":{}}}],["privacypageroutingmodule",{"_index":1688,"title":{"modules/PrivacyPageRoutingModule.html":{}},"body":{"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["private",{"_index":31,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["privatsphäre",{"_index":1485,"title":{},"body":{"components/OptionsPage.html":{},"components/PrivacyPage.html":{}}}],["probably",{"_index":1763,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["problems",{"_index":1864,"title":{},"body":{"components/StatisticsPage.html":{}}}],["production",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":1711,"title":{},"body":{"components/ProfilePage.html":{},"components/TutorialPage.html":{}}}],["profilbild",{"_index":1682,"title":{},"body":{"components/PrivacyPage.html":{}}}],["profile",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"components/StatisticsPage.html":{}}}],["profile'},{'name",{"_index":207,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["profile.module').then",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.module.ts",{"_index":745,"title":{},"body":{"modules/FriendProfilePageModule.html":{}}}],["profile.page",{"_index":746,"title":{},"body":{"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":622,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":621,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["profile.page.ts",{"_index":619,"title":{},"body":{"components/FriendProfilePage.html":{},"coverage.html":{}}}],["profile.page.ts:116",{"_index":629,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:127",{"_index":632,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:145",{"_index":667,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:26",{"_index":669,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:27",{"_index":672,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:28",{"_index":671,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:29",{"_index":670,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile.page.ts:68",{"_index":646,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["profile/friend",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"coverage.html":{}}}],["profiledescriptioncol",{"_index":730,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["profileimagechange",{"_index":1423,"title":{},"body":{"components/OptionsPage.html":{}}}],["profileimg",{"_index":723,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["profileimgcol",{"_index":726,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["profilepage",{"_index":234,"title":{"components/ProfilePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["profilepagemodule",{"_index":1712,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepageroutingmodule",{"_index":1716,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepic",{"_index":2437,"title":{},"body":{"classes/User.html":{}}}],["profilesettings",{"_index":1693,"title":{},"body":{"components/ProfilePage.html":{}}}],["progressive",{"_index":2611,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":30,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":323,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":653,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["providedin",{"_index":440,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":116,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"classes/Group.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionStakesPage.html":{},"classes/User.html":{}}}],["purchasedate",{"_index":1977,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["purpose",{"_index":654,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["push",{"_index":77,"title":{},"body":{"components/AddMembersPage.html":{}}}],["quality",{"_index":1471,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["querystring",{"_index":1324,"title":{},"body":{"components/InvitePage.html":{}}}],["querystring.split",{"_index":1326,"title":{},"body":{"components/InvitePage.html":{}}}],["r.displayname.tolowercase().includes(this.#searchbar.value.tolowercase",{"_index":145,"title":{},"body":{"components/AddMembersPage.html":{}}}],["r.name.tolowercase().includes(this.#searchbar.value.tolowercase",{"_index":1149,"title":{},"body":{"components/GroupListPage.html":{}}}],["radius",{"_index":604,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["random",{"_index":843,"title":{},"body":{"injectables/FriendsService.html":{}}}],["readable",{"_index":2185,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["received",{"_index":2021,"title":{},"body":{"classes/Transaction-1.html":{}}}],["rechnungen",{"_index":1042,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["rechnungen/einnahmen",{"_index":2617,"title":{},"body":{"index.html":{}}}],["rechnungsdatum",{"_index":2149,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["rechts",{"_index":2398,"title":{},"body":{"components/TutorialPage.html":{}}}],["redirectto",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"components/TutorialPage.html":{}}}],["register'},{'name",{"_index":236,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["register(email",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.page",{"_index":1750,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":1721,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":1720,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerpage",{"_index":235,"title":{"components/RegisterPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["registerpagemodule",{"_index":1744,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpageroutingmodule",{"_index":1748,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["registers",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterPage.html":{}}}],["registrieren",{"_index":1738,"title":{},"body":{"components/RegisterPage.html":{}}}],["reminder",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{}}}],["reminder'},{'name",{"_index":231,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["reminder.module').then",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reminder.module.ts",{"_index":1643,"title":{},"body":{"modules/PaymentReminderPageModule.html":{}}}],["reminder.page",{"_index":1644,"title":{},"body":{"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{}}}],["reminder.page.html",{"_index":1580,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.scss",{"_index":1579,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts",{"_index":1577,"title":{},"body":{"components/PaymentReminderPage.html":{},"coverage.html":{}}}],["reminder.page.ts:14",{"_index":1594,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:15",{"_index":1597,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:16",{"_index":1598,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:17",{"_index":1592,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:18",{"_index":1595,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:19",{"_index":1593,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:20",{"_index":1596,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:21",{"_index":1599,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:22",{"_index":1600,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder.page.ts:48",{"_index":1590,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["reminder/payment",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"coverage.html":{}}}],["remove",{"_index":2194,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["removedfriend",{"_index":158,"title":{},"body":{"components/AddMembersPage.html":{}}}],["removedfriend.push(friend",{"_index":163,"title":{},"body":{"components/AddMembersPage.html":{}}}],["removepicture",{"_index":2177,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["reoccurance",{"_index":2025,"title":{},"body":{"classes/Transaction-1.html":{}}}],["reoccurring",{"_index":2345,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["repeated",{"_index":1729,"title":{},"body":{"components/RegisterPage.html":{}}}],["representation",{"_index":2187,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["representing",{"_index":1998,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["represents",{"_index":1918,"title":{},"body":{"injectables/StatisticsService.html":{},"components/TransactionParticipantsPage.html":{},"classes/TransactionTracker.html":{}}}],["require",{"_index":2563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":645,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["requirements",{"_index":544,"title":{},"body":{"injectables/BadgeService.html":{}}}],["res",{"_index":787,"title":{},"body":{"components/FriendsPage.html":{},"components/StatisticsPage.html":{}}}],["res.data",{"_index":445,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["res.id",{"_index":447,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{}}}],["reset",{"_index":262,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"overview.html":{}}}],["respective",{"_index":1851,"title":{},"body":{"components/StatisticsPage.html":{}}}],["responsive",{"_index":1089,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["rest",{"_index":2406,"title":{},"body":{"components/TutorialPage.html":{}}}],["result",{"_index":250,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.data",{"_index":1274,"title":{},"body":{"injectables/GroupService.html":{}}}],["result.friends.indexof(user.id",{"_index":2489,"title":{},"body":{"injectables/UserService.html":{}}}],["result.friends.splice(index",{"_index":2491,"title":{},"body":{"injectables/UserService.html":{}}}],["results",{"_index":252,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resulttype",{"_index":1473,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["ret",{"_index":155,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["ret.awards",{"_index":837,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.awardspublic",{"_index":836,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.description",{"_index":833,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.descriptionpublic",{"_index":832,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.id",{"_index":446,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{}}}],["ret.imagepublic",{"_index":830,"title":{},"body":{"injectables/FriendsService.html":{}}}],["ret.profilepic",{"_index":831,"title":{},"body":{"injectables/FriendsService.html":{}}}],["return",{"_index":157,"title":{},"body":{"components/AddMembersPage.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":52,"title":{},"body":{"components/AddMembersPage.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["rgba(104",{"_index":1084,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["rgba(237",{"_index":1087,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["rhythm",{"_index":1978,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{}}}],["rhythmus",{"_index":2150,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["right",{"_index":732,"title":{},"body":{"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{}}}],["role",{"_index":1030,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["root",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{},"injectables/StatisticsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":202,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["route",{"_index":684,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["router",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["routereusestrategy",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":277,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":280,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":276,"title":{"routes.html":{}},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":273,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{}}}],["routing.module.ts",{"_index":275,"title":{},"body":{"modules/AddMembersPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"modules/FriendsPageRoutingModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"modules/GroupListPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/InvitePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"modules/OptionsPageRoutingModule.html":{},"modules/PasswordPageRoutingModule.html":{},"modules/PaymentPageRoutingModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["row",{"_index":738,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["rsl",{"_index":1466,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["rsl.role",{"_index":1467,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["rxjs",{"_index":1146,"title":{},"body":{"components/GroupListPage.html":{},"injectables/GroupService.html":{},"dependencies.html":{}}}],["rückgängig",{"_index":1671,"title":{},"body":{"components/PrivacyPage.html":{}}}],["same",{"_index":2074,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["sanitizer",{"_index":683,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/ProfilePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["sanitizer:domsanitizer",{"_index":1402,"title":{},"body":{"components/MemberViewPage.html":{}}}],["satistics",{"_index":549,"title":{},"body":{"injectables/BadgeService.html":{}}}],["save",{"_index":1434,"title":{},"body":{"components/OptionsPage.html":{},"components/TransactionCreatePage.html":{}}}],["savealert",{"_index":1424,"title":{},"body":{"components/OptionsPage.html":{}}}],["savealert(site",{"_index":1450,"title":{},"body":{"components/OptionsPage.html":{}}}],["savebtn",{"_index":1425,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["saved",{"_index":1445,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{}}}],["saves",{"_index":1442,"title":{},"body":{"components/OptionsPage.html":{}}}],["saving",{"_index":2083,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["sb",{"_index":98,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["sb.setfocus",{"_index":140,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["schließen",{"_index":717,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["schnell",{"_index":2373,"title":{},"body":{"components/TutorialPage.html":{}}}],["schritt",{"_index":2380,"title":{},"body":{"components/TutorialPage.html":{}}}],["schuldet",{"_index":2636,"title":{},"body":{"index.html":{}}}],["schwach",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["search",{"_index":73,"title":{},"body":{"components/AddMembersPage.html":{},"components/InvitePage.html":{}}}],["searchbar",{"_index":32,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["searchbar(sb",{"_index":139,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["searchbarvisible",{"_index":37,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["secondmsg",{"_index":1587,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["secondpassword",{"_index":1722,"title":{},"body":{"components/RegisterPage.html":{}}}],["see",{"_index":546,"title":{},"body":{"injectables/BadgeService.html":{},"components/GroupDetailsPage.html":{}}}],["sehen",{"_index":2412,"title":{},"body":{"components/TutorialPage.html":{}}}],["sein",{"_index":906,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["selbst",{"_index":1894,"title":{},"body":{"components/StatisticsPage.html":{}}}],["select",{"_index":43,"title":{},"body":{"components/AddMembersPage.html":{}}}],["select(friend",{"_index":75,"title":{},"body":{"components/AddMembersPage.html":{}}}],["selectallusers",{"_index":2039,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["selected",{"_index":50,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["self",{"_index":1844,"title":{},"body":{"components/StatisticsPage.html":{}}}],["send",{"_index":1578,"title":{},"body":{"components/PaymentReminderPage.html":{},"components/TransactionDetailsPage.html":{}}}],["senden",{"_index":586,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["service",{"_index":1906,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["services",{"_index":650,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["services/auth.service",{"_index":109,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["services/friends.service",{"_index":676,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{}}}],["services/group.service",{"_index":886,"title":{},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{}}}],["services/statistics.service",{"_index":1001,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["services/transaction.service",{"_index":112,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["services/user.service",{"_index":678,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["set",{"_index":138,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/StatisticsPage.html":{}}}],["setbadges",{"_index":537,"title":{},"body":{"injectables/BadgeService.html":{}}}],["setbadges(user",{"_index":538,"title":{},"body":{"injectables/BadgeService.html":{}}}],["sets",{"_index":958,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["setsearchbar(sb",{"_index":96,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["settimeout",{"_index":1092,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["setvisible",{"_index":44,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["showgroup",{"_index":1130,"title":{},"body":{"components/GroupListPage.html":{}}}],["showgroup(group",{"_index":1136,"title":{},"body":{"components/GroupListPage.html":{}}}],["showing",{"_index":2027,"title":{},"body":{"classes/Transaction-1.html":{}}}],["shown",{"_index":2205,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["shows",{"_index":918,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/MemberViewPage.html":{}}}],["sicher",{"_index":1024,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["sichtbar",{"_index":1681,"title":{},"body":{"components/PrivacyPage.html":{}}}],["sie",{"_index":1009,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TutorialPage.html":{}}}],["simple",{"_index":1756,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["simpletransaction",{"_index":1752,"title":{"classes/SimpleTransaction.html":{}},"body":{"classes/SimpleTransaction.html":{},"coverage.html":{}}}],["simpletransactions",{"_index":1754,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["simply",{"_index":1430,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["site",{"_index":1453,"title":{},"body":{"components/OptionsPage.html":{}}}],["size",{"_index":594,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["slider",{"_index":2278,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["slides",{"_index":2419,"title":{},"body":{"components/TutorialPage.html":{}}}],["snapshot",{"_index":1220,"title":{},"body":{"injectables/GroupService.html":{}}}],["snapshot.data",{"_index":1223,"title":{},"body":{"injectables/GroupService.html":{}}}],["snapshot.docs.map(doc",{"_index":1245,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["snapshot.id",{"_index":1224,"title":{},"body":{"injectables/GroupService.html":{}}}],["solid",{"_index":601,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/RegisterPage.html":{}}}],["somewhat",{"_index":842,"title":{},"body":{"injectables/FriendsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"components/FriendsPage.html":{},"modules/FriendsPageModule.html":{},"modules/FriendsPageRoutingModule.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"injectables/GroupService.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/InvitePage.html":{},"modules/InvitePageModule.html":{},"modules/InvitePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"components/OptionsPage.html":{},"modules/OptionsPageModule.html":{},"modules/OptionsPageRoutingModule.html":{},"components/PasswordPage.html":{},"modules/PasswordPageModule.html":{},"modules/PasswordPageRoutingModule.html":{},"components/PaymentPage.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentPageRoutingModule.html":{},"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"components/PrivacyPage.html":{},"modules/PrivacyPageModule.html":{},"modules/PrivacyPageRoutingModule.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["spa",{"_index":2416,"title":{},"body":{"components/TutorialPage.html":{}}}],["space",{"_index":1632,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["spans",{"_index":1934,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["spec\\.ts",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":2209,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["specifies",{"_index":1917,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["speichern",{"_index":1468,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["spot",{"_index":844,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/.../environment.prod.ts",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:8",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/change",{"_index":576,"title":{},"body":{"components/ChangePasswordPage.html":{},"modules/ChangePasswordPageModule.html":{},"modules/ChangePasswordPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/auth/login/login",{"_index":1390,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/auth/login/login.module.ts",{"_index":1388,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/auth/login/login.page.ts",{"_index":1347,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/auth/login/login.page.ts:18",{"_index":1357,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:22",{"_index":1364,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:26",{"_index":1363,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:30",{"_index":1360,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:34",{"_index":1358,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:47",{"_index":1353,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/login/login.page.ts:62",{"_index":1355,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/register/register",{"_index":1751,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/auth/register/register.module.ts",{"_index":1749,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/auth/register/register.page.ts",{"_index":1719,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/auth/register/register.page.ts:18",{"_index":1730,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:22",{"_index":1724,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:26",{"_index":1727,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:30",{"_index":1728,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:34",{"_index":1725,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/register/register.page.ts:44",{"_index":1723,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/group/add",{"_index":10,"title":{},"body":{"components/AddMembersPage.html":{},"modules/AddMembersPageModule.html":{},"modules/AddMembersPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/group/group",{"_index":874,"title":{},"body":{"components/GroupCreatePage.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupCreatePageRoutingModule.html":{},"components/GroupDetailsPage.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupDetailsPageRoutingModule.html":{},"components/GroupListPage.html":{},"modules/GroupListPageModule.html":{},"modules/GroupListPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/group/invite/invite",{"_index":1346,"title":{},"body":{"modules/InvitePageRoutingModule.html":{}}}],["src/app/group/invite/invite.module.ts",{"_index":1344,"title":{},"body":{"modules/InvitePageModule.html":{}}}],["src/app/group/invite/invite.page.ts",{"_index":1299,"title":{},"body":{"components/InvitePage.html":{},"coverage.html":{}}}],["src/app/group/invite/invite.page.ts:20",{"_index":1309,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:21",{"_index":1311,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:22",{"_index":1313,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:23",{"_index":1312,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:60",{"_index":1308,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/invite/invite.page.ts:85",{"_index":1307,"title":{},"body":{"components/InvitePage.html":{}}}],["src/app/group/member",{"_index":1391,"title":{},"body":{"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/home/home",{"_index":1298,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/home/home.module.ts",{"_index":1294,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page.ts",{"_index":2514,"title":{},"body":{"coverage.html":{}}}],["src/app/models/award.model.ts",{"_index":525,"title":{},"body":{"classes/Award.html":{},"coverage.html":{}}}],["src/app/models/award.model.ts:1",{"_index":528,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/award.model.ts:4",{"_index":531,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/award.model.ts:5",{"_index":530,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/award.model.ts:6",{"_index":533,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/award.model.ts:7",{"_index":532,"title":{},"body":{"classes/Award.html":{}}}],["src/app/models/group.model.ts",{"_index":866,"title":{},"body":{"classes/Group.html":{},"coverage.html":{}}}],["src/app/models/group.model.ts:3",{"_index":868,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:4",{"_index":870,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:5",{"_index":872,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:6",{"_index":871,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:7",{"_index":869,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/simpletransaction.model.ts",{"_index":1753,"title":{},"body":{"classes/SimpleTransaction.html":{},"coverage.html":{}}}],["src/app/models/simpletransaction.model.ts:10",{"_index":1780,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:11",{"_index":1778,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:12",{"_index":1784,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:13",{"_index":1783,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:14",{"_index":1782,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:15",{"_index":1781,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:16",{"_index":1779,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/simpletransaction.model.ts:17",{"_index":1768,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["src/app/models/statistics.model.ts",{"_index":1789,"title":{},"body":{"classes/Statistic.html":{},"coverage.html":{}}}],["src/app/models/statistics.model.ts:10",{"_index":1817,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:11",{"_index":1815,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:12",{"_index":1816,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:14",{"_index":1831,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:15",{"_index":1829,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:16",{"_index":1830,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:18",{"_index":1823,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:19",{"_index":1821,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:20",{"_index":1822,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:22",{"_index":1826,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:23",{"_index":1824,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:24",{"_index":1825,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:26",{"_index":1820,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:27",{"_index":1818,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:28",{"_index":1819,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:30",{"_index":1828,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:31",{"_index":1827,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:32",{"_index":1813,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:6",{"_index":1833,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:7",{"_index":1832,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/statistics.model.ts:8",{"_index":1834,"title":{},"body":{"classes/Statistic.html":{}}}],["src/app/models/transaction.model",{"_index":1873,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/models/transaction.model.ts",{"_index":1997,"title":{},"body":{"classes/Transaction-1.html":{},"coverage.html":{}}}],["src/app/models/transaction.model.ts:10",{"_index":2005,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:11",{"_index":2015,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:12",{"_index":2017,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:13",{"_index":2014,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:14",{"_index":2007,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:15",{"_index":2016,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:16",{"_index":2013,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:17",{"_index":2006,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:18",{"_index":2008,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:20",{"_index":2012,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:21",{"_index":2004,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:22",{"_index":2011,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:8",{"_index":2010,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transaction.model.ts:9",{"_index":2009,"title":{},"body":{"classes/Transaction-1.html":{}}}],["src/app/models/transactiontracker.model.ts",{"_index":2344,"title":{},"body":{"classes/TransactionTracker.html":{},"coverage.html":{}}}],["src/app/models/transactiontracker.model.ts:10",{"_index":2356,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:11",{"_index":2358,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:12",{"_index":2359,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:13",{"_index":2355,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:14",{"_index":2351,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:8",{"_index":2357,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/transactiontracker.model.ts:9",{"_index":2360,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["src/app/models/user.model",{"_index":677,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["src/app/models/user.model.ts",{"_index":2428,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:1",{"_index":2438,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:10",{"_index":2442,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:11",{"_index":2446,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:12",{"_index":2451,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:13",{"_index":2452,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:14",{"_index":2450,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:15",{"_index":2440,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:16",{"_index":2441,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:17",{"_index":2444,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:3",{"_index":2449,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":2445,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:5",{"_index":2447,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:6",{"_index":2448,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:7",{"_index":2439,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:8",{"_index":2453,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:9",{"_index":2443,"title":{},"body":{"classes/User.html":{}}}],["src/app/payment",{"_index":1576,"title":{},"body":{"components/PaymentReminderPage.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PaymentReminderPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/profile/friend",{"_index":618,"title":{},"body":{"components/FriendProfilePage.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendProfilePageRoutingModule.html":{},"coverage.html":{}}}],["src/app/profile/friends/friends",{"_index":802,"title":{},"body":{"modules/FriendsPageRoutingModule.html":{}}}],["src/app/profile/friends/friends.module.ts",{"_index":800,"title":{},"body":{"modules/FriendsPageModule.html":{}}}],["src/app/profile/friends/friends.page.ts",{"_index":747,"title":{},"body":{"components/FriendsPage.html":{},"coverage.html":{}}}],["src/app/profile/friends/friends.page.ts:20",{"_index":776,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:21",{"_index":771,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:22",{"_index":773,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:23",{"_index":772,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:24",{"_index":775,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:50",{"_index":770,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:74",{"_index":765,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/friends/friends.page.ts:83",{"_index":754,"title":{},"body":{"components/FriendsPage.html":{}}}],["src/app/profile/options/options",{"_index":1499,"title":{},"body":{"modules/OptionsPageRoutingModule.html":{}}}],["src/app/profile/options/options.module.ts",{"_index":1497,"title":{},"body":{"modules/OptionsPageModule.html":{}}}],["src/app/profile/options/options.page.ts",{"_index":1416,"title":{},"body":{"components/OptionsPage.html":{},"coverage.html":{}}}],["src/app/profile/options/options.page.ts:111",{"_index":1438,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:123",{"_index":1436,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:130",{"_index":1433,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:137",{"_index":1437,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:148",{"_index":1451,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:19",{"_index":1456,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:20",{"_index":1457,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:44",{"_index":1432,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:61",{"_index":1426,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/options/options.page.ts:86",{"_index":1455,"title":{},"body":{"components/OptionsPage.html":{}}}],["src/app/profile/password/password",{"_index":1555,"title":{},"body":{"modules/PasswordPageRoutingModule.html":{}}}],["src/app/profile/password/password.module.ts",{"_index":1554,"title":{},"body":{"modules/PasswordPageModule.html":{}}}],["src/app/profile/password/password.page.ts",{"_index":1500,"title":{},"body":{"components/PasswordPage.html":{},"coverage.html":{}}}],["src/app/profile/password/password.page.ts:15",{"_index":1523,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:16",{"_index":1521,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:17",{"_index":1522,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:18",{"_index":1520,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:33",{"_index":1506,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:44",{"_index":1504,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/password/password.page.ts:68",{"_index":1510,"title":{},"body":{"components/PasswordPage.html":{}}}],["src/app/profile/payment/payment",{"_index":1575,"title":{},"body":{"modules/PaymentPageRoutingModule.html":{}}}],["src/app/profile/payment/payment.module.ts",{"_index":1573,"title":{},"body":{"modules/PaymentPageModule.html":{}}}],["src/app/profile/payment/payment.page.ts",{"_index":1556,"title":{},"body":{"components/PaymentPage.html":{},"coverage.html":{}}}],["src/app/profile/payment/payment.page.ts:18",{"_index":1562,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/payment/payment.page.ts:19",{"_index":1563,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/payment/payment.page.ts:41",{"_index":1560,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/payment/payment.page.ts:58",{"_index":1559,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/payment/payment.page.ts:83",{"_index":1561,"title":{},"body":{"components/PaymentPage.html":{}}}],["src/app/profile/privacy/privacy",{"_index":1691,"title":{},"body":{"modules/PrivacyPageRoutingModule.html":{}}}],["src/app/profile/privacy/privacy.module.ts",{"_index":1689,"title":{},"body":{"modules/PrivacyPageModule.html":{}}}],["src/app/profile/privacy/privacy.page.ts",{"_index":1645,"title":{},"body":{"components/PrivacyPage.html":{},"coverage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:117",{"_index":1655,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:140",{"_index":1651,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:20",{"_index":1664,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:21",{"_index":1665,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:49",{"_index":1662,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:66",{"_index":1650,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/privacy/privacy.page.ts:91",{"_index":1663,"title":{},"body":{"components/PrivacyPage.html":{}}}],["src/app/profile/profile/profile",{"_index":1718,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/profile/profile/profile.module.ts",{"_index":1717,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/profile/profile/profile.page.ts",{"_index":1692,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/profile/profile/profile.page.ts:112",{"_index":1697,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:123",{"_index":1698,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:23",{"_index":1700,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:24",{"_index":1701,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:54",{"_index":1696,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:77",{"_index":1695,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:84",{"_index":1699,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/profile/profile.page.ts:95",{"_index":1694,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/profile/statistics/statistics",{"_index":1904,"title":{},"body":{"modules/StatisticsPageRoutingModule.html":{}}}],["src/app/profile/statistics/statistics.module.ts",{"_index":1902,"title":{},"body":{"modules/StatisticsPageModule.html":{}}}],["src/app/profile/statistics/statistics.page.ts",{"_index":1840,"title":{},"body":{"components/StatisticsPage.html":{},"coverage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:22",{"_index":1872,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:23",{"_index":1871,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:24",{"_index":1866,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:25",{"_index":1867,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:26",{"_index":1870,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:27",{"_index":1868,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:29",{"_index":1869,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:54",{"_index":1860,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:75",{"_index":1847,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/profile/statistics/statistics.page.ts:90",{"_index":1856,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/services/auth.service.ts",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:113",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:127",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:70",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:99",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/award.service",{"_index":674,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["src/app/services/award.service.ts",{"_index":420,"title":{},"body":{"injectables/ArwardService.html":{},"coverage.html":{}}}],["src/app/services/award.service.ts:14",{"_index":436,"title":{},"body":{"injectables/ArwardService.html":{}}}],["src/app/services/award.service.ts:29",{"_index":430,"title":{},"body":{"injectables/ArwardService.html":{}}}],["src/app/services/badge.service",{"_index":681,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["src/app/services/badge.service.ts",{"_index":535,"title":{},"body":{"injectables/BadgeService.html":{},"coverage.html":{}}}],["src/app/services/badge.service.ts:30",{"_index":540,"title":{},"body":{"injectables/BadgeService.html":{}}}],["src/app/services/friends.service.ts",{"_index":803,"title":{},"body":{"injectables/FriendsService.html":{},"coverage.html":{}}}],["src/app/services/friends.service.ts:104",{"_index":824,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:113",{"_index":814,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:16",{"_index":826,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:34",{"_index":817,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:58",{"_index":809,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/friends.service.ts:92",{"_index":820,"title":{},"body":{"injectables/FriendsService.html":{}}}],["src/app/services/group.service.ts",{"_index":1175,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/app/services/group.service.ts:112",{"_index":1193,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:129",{"_index":1199,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:159",{"_index":1201,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:19",{"_index":1212,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:191",{"_index":1184,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:209",{"_index":1186,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:218",{"_index":1188,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:39",{"_index":1202,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:47",{"_index":1209,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:55",{"_index":1211,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:63",{"_index":1197,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:71",{"_index":1205,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/group.service.ts:93",{"_index":1207,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/app/services/statistics.service",{"_index":1874,"title":{},"body":{"components/StatisticsPage.html":{}}}],["src/app/services/statistics.service.ts",{"_index":1905,"title":{},"body":{"injectables/StatisticsService.html":{},"coverage.html":{}}}],["src/app/services/statistics.service.ts:102",{"_index":1921,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:125",{"_index":1923,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:18",{"_index":1932,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:67",{"_index":1926,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/statistics.service.ts:79",{"_index":1915,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/services/transaction.service",{"_index":680,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["src/app/services/transaction.service.ts",{"_index":2544,"title":{},"body":{"coverage.html":{}}}],["src/app/services/user.service",{"_index":106,"title":{},"body":{"components/AddMembersPage.html":{},"components/StatisticsPage.html":{}}}],["src/app/services/user.service.ts",{"_index":2454,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:107",{"_index":2466,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:13",{"_index":2471,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":2469,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:52",{"_index":2467,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:64",{"_index":2470,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:72",{"_index":2460,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:80",{"_index":2462,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:97",{"_index":2458,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/transaction.model.ts",{"_index":1975,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/app/transaction.model.ts:10",{"_index":1989,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:11",{"_index":1986,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:12",{"_index":1980,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:2",{"_index":1984,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:3",{"_index":1983,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:4",{"_index":1981,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:5",{"_index":1988,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:6",{"_index":1990,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:7",{"_index":1985,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:8",{"_index":1987,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction.model.ts:9",{"_index":1982,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/transaction/transaction",{"_index":2035,"title":{},"body":{"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/tutorial/tutorial",{"_index":2427,"title":{},"body":{"modules/TutorialPageRoutingModule.html":{}}}],["src/app/tutorial/tutorial.module.ts",{"_index":2425,"title":{},"body":{"modules/TutorialPageModule.html":{}}}],["src/app/tutorial/tutorial.page.ts",{"_index":2366,"title":{},"body":{"components/TutorialPage.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2558,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2560,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stake",{"_index":2031,"title":{},"body":{"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["stakeentry",{"_index":2109,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["stakes",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{}}}],["stakes'},{'name",{"_index":245,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["stakes.module').then(m",{"_index":374,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["stakes.module.ts",{"_index":2342,"title":{},"body":{"modules/TransactionStakesPageModule.html":{}}}],["stakes.page",{"_index":2343,"title":{},"body":{"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{}}}],["stakes.page.html",{"_index":2310,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.scss",{"_index":2309,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts",{"_index":2308,"title":{},"body":{"components/TransactionStakesPage.html":{},"coverage.html":{}}}],["stakes.page.ts:17",{"_index":2318,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts:18",{"_index":2317,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts:44",{"_index":2312,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts:53",{"_index":2315,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes.page.ts:80",{"_index":2316,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["stakes/transaction",{"_index":373,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"coverage.html":{}}}],["stands",{"_index":1853,"title":{},"body":{"components/StatisticsPage.html":{}}}],["startdate",{"_index":1810,"title":{},"body":{"classes/Statistic.html":{}}}],["started",{"_index":2607,"title":{"index.html":{}},"body":{}}],["startseite",{"_index":2411,"title":{},"body":{"components/TutorialPage.html":{}}}],["statements",{"_index":2499,"title":{},"body":{"coverage.html":{}}}],["statistic",{"_index":931,"title":{"classes/Statistic.html":{}},"body":{"components/GroupDetailsPage.html":{},"classes/Statistic.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["statistic(new",{"_index":1937,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.alltimecost",{"_index":1942,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.alltimeincome",{"_index":1943,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.alltimetotal",{"_index":1940,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastmonthcost",{"_index":1960,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastmonthincome",{"_index":1961,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastmonthtotal",{"_index":1959,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastsixmonthscost",{"_index":1953,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastsixmonthsincome",{"_index":1954,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastsixmonthstotal",{"_index":1952,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastthreemonthscost",{"_index":1956,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastthreemonthsincome",{"_index":1957,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastthreemonthstotal",{"_index":1955,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastweekcost",{"_index":1964,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastweekincome",{"_index":1965,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastweektotal",{"_index":1963,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastyearcost",{"_index":1949,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastyearincome",{"_index":1950,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistic.lastyeartotal",{"_index":1948,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["statistics",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"injectables/StatisticsService.html":{}}}],["statistics'},{'name",{"_index":238,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["statistics.page",{"_index":1903,"title":{},"body":{"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{}}}],["statistics.page.html",{"_index":1842,"title":{},"body":{"components/StatisticsPage.html":{}}}],["statistics.page.scss",{"_index":1841,"title":{},"body":{"components/StatisticsPage.html":{}}}],["statistics.service",{"_index":551,"title":{},"body":{"injectables/BadgeService.html":{}}}],["statisticspage",{"_index":237,"title":{"components/StatisticsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["statisticspagemodule",{"_index":1897,"title":{"modules/StatisticsPageModule.html":{}},"body":{"modules/StatisticsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["statisticspageroutingmodule",{"_index":1901,"title":{"modules/StatisticsPageRoutingModule.html":{}},"body":{"modules/StatisticsPageModule.html":{},"modules/StatisticsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["statisticsservice",{"_index":550,"title":{"injectables/StatisticsService.html":{}},"body":{"injectables/BadgeService.html":{},"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["statistik",{"_index":1110,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["statistiken",{"_index":1890,"title":{},"body":{"components/StatisticsPage.html":{}}}],["stats",{"_index":553,"title":{},"body":{"injectables/BadgeService.html":{},"components/StatisticsPage.html":{}}}],["stats:statisticsservice",{"_index":554,"title":{},"body":{"injectables/BadgeService.html":{}}}],["statsarray",{"_index":932,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["statsarray[currentstats",{"_index":1115,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["statsbutton",{"_index":937,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["statsbutton(back",{"_index":956,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["step",{"_index":1657,"title":{},"body":{"components/PrivacyPage.html":{}}}],["still",{"_index":1774,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["stimmt",{"_index":1538,"title":{},"body":{"components/PasswordPage.html":{}}}],["storagebucket",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":651,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["string",{"_index":429,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["strukturierte",{"_index":2632,"title":{},"body":{"index.html":{}}}],["style",{"_index":1489,"title":{},"body":{"components/OptionsPage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["styleurls",{"_index":25,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["sub",{"_index":687,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["sub.unsubscribe",{"_index":711,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["subgroups",{"_index":1128,"title":{},"body":{"components/GroupListPage.html":{}}}],["subscription",{"_index":1143,"title":{},"body":{"components/GroupListPage.html":{}}}],["successful",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendsPage.html":{}}}],["sum",{"_index":2324,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["super",{"_index":2409,"title":{},"body":{"components/TutorialPage.html":{}}}],["support",{"_index":2639,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2640,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2225,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["switchtostats",{"_index":938,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["tab",{"_index":2198,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["table",{"_index":2565,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2564,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1892,"title":{},"body":{"components/StatisticsPage.html":{}}}],["takepicture",{"_index":2042,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["takes",{"_index":755,"title":{},"body":{"components/FriendsPage.html":{},"injectables/GroupService.html":{}}}],["targeted",{"_index":2206,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["teilnehmer",{"_index":2299,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["teilnehmern",{"_index":2628,"title":{},"body":{"index.html":{}}}],["telerik",{"_index":2593,"title":{},"body":{"dependencies.html":{}}}],["temp",{"_index":1222,"title":{},"body":{"injectables/GroupService.html":{}}}],["temp.creator.tostring",{"_index":1229,"title":{},"body":{"injectables/GroupService.html":{}}}],["temp.members",{"_index":1225,"title":{},"body":{"injectables/GroupService.html":{}}}],["temp.name",{"_index":1232,"title":{},"body":{"injectables/GroupService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["text",{"_index":589,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/TransactionCreatePage.html":{}}}],["textarea",{"_index":1635,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["then((result",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(data",{"_index":2136,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["then(snapshot",{"_index":2495,"title":{},"body":{"injectables/UserService.html":{}}}],["thirdmsg",{"_index":1588,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.#searchbar",{"_index":141,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["this.#searchbar.value",{"_index":146,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["this.accepted",{"_index":2223,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.addfriendsoutput",{"_index":777,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.af.authstate.subscribe(afuser",{"_index":1875,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.af.authstate.subscribe(user",{"_index":688,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.af.authstate.subscribe(useraf",{"_index":1702,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.alertcontroller.create",{"_index":1018,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.allselected",{"_index":2298,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.alltransactions",{"_index":1046,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.alltransactions.push(transaction",{"_index":1053,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.amount",{"_index":1607,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.amount}€\\n",{"_index":1622,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.auth.createuserwithemailandpassword(email",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.currentuser.then(user",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.sendpasswordresetemail(email).then",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.signinwithemailandpassword(email.tolocalelowercase",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.signout",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.currentuser).updatepassword(this.newpassword1",{"_index":1541,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.authservice.currentuser.id",{"_index":2242,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.authservice.delete",{"_index":1677,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.authservice.login(email",{"_index":1370,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.logout",{"_index":1678,"title":{},"body":{"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["this.authservice.register(this.email",{"_index":1733,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.awardservice.findbyid(element).then(item",{"_index":703,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["this.badges",{"_index":695,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["this.badges.push(item",{"_index":704,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["this.badgeservice.setbadges(item2",{"_index":698,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.badgeservice.setbadges(user",{"_index":1706,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.calculatestakes",{"_index":2296,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.changestats(30",{"_index":1881,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.checkselectedfriendscontainfriend(friend",{"_index":149,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.createdate",{"_index":2365,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["this.createpiechart",{"_index":1073,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.createpiechart(30",{"_index":1880,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.creator",{"_index":1996,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["this.currentcost",{"_index":1061,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentincome",{"_index":1063,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentstats",{"_index":1095,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentstats>0",{"_index":1094,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currenttotal",{"_index":1059,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currenttransactions",{"_index":1044,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currenttransactions.push(transaction",{"_index":1055,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentuser",{"_index":119,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.currentuser).then(friend",{"_index":782,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.currentuser).then(item2",{"_index":692,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.currentuser).then(members",{"_index":888,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["this.currentuser).then(opentransactions",{"_index":1040,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.currentuser.friends",{"_index":130,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.currentuser.id",{"_index":123,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendProfilePage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.currentuser.id).then(res",{"_index":786,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.delete(group",{"_index":1266,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.deleteuserfromgroup(user",{"_index":1260,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.displayname_currentuser",{"_index":1611,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.displayname_otheruser",{"_index":1601,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.displayname_otheruser},\\n",{"_index":1615,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.duedate",{"_index":1609,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.errormessage",{"_index":1035,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.errors.clear",{"_index":1528,"title":{},"body":{"components/PasswordPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["this.errors.set(\"addfriendsoutput",{"_index":788,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.errors.set(\"addfriendsoutputcolor",{"_index":789,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.errors.set('amount",{"_index":2118,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["this.errors.set('newpassword1",{"_index":1534,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.errors.set('newpassword2",{"_index":1536,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.errors.set('oldpassword",{"_index":1530,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.errors.set('purpose",{"_index":2117,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.errors.size",{"_index":1540,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.fairlydistributedcosts",{"_index":2286,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.fairlydistributedprice",{"_index":2135,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.filteredfriendsandmembers",{"_index":143,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.filteredfriendsandmembers.push(member",{"_index":126,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.filteredfriendsandmembers.push(user",{"_index":136,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.filteredgroups",{"_index":1147,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.filteredgroups.length",{"_index":1163,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.filteredgroups.splice(0",{"_index":1162,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.findbyid(friend).then(result",{"_index":2488,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findgroup",{"_index":1315,"title":{},"body":{"components/InvitePage.html":{}}}],["this.finished",{"_index":2034,"title":{},"body":{"classes/Transaction-1.html":{}}}],["this.firstmsg",{"_index":1613,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.friends",{"_index":779,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.friends.push(friend",{"_index":783,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.friendsandmembers",{"_index":147,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.friendsandmembers.filter(r",{"_index":144,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.friendsandmembers.push(member",{"_index":125,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.friendsandmembers.push(user",{"_index":135,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.friendsservice.addfriend(this.addfriendinput",{"_index":785,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.friendsservice.addfriend(this.user.email",{"_index":712,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.friendsservice.findbyid(element",{"_index":781,"title":{},"body":{"components/FriendsPage.html":{}}}],["this.friendsservice.findbyid(item[0",{"_index":691,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.friendsservice.isfriends(this.user",{"_index":700,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.fromgroup",{"_index":2091,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.getcurrentamount",{"_index":2328,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.getdays(new",{"_index":1946,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["this.gid",{"_index":1991,"title":{},"body":{"classes/Transaction.html":{}}}],["this.group",{"_index":117,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"classes/Transaction-1.html":{}}}],["this.group.creator",{"_index":893,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["this.group.id",{"_index":1068,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.group.members",{"_index":121,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{},"components/InvitePage.html":{}}}],["this.group.members.foreach(friend",{"_index":161,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.group.members.foreach(member",{"_index":122,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.group.members.length",{"_index":892,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["this.group.members.push(this.currentuser",{"_index":894,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["this.group.members.splice(0",{"_index":1405,"title":{},"body":{"components/MemberViewPage.html":{}}}],["this.group.members[i].id",{"_index":1333,"title":{},"body":{"components/InvitePage.html":{}}}],["this.group.name",{"_index":1027,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.group.name.length",{"_index":890,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["this.groupcollection",{"_index":1214,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.add(this.copyandprepare(group",{"_index":1217,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.doc(group.id).delete",{"_index":1219,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.doc(group.id).update(this.copyandprepare(group",{"_index":1218,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.doc(id).get().topromise",{"_index":1221,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.get().topromise",{"_index":1244,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.get().topromise().then(doc",{"_index":1233,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcollection.valuechanges({idfield",{"_index":1216,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupfound",{"_index":1329,"title":{},"body":{"components/InvitePage.html":{}}}],["this.groupname",{"_index":1603,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{}}}],["this.groupname}\\n",{"_index":1618,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.groups",{"_index":1150,"title":{},"body":{"components/GroupListPage.html":{},"components/TransactionCreatePage.html":{}}}],["this.groups.filter(r",{"_index":1148,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.groups.push(this.groupservice.creategroup(group",{"_index":1160,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.groupservice.addmembers(this.group",{"_index":887,"title":{},"body":{"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{}}}],["this.groupservice.addusertogroup(this.group,this.currentuser",{"_index":1335,"title":{},"body":{"components/InvitePage.html":{}}}],["this.groupservice.delete(this.group",{"_index":1038,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.groupservice.deleteuserfromallgroups(this.user",{"_index":1674,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.groupservice.deleteuserfromgroup(this.currentuser",{"_index":1043,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.groupservice.getall().subscribe(groups",{"_index":1152,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.groupservice.getgroupbyid(groupid).then(g",{"_index":1049,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["this.groupservice.getgroupbyid(groupid[1]).then(group",{"_index":1327,"title":{},"body":{"components/InvitePage.html":{}}}],["this.groupservice.getgroupbyid(this.route.snapshot.parammap.get('groupid')).then(group",{"_index":2092,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.groupservice.getgroupsbyuserid(this.currentuser.id).then(groups",{"_index":2105,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.groupservice.new(this.group",{"_index":895,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["this.groupservice.update(this.group",{"_index":1006,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["this.hasstake",{"_index":2217,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.iconname",{"_index":1366,"title":{},"body":{"components/LoginPage.html":{}}}],["this.id",{"_index":1785,"title":{},"body":{"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.income",{"_index":1882,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.inputtype",{"_index":1365,"title":{},"body":{"components/LoginPage.html":{}}}],["this.isfriend",{"_index":699,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.isfriends(curuser",{"_index":851,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.isfriends(ret",{"_index":829,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.lastdate",{"_index":2363,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["this.message",{"_index":1330,"title":{},"body":{"components/InvitePage.html":{}}}],["this.modalcontroller.create",{"_index":1268,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.modalcontroller.dismiss(msg",{"_index":1627,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.modalcontroller.dismiss(this.newselectedmembers",{"_index":188,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.navctrl.back",{"_index":896,"title":{},"body":{"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{}}}],["this.navctrl.pop",{"_index":2131,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.newestdate",{"_index":1836,"title":{},"body":{"classes/Statistic.html":{}}}],["this.newpassword1",{"_index":1525,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.newpassword1.length",{"_index":1533,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.newpassword2",{"_index":1526,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.newpassword2.length",{"_index":1535,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.newselectedmembers",{"_index":150,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.filter(f",{"_index":151,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.foreach(f",{"_index":156,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.includes(friend",{"_index":162,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.length",{"_index":128,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.push(friend",{"_index":154,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.newselectedmembers.splice(0",{"_index":127,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.nextdate",{"_index":2364,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["this.notpaid",{"_index":2224,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.oldpassword",{"_index":1524,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.oldpassword.length",{"_index":1529,"title":{},"body":{"components/PasswordPage.html":{}}}],["this.oldtransactions",{"_index":1045,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.oldtransactions.push(transaction",{"_index":1056,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.originaltransaction",{"_index":2362,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["this.otheruser",{"_index":1788,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["this.otheruserid",{"_index":2213,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.outcome",{"_index":1885,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.outgoing",{"_index":1787,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["this.paidandnotaccepted",{"_index":2220,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.participants",{"_index":2294,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.participants.length",{"_index":2293,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.participants.push(participant.user",{"_index":2292,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.participation.foreach(participant",{"_index":2290,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.participation.push({user",{"_index":2289,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.password",{"_index":1734,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.pending",{"_index":1786,"title":{},"body":{"classes/SimpleTransaction.html":{},"classes/Transaction.html":{}}}],["this.photo",{"_index":1995,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.pie",{"_index":1075,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["this.pie.data.datasets.foreach((dataset",{"_index":1889,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.pie.update",{"_index":1098,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["this.purchasedate",{"_index":1993,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.purpose",{"_index":1605,"title":{},"body":{"components/PaymentReminderPage.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.purpose}\\n",{"_index":1620,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.rhythm",{"_index":1994,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["this.route.params.subscribe(item",{"_index":690,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.route.snapshot.parammap.get('fromgroup",{"_index":2090,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":1048,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{}}}],["this.router.navigate(['friend",{"_index":784,"title":{},"body":{"components/FriendsPage.html":{},"components/MemberViewPage.html":{}}}],["this.router.navigate(['friends",{"_index":1707,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.router.navigate(['group",{"_index":1166,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.router.navigate(['home",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.router.navigate(['login",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['member",{"_index":1067,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.router.navigate(['options",{"_index":1527,"title":{},"body":{"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{}}}],["this.router.navigate(['profile",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/OptionsPage.html":{}}}],["this.router.navigate(['transaction",{"_index":1066,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.router.navigate(['tutorial",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate([site",{"_index":1481,"title":{},"body":{"components/OptionsPage.html":{}}}],["this.savealert(\"payment",{"_index":1477,"title":{},"body":{"components/OptionsPage.html":{}}}],["this.savealert('password",{"_index":1478,"title":{},"body":{"components/OptionsPage.html":{}}}],["this.savealert('privacy",{"_index":1479,"title":{},"body":{"components/OptionsPage.html":{}}}],["this.searchbarvisible",{"_index":142,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["this.secondmsg",{"_index":1625,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.secondpassword",{"_index":1732,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.selectallusers",{"_index":2132,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.self",{"_index":1887,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.stake",{"_index":2218,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.startdate",{"_index":1835,"title":{},"body":{"classes/Statistic.html":{}}}],["this.statistic",{"_index":1057,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.statistic.alltimecost",{"_index":1062,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.statistic.alltimeincome",{"_index":1064,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.statistic.alltimetotal",{"_index":1060,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.statisticsservice.getgroupstatistics(this.alltransactions",{"_index":1058,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.stats.getallexpensesoftime(7",{"_index":571,"title":{},"body":{"injectables/BadgeService.html":{}}}],["this.stats.getallexpensesoftime(days",{"_index":1886,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.stats.getallincomeoftime",{"_index":566,"title":{},"body":{"injectables/BadgeService.html":{}}}],["this.stats.getallincomeoftime(days",{"_index":1883,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.stats.getallselfmadetransactionsoftime(this.user.id",{"_index":1888,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.stats.getallselfmadetransactionsoftime(user.id",{"_index":555,"title":{},"body":{"injectables/BadgeService.html":{}}}],["this.subgroups",{"_index":1151,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.subgroups.unsubscribe",{"_index":1165,"title":{},"body":{"components/GroupListPage.html":{}}}],["this.thirdmsg",{"_index":1616,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["this.timespan",{"_index":1837,"title":{},"body":{"classes/Statistic.html":{}}}],["this.transaction",{"_index":2094,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transaction.accepted",{"_index":2103,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.accepted.push(acceptedentry",{"_index":2114,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transaction.accepted.push({user",{"_index":2322,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.transaction.amount",{"_index":2106,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transaction.creator.id",{"_index":2110,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transaction.group",{"_index":2093,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.group.members",{"_index":2108,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.group.members.foreach(user",{"_index":2288,"title":{},"body":{"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transaction.group.members.length",{"_index":2107,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transaction.paid",{"_index":2102,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.paid.foreach(p",{"_index":2243,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transaction.paid.push(paidentry",{"_index":2115,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transaction.paid.push({user",{"_index":2323,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.transaction.participation",{"_index":2104,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.participation.foreach(entry",{"_index":2215,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transaction.participation.foreach(participation",{"_index":2325,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.transaction.participation.push(stakeentry",{"_index":2113,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transaction.participation.push({user",{"_index":2321,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["this.transaction.photo",{"_index":2137,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.transaction.purpose",{"_index":2116,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["this.transaction.rhythm",{"_index":2120,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transactions",{"_index":1879,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.transactionservice.checkalltransactionsfinishedingroup(this.group).then(opentransactions",{"_index":1033,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.transactionservice.checktransactionsfinishedingroupbyuser(this.group",{"_index":167,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{}}}],["this.transactionservice.delete(this.transaction.id",{"_index":2232,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.deletealltransactionsbyuser(this.user",{"_index":1675,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.transactionservice.deletetracker(tracker",{"_index":2237,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.findtrackerbyid(this.transaction.id).then(tracker",{"_index":2236,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.getalltransactionbygroup(this.group).then(transactions",{"_index":1051,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.transactionservice.getlocally",{"_index":2212,"title":{},"body":{"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transactionservice.getrhythmmiliseconds(this.transaction.rhythm",{"_index":2128,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transactionservice.getstakeforuser(this.currentuser",{"_index":2219,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.gettransactionbyid(docref.id).then((doc",{"_index":2121,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transactionservice.hasuserpaid(this.currentuser.id",{"_index":2221,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.persist(this.transaction).then(docref",{"_index":2297,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["this.transactionservice.persisttracker(tracker",{"_index":2130,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["this.transactionservice.savelocally(this.transaction",{"_index":2133,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["this.transactionservice.savelocally(transaction",{"_index":1065,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["this.transactionservice.update(this.transaction",{"_index":2239,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionservice.waspaymentaccepted(this.currentuser.id",{"_index":2222,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["this.transactionsservice.getalltransactionbyuser(item2",{"_index":696,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.transactionsservice.getalltransactionbyuser(user",{"_index":1705,"title":{},"body":{"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["this.type",{"_index":1992,"title":{},"body":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}}}],["this.update(curuser",{"_index":856,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.update(group",{"_index":1265,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.update(result",{"_index":2492,"title":{},"body":{"injectables/UserService.html":{}}}],["this.update(u",{"_index":855,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.user",{"_index":693,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["this.user.awards.foreach(element",{"_index":702,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["this.user.awardspublic",{"_index":710,"title":{},"body":{"components/FriendProfilePage.html":{},"components/PrivacyPage.html":{}}}],["this.user.awardspublicfriends",{"_index":701,"title":{},"body":{"components/FriendProfilePage.html":{},"components/PrivacyPage.html":{}}}],["this.user.description",{"_index":706,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.user.descriptionpublic",{"_index":705,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.user.ec_card",{"_index":1708,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.id)[0",{"_index":1884,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.user.imagepublic",{"_index":707,"title":{},"body":{"components/FriendProfilePage.html":{}}}],["this.user.kreditcard",{"_index":1709,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.paypal",{"_index":1710,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.user.profilepic",{"_index":708,"title":{},"body":{"components/FriendProfilePage.html":{},"components/OptionsPage.html":{}}}],["this.usercollection",{"_index":442,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["this.usercollection.doc(id).delete",{"_index":2486,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usercollection.doc(id).get().topromise().then(res",{"_index":444,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["this.usercollection.doc(id).set(this.copyandprepare(user",{"_index":2485,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usercollection.doc(user.id).update(this.copyandprepare(user",{"_index":864,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["this.usercollection.get",{"_index":2493,"title":{},"body":{"injectables/UserService.html":{}}}],["this.username).then(ret",{"_index":1735,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.userold",{"_index":1460,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["this.userservice.delete(this.user.id",{"_index":1676,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.userservice.deleteuserfromfriends(this.user",{"_index":1673,"title":{},"body":{"components/PrivacyPage.html":{}}}],["this.userservice.findbyemail(email.tolocalelowercase()).then(async",{"_index":839,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.userservice.findbyid(afuser.uid).then(user",{"_index":1877,"title":{},"body":{"components/StatisticsPage.html":{}}}],["this.userservice.findbyid(currentuserid).then(async",{"_index":849,"title":{},"body":{"injectables/FriendsService.html":{}}}],["this.userservice.findbyid(friend.tostring()).then(user",{"_index":134,"title":{},"body":{"components/AddMembersPage.html":{}}}],["this.userservice.findbyid(groups[i].creator.tostring()).then(creator",{"_index":1250,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.userservice.findbyid(groups[i].members[j].tostring()).then(member",{"_index":1256,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.userservice.findbyid(m.tostring()).then(u",{"_index":1241,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.userservice.findbyid(member.tostring()).then(user",{"_index":1226,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.userservice.findbyid(result.user.uid).then(user",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyid(user.uid).then(result",{"_index":689,"title":{},"body":{"components/FriendProfilePage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["this.userservice.findbyid(user.uid).then(value",{"_index":778,"title":{},"body":{"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["this.userservice.findbyid(useraf.uid).then(user",{"_index":1704,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.userservice.persist(result.user.uid",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(this.user",{"_index":1469,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["this.userservice.update(user",{"_index":575,"title":{},"body":{"injectables/BadgeService.html":{}}}],["this.view",{"_index":1072,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["tied",{"_index":1777,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["time",{"_index":959,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["timespan",{"_index":1811,"title":{},"body":{"classes/Statistic.html":{}}}],["title",{"_index":592,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["today",{"_index":1936,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["toggleselectall",{"_index":2266,"title":{},"body":{"components/TransactionParticipantsPage.html":{}}}],["top",{"_index":597,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{}}}],["topromise",{"_index":2494,"title":{},"body":{"injectables/UserService.html":{}}}],["total",{"_index":2019,"title":{},"body":{"classes/Transaction-1.html":{}}}],["tracker",{"_index":2123,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["transaction",{"_index":240,"title":{"classes/Transaction.html":{},"classes/Transaction-1.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"classes/TransactionTracker.html":{},"components/TutorialPage.html":{},"coverage.html":{}}}],["transaction.accepted",{"_index":1776,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["transaction.amount",{"_index":1114,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["transaction.creator",{"_index":2125,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["transaction.creator.displayname",{"_index":1113,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionDetailsPage.html":{}}}],["transaction.group.name",{"_index":2143,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["transaction.id",{"_index":1769,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["transaction.model",{"_index":2361,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["transaction.paid",{"_index":1775,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["transaction.participation",{"_index":1770,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["transaction.purchasedate",{"_index":1814,"title":{},"body":{"classes/Statistic.html":{},"injectables/StatisticsService.html":{}}}],["transaction.purpose",{"_index":1112,"title":{},"body":{"components/GroupDetailsPage.html":{},"classes/SimpleTransaction.html":{},"components/TransactionDetailsPage.html":{}}}],["transaction.type",{"_index":1941,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["transaction/transaction",{"_index":1296,"title":{},"body":{"modules/HomePageModule.html":{}}}],["transactioncreatepage",{"_index":239,"title":{"components/TransactionCreatePage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["transactioncreatepagemodule",{"_index":1293,"title":{"modules/TransactionCreatePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules.html":{},"overview.html":{}}}],["transactioncreatepageroutingmodule",{"_index":2167,"title":{"modules/TransactionCreatePageRoutingModule.html":{}},"body":{"modules/TransactionCreatePageModule.html":{},"modules/TransactionCreatePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactiondetailspage",{"_index":241,"title":{"components/TransactionDetailsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["transactiondetailspagemodule",{"_index":2255,"title":{"modules/TransactionDetailsPageModule.html":{}},"body":{"modules/TransactionDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["transactiondetailspageroutingmodule",{"_index":2259,"title":{"modules/TransactionDetailsPageRoutingModule.html":{}},"body":{"modules/TransactionDetailsPageModule.html":{},"modules/TransactionDetailsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionparticipantspage",{"_index":242,"title":{"components/TransactionParticipantsPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["transactionparticipantspagemodule",{"_index":2301,"title":{"modules/TransactionParticipantsPageModule.html":{}},"body":{"modules/TransactionParticipantsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionparticipantspageroutingmodule",{"_index":2305,"title":{"modules/TransactionParticipantsPageRoutingModule.html":{}},"body":{"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionParticipantsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactions",{"_index":539,"title":{},"body":{"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionParticipantsPage.html":{},"classes/TransactionTracker.html":{}}}],["transactions.foreach(item",{"_index":1972,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["transactions.foreach(transaction",{"_index":1052,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/StatisticsService.html":{}}}],["transactionservice",{"_index":111,"title":{},"body":{"components/AddMembersPage.html":{},"components/FriendProfilePage.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"coverage.html":{}}}],["transactionservice.getlocally",{"_index":2319,"title":{},"body":{"components/TransactionStakesPage.html":{}}}],["transactionservice.getstakeforuser(member",{"_index":2254,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["transactionsservice",{"_index":682,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{}}}],["transactionstakespage",{"_index":244,"title":{"components/TransactionStakesPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"components/TutorialPage.html":{},"coverage.html":{},"overview.html":{}}}],["transactionstakespagemodule",{"_index":2337,"title":{"modules/TransactionStakesPageModule.html":{}},"body":{"modules/TransactionStakesPageModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionstakespageroutingmodule",{"_index":2341,"title":{"modules/TransactionStakesPageRoutingModule.html":{}},"body":{"modules/TransactionStakesPageModule.html":{},"modules/TransactionStakesPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactiontracker",{"_index":2064,"title":{"classes/TransactionTracker.html":{}},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"coverage.html":{}}}],["transactiontracker(transaction",{"_index":2124,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{}}}],["transaktion",{"_index":1106,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["transaktion:\\n",{"_index":1617,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["transaktionen",{"_index":183,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{},"index.html":{}}}],["transcation",{"_index":2028,"title":{},"body":{"classes/Transaction-1.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["true",{"_index":132,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PrivacyPage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"miscellaneous/variables.html":{}}}],["true).then(res",{"_index":1878,"title":{},"body":{"components/StatisticsPage.html":{}}}],["true).then(transactions",{"_index":697,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["ts",{"_index":1314,"title":{},"body":{"components/InvitePage.html":{},"classes/Statistic.html":{},"injectables/StatisticsService.html":{}}}],["tslib",{"_index":2602,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":247,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{}}}],["tutorial.page",{"_index":2426,"title":{},"body":{"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{}}}],["tutorial.page.html",{"_index":2368,"title":{},"body":{"components/TutorialPage.html":{}}}],["tutorial.page.scss",{"_index":2367,"title":{},"body":{"components/TutorialPage.html":{}}}],["tutorialpage",{"_index":246,"title":{"components/TutorialPage.html":{}},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{},"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tutorialpagemodule",{"_index":2420,"title":{"modules/TutorialPageModule.html":{}},"body":{"modules/TutorialPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tutorialpageroutingmodule",{"_index":2424,"title":{"modules/TutorialPageRoutingModule.html":{}},"body":{"modules/TutorialPageModule.html":{},"modules/TutorialPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["two",{"_index":821,"title":{},"body":{"injectables/FriendsService.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{}}}],["typ",{"_index":2247,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/ArwardService.html":{},"injectables/AuthService.html":{},"classes/Award.html":{},"injectables/BadgeService.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["täglich",{"_index":2152,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["u",{"_index":846,"title":{},"body":{"injectables/FriendsService.html":{}}}],["u.friends.push(currentuserid",{"_index":854,"title":{},"body":{"injectables/FriendsService.html":{}}}],["unbekannter",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["und",{"_index":1896,"title":{},"body":{"components/StatisticsPage.html":{},"components/TutorialPage.html":{},"index.html":{}}}],["undefined",{"_index":848,"title":{},"body":{"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"components/InvitePage.html":{}}}],["unfilters",{"_index":1132,"title":{},"body":{"components/GroupListPage.html":{}}}],["ungültige",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["unsere",{"_index":2370,"title":{},"body":{"components/TutorialPage.html":{}}}],["unserer",{"_index":2417,"title":{},"body":{"components/TutorialPage.html":{}}}],["unten",{"_index":2397,"title":{},"body":{"components/TutorialPage.html":{}}}],["up",{"_index":2353,"title":{},"body":{"classes/TransactionTracker.html":{}}}],["update",{"_index":806,"title":{},"body":{"injectables/FriendsService.html":{},"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["update(group",{"_index":1210,"title":{},"body":{"injectables/GroupService.html":{}}}],["update(user",{"_index":823,"title":{},"body":{"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":825,"title":{},"body":{"injectables/FriendsService.html":{},"components/StatisticsPage.html":{}}}],["updates",{"_index":966,"title":{},"body":{"components/GroupDetailsPage.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["upload",{"_index":2197,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["usage",{"_index":1762,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["use",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["useclass",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":15,"title":{},"body":{"components/AddMembersPage.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"classes/Statistic.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["user",{"_index":51,"title":{"classes/User.html":{}},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"classes/Group.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"classes/TransactionTracker.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.awards",{"_index":2477,"title":{},"body":{"injectables/UserService.html":{}}}],["user.awards.includes(\"2jgbrlrtuci9cjxxwv5g",{"_index":558,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.includes(\"dhiv113gmkqmxesxqf2k",{"_index":564,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.includes(\"fdb031aej8qazbadvia8",{"_index":569,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.includes(\"knugsj8xbsuwc0yvdysu",{"_index":562,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.includes(\"pthz34gvf4eb6qlxpavv",{"_index":573,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"2jgbrlrtuci9cjxxwv5g",{"_index":559,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"dhiv113gmkqmxesxqf2k",{"_index":565,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"fdb031aej8qazbadvia8",{"_index":570,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"knugsj8xbsuwc0yvdysu",{"_index":563,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awards.push(\"pthz34gvf4eb6qlxpavv",{"_index":574,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.awardspublic",{"_index":1652,"title":{},"body":{"components/PrivacyPage.html":{},"injectables/UserService.html":{}}}],["user.awardspublicfriends",{"_index":1653,"title":{},"body":{"components/PrivacyPage.html":{},"injectables/UserService.html":{}}}],["user.cash",{"_index":2480,"title":{},"body":{"injectables/UserService.html":{}}}],["user.delete().then",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.description",{"_index":722,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["user.descriptionpublic",{"_index":2479,"title":{},"body":{"injectables/UserService.html":{}}}],["user.displayname",{"_index":721,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{},"injectables/UserService.html":{}}}],["user.ec_card",{"_index":2481,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email",{"_index":2475,"title":{},"body":{"injectables/UserService.html":{}}}],["user.friends",{"_index":2464,"title":{},"body":{"injectables/UserService.html":{}}}],["user.friends.foreach(friend",{"_index":2487,"title":{},"body":{"injectables/UserService.html":{}}}],["user.friends.length",{"_index":560,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.id",{"_index":1253,"title":{},"body":{"injectables/GroupService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{},"injectables/UserService.html":{}}}],["user.id)[0",{"_index":567,"title":{},"body":{"injectables/BadgeService.html":{}}}],["user.imagepublic",{"_index":2484,"title":{},"body":{"injectables/UserService.html":{}}}],["user.kreditcard",{"_index":2483,"title":{},"body":{"injectables/UserService.html":{}}}],["user.model",{"_index":873,"title":{},"body":{"classes/Group.html":{},"classes/SimpleTransaction.html":{},"classes/Transaction-1.html":{},"classes/TransactionTracker.html":{}}}],["user.paypal",{"_index":2482,"title":{},"body":{"injectables/UserService.html":{}}}],["user.profilepic",{"_index":2474,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"injectables/FriendsService.html":{},"injectables/GroupService.html":{}}}],["user1",{"_index":822,"title":{},"body":{"injectables/FriendsService.html":{}}}],["user1.friends",{"_index":862,"title":{},"body":{"injectables/FriendsService.html":{}}}],["user2",{"_index":819,"title":{},"body":{"injectables/FriendsService.html":{}}}],["user2.id",{"_index":861,"title":{},"body":{"injectables/FriendsService.html":{}}}],["useraf",{"_index":1703,"title":{},"body":{"components/ProfilePage.html":{}}}],["usercollection",{"_index":426,"title":{},"body":{"injectables/ArwardService.html":{},"injectables/FriendsService.html":{},"injectables/UserService.html":{}}}],["userid",{"_index":1914,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["username",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterPage.html":{},"injectables/UserService.html":{}}}],["username:string",{"_index":2473,"title":{},"body":{"injectables/UserService.html":{}}}],["userold",{"_index":1420,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["users",{"_index":811,"title":{},"body":{"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/MemberViewPage.html":{},"components/PaymentReminderPage.html":{},"components/TransactionParticipantsPage.html":{}}}],["userservice",{"_index":105,"title":{"injectables/UserService.html":{}},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uses",{"_index":86,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupCreatePage.html":{}}}],["value",{"_index":72,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/Statistic.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"miscellaneous/variables.html":{}}}],["value.friends.foreach(async",{"_index":780,"title":{},"body":{"components/FriendsPage.html":{}}}],["var",{"_index":198,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"injectables/StatisticsService.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["variable",{"_index":1446,"title":{},"body":{"components/OptionsPage.html":{},"coverage.html":{}}}],["variables",{"_index":652,"title":{"miscellaneous/variables.html":{}},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/StatisticsPage.html":{},"miscellaneous/variables.html":{}}}],["varibals",{"_index":1508,"title":{},"body":{"components/PasswordPage.html":{}}}],["vereinfacht.man",{"_index":2618,"title":{},"body":{"index.html":{}}}],["vergessen",{"_index":1374,"title":{},"body":{"components/LoginPage.html":{}}}],["verlassen",{"_index":1039,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["version",{"_index":1757,"title":{},"body":{"classes/SimpleTransaction.html":{}}}],["verwefen",{"_index":1464,"title":{},"body":{"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{}}}],["via",{"_index":630,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionParticipantsPage.html":{}}}],["viel",{"_index":2415,"title":{},"body":{"components/TutorialPage.html":{}}}],["view",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupDetailsPage.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"classes/SimpleTransaction.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionStakesPage.html":{}}}],["view'},{'name",{"_index":223,"title":{},"body":{"components/AddMembersPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"components/TutorialPage.html":{}}}],["view.module').then",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["view.module.ts",{"_index":1414,"title":{},"body":{"modules/MemberViewPageModule.html":{}}}],["view.page",{"_index":1415,"title":{},"body":{"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{}}}],["view.page.html",{"_index":1394,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.scss",{"_index":1393,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts",{"_index":1392,"title":{},"body":{"components/MemberViewPage.html":{},"coverage.html":{}}}],["view.page.ts:23",{"_index":1401,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts:24",{"_index":1400,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts:25",{"_index":1399,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts:55",{"_index":1396,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view.page.ts:89",{"_index":1398,"title":{},"body":{"components/MemberViewPage.html":{}}}],["view/member",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MemberViewPage.html":{},"modules/MemberViewPageModule.html":{},"modules/MemberViewPageRoutingModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":100,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"components/StatisticsPage.html":{}}}],["viewchild('piechart",{"_index":985,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["viewchild(ionsearchbar",{"_index":137,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{}}}],["viewed",{"_index":2179,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["viewmembers",{"_index":939,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["viewtransaction",{"_index":940,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["viewtransaction(transaction",{"_index":969,"title":{},"body":{"components/GroupDetailsPage.html":{}}}],["viewuser",{"_index":1395,"title":{},"body":{"components/MemberViewPage.html":{}}}],["viewuser(id",{"_index":1397,"title":{},"body":{"components/MemberViewPage.html":{}}}],["visibility",{"_index":1362,"title":{},"body":{"components/LoginPage.html":{}}}],["visible",{"_index":81,"title":{},"body":{"components/AddMembersPage.html":{},"components/GroupListPage.html":{},"components/LoginPage.html":{}}}],["visible/disguised",{"_index":1354,"title":{},"body":{"components/LoginPage.html":{}}}],["void",{"_index":57,"title":{},"body":{"components/AddMembersPage.html":{},"injectables/AuthService.html":{},"injectables/BadgeService.html":{},"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/GroupCreatePage.html":{},"components/GroupDetailsPage.html":{},"components/GroupListPage.html":{},"injectables/GroupService.html":{},"components/InvitePage.html":{},"components/LoginPage.html":{},"components/MemberViewPage.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PaymentReminderPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{},"components/StatisticsPage.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{},"components/TransactionParticipantsPage.html":{},"components/TransactionStakesPage.html":{},"injectables/UserService.html":{}}}],["von",{"_index":2336,"title":{},"body":{"components/TransactionStakesPage.html":{},"index.html":{}}}],["vorhanden",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/PaymentPage.html":{}}}],["way",{"_index":1280,"title":{},"body":{"injectables/GroupService.html":{}}}],["web",{"_index":2612,"title":{},"body":{"index.html":{}}}],["week",{"_index":1962,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["weekly",{"_index":2227,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["weight",{"_index":734,"title":{},"body":{"components/FriendProfilePage.html":{},"components/ProfilePage.html":{}}}],["well",{"_index":1654,"title":{},"body":{"components/PrivacyPage.html":{}}}],["wem",{"_index":2635,"title":{},"body":{"index.html":{}}}],["wenn",{"_index":2381,"title":{},"body":{"components/TutorialPage.html":{}}}],["wer",{"_index":2637,"title":{},"body":{"index.html":{}}}],["werden",{"_index":177,"title":{},"body":{"components/AddMembersPage.html":{},"components/PrivacyPage.html":{}}}],["werden.dadurch",{"_index":2630,"title":{},"body":{"index.html":{}}}],["wg.in",{"_index":2626,"title":{},"body":{"index.html":{}}}],["whether",{"_index":662,"title":{},"body":{"components/FriendProfilePage.html":{},"components/FriendsPage.html":{},"injectables/FriendsService.html":{},"components/OptionsPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"components/ProfilePage.html":{},"classes/SimpleTransaction.html":{},"components/StatisticsPage.html":{},"classes/Transaction-1.html":{},"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["white",{"_index":1631,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["whose",{"_index":2032,"title":{},"body":{"classes/Transaction-1.html":{}}}],["width",{"_index":606,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/FriendProfilePage.html":{},"components/LoginPage.html":{},"components/OptionsPage.html":{},"components/PaymentReminderPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["wie",{"_index":2622,"title":{},"body":{"index.html":{}}}],["wiederholen",{"_index":1537,"title":{},"body":{"components/PasswordPage.html":{},"components/RegisterPage.html":{}}}],["wiederkehren",{"_index":2233,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["willkommen",{"_index":2369,"title":{},"body":{"components/TutorialPage.html":{}}}],["window.location.search",{"_index":1325,"title":{},"body":{"components/InvitePage.html":{}}}],["wird",{"_index":2616,"title":{},"body":{"index.html":{}}}],["wirklich",{"_index":1669,"title":{},"body":{"components/PrivacyPage.html":{},"components/TransactionDetailsPage.html":{}}}],["without",{"_index":1195,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["woche",{"_index":997,"title":{},"body":{"components/GroupDetailsPage.html":{},"components/StatisticsPage.html":{}}}],["work",{"_index":548,"title":{},"body":{"injectables/BadgeService.html":{}}}],["wrap",{"_index":1634,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["wöchentlich",{"_index":2153,"title":{},"body":{"components/TransactionCreatePage.html":{},"components/TransactionDetailsPage.html":{}}}],["yc5ccl30k1",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["year",{"_index":1945,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["yearly",{"_index":2229,"title":{},"body":{"components/TransactionDetailsPage.html":{}}}],["years",{"_index":2081,"title":{},"body":{"components/TransactionCreatePage.html":{}}}],["yes",{"_index":529,"title":{},"body":{"classes/Award.html":{},"classes/Group.html":{},"components/OptionsPage.html":{},"components/PasswordPage.html":{},"components/PaymentPage.html":{},"components/PrivacyPage.html":{},"classes/Transaction.html":{},"classes/User.html":{}}}],["z.b",{"_index":2623,"title":{},"body":{"index.html":{}}}],["zahlungserinnerung",{"_index":1628,"title":{},"body":{"components/PaymentReminderPage.html":{}}}],["zahlungsmittel",{"_index":1483,"title":{},"body":{"components/OptionsPage.html":{},"components/PaymentPage.html":{}}}],["zeichen",{"_index":904,"title":{},"body":{"components/GroupCreatePage.html":{}}}],["zeitraum",{"_index":1891,"title":{},"body":{"components/StatisticsPage.html":{}}}],["zone.js",{"_index":2604,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":261,"title":{},"body":{"modules/AddMembersPageModule.html":{},"modules/AppModule.html":{},"modules/ChangePasswordPageModule.html":{},"modules/FriendProfilePageModule.html":{},"modules/FriendsPageModule.html":{},"modules/GroupCreatePageModule.html":{},"modules/GroupDetailsPageModule.html":{},"modules/GroupListPageModule.html":{},"modules/HomePageModule.html":{},"modules/InvitePageModule.html":{},"modules/LoginPageModule.html":{},"modules/MemberViewPageModule.html":{},"modules/OptionsPageModule.html":{},"modules/PasswordPageModule.html":{},"modules/PaymentPageModule.html":{},"modules/PaymentReminderPageModule.html":{},"modules/PrivacyPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/StatisticsPageModule.html":{},"modules/TransactionCreatePageModule.html":{},"modules/TransactionDetailsPageModule.html":{},"modules/TransactionParticipantsPageModule.html":{},"modules/TransactionStakesPageModule.html":{},"modules/TutorialPageModule.html":{},"overview.html":{}}}],["zu",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"components/TutorialPage.html":{}}}],["zum",{"_index":1740,"title":{},"body":{"components/RegisterPage.html":{}}}],["zurück",{"_index":587,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["zweck",{"_index":1619,"title":{},"body":{"components/PaymentReminderPage.html":{},"components/TransactionCreatePage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddMembersPage.html":{"url":"components/AddMembersPage.html","title":"component - AddMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/add-members/add-members.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is used to add new members to the group\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-members\n            \n\n            \n                styleUrls\n                ./add-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #searchbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                filteredFriendsAndMembers\n                            \n                            \n                                friendsAndMembers\n                            \n                            \n                                group\n                            \n                            \n                                newSelectedMembers\n                            \n                            \n                                searchbarVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                cancelSearch\n                            \n                            \n                                checkSelectedFriendsContainFriend\n                            \n                            \n                                doSearch\n                            \n                            \n                                select\n                            \n                            \n                                setVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchbar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:146\n                \n            \n\n\n            \n                \n                    This function adds the new selected user to the group\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSearch\n                        \n                    \n                \n            \n            \n                \ncancelSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:111\n                \n            \n\n\n            \n                \n                    This function deactivates the searchbar and hides it\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkSelectedFriendsContainFriend\n                        \n                    \n                \n            \n            \n                \ncheckSelectedFriendsContainFriend(friend: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:133\n                \n            \n\n\n            \n                \n                    This function checks if the selected user is already a group member\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    friend\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe selected user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doSearch\n                        \n                    \n                \n            \n            \n                \ndoSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:103\n                \n            \n\n\n            \n                \n                    this function filters the friends and members with the value in search bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n            \n                \nselect(friend: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:121\n                \n            \n\n\n            \n                \n                    This function is used to push or deleted the selected friend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    friend\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe selected user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVisible\n                        \n                    \n                \n            \n            \n                \nsetVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/add-members/add-members.page.ts:96\n                \n            \n\n\n            \n                \n                    this function makes the searchbar visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #searchbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonSearchbar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:35\n                        \n                    \n\n            \n                \n                    the user who currently uses the app\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFriendsAndMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:39\n                        \n                    \n\n            \n                \n                    array of all friends and members with filter from searchbar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendsAndMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:23\n                        \n                    \n\n            \n                \n                    array of all friends and group members\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:31\n                        \n                    \n\n            \n                \n                    the selected group from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newSelectedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:27\n                        \n                    \n\n            \n                \n                    new selected user for group\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchbarVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/group/add-members/add-members.page.ts:43\n                        \n                    \n\n            \n                \n                    boolean if searchbar visible or not\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchbar\n                    \n                \n\n\n                \n                    \n                        setsearchbar(sb: IonSearchbar)\n                    \n                \n                            \n                                \n                                    Defined in src/app/group/add-members/add-members.page.ts:86\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            sb\n                                                    \n                                                            \n                                                                        IonSearchbar\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {IonSearchbar, ModalController, NavParams} from \"@ionic/angular\";\nimport {UserService} from 'src/app/services/user.service';\nimport {User} from \"../../models/user.model\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Group} from \"../../models/group.model\";\nimport {TransactionService} from \"../../services/transaction.service\";\n\n/**\n * This class is used to add new members to the group\n */\n@Component({\n  selector: 'app-add-members',\n  templateUrl: './add-members.page.html',\n  styleUrls: ['./add-members.page.scss'],\n})\n\nexport class AddMembersPage implements OnInit {\n\n  /**\n   array of all friends and group members\n   */\n  friendsAndMembers: User[] = [];\n  /**\n   new selected user for group\n   */\n  newSelectedMembers: User[] = [];\n  /**\n   the selected group from user\n   */\n  group: Group;\n  /**\n   the user who currently uses the app\n   */\n  currentUser: User;\n  /**\n   array of all friends and members with filter from searchbar\n   */\n  filteredFriendsAndMembers: User[] = [];\n  /**\n   boolean if searchbar visible or not\n   */\n  searchbarVisible = false;\n\n  /**\n   * @ignore\n   */\n  constructor(private modalController: ModalController,\n              public navParams: NavParams,\n              public authService: AuthService,\n              public transactionService: TransactionService,\n              public userService: UserService) {\n    this.group = navParams.get('groupParam');\n    this.currentUser = navParams.get('currentUserParam');\n    if (this.group.members) {\n      this.group.members.forEach(member => {\n        if (this.currentUser.id != member.id) {\n          this.friendsAndMembers.push(member);\n          this.filteredFriendsAndMembers.push(member);\n        }\n      });\n      this.newSelectedMembers.splice(0, this.newSelectedMembers.length, ...this.group.members);\n    }\n    let friendIsMember;\n    for (let friend of this.currentUser.friends) {\n      friendIsMember = false;\n      if (this.group.members) {\n        for (let member of this.group.members) {\n          if (friend.toString() == member.id) {\n            friendIsMember = true;\n            break;\n          }\n        }\n      }\n      if (!friendIsMember) {\n        this.userService.findById(friend.toString()).then(user => {\n          this.friendsAndMembers.push(user);\n          this.filteredFriendsAndMembers.push(user);\n        });\n      }\n    }\n  }\n\n  #searchbar: IonSearchbar;\n  @ViewChild(IonSearchbar)\n  set searchbar(sb: IonSearchbar) {\n    if (sb) {\n      sb.setFocus();\n      this.#searchbar = sb;\n    }\n  }\n\n  /**\n   * this function makes the searchbar visible\n   */\n  setVisible() {\n    this.searchbarVisible = true;\n  }\n\n  /**\n   * this function filters the friends and members with the value in search bar\n   */\n  doSearch() {\n    this.filteredFriendsAndMembers = this.friendsAndMembers.filter(r =>\n      r.displayName.toLowerCase().includes(this.#searchbar.value.toLowerCase()))\n  }\n\n  /**\n   * This function deactivates the searchbar and hides it\n   */\n  cancelSearch() {\n    this.#searchbar.value = \"\";\n    this.filteredFriendsAndMembers = this.friendsAndMembers;\n    this.searchbarVisible = false;\n  }\n\n  /**\n   * This function is used to push or deleted the selected friend\n   * @param friend - the selected user\n   */\n  select(friend: User) {\n    if (this.checkSelectedFriendsContainFriend(friend)) {\n      this.newSelectedMembers = this.newSelectedMembers.filter(f => f.id != friend.id);\n    } else {\n      this.newSelectedMembers.push(friend);\n    }\n  }\n\n  /**\n   * This function checks if the selected user is already a group member\n   * @param friend - the selected user\n   */\n  checkSelectedFriendsContainFriend(friend: User): boolean {\n    let ret = false;\n    this.newSelectedMembers.forEach(f => {\n      if (f.id == friend.id) {\n        ret = true;\n      }\n    });\n    return ret;\n  }\n\n  /**\n   * This function adds the new selected user to the group\n   */\n  async add() {\n    let removedFriend: User[] = [];\n    let friendsWithOpenTransactions: User[] = [];\n    let groupSizeGreaterOne: boolean = true;\n    if (this.group.members) {\n      this.group.members.forEach(friend => {\n        if (!this.newSelectedMembers.includes(friend)) {\n          removedFriend.push(friend);\n        }\n      });\n      for (const friend of removedFriend) {\n        let open = await this.transactionService.checkTransactionsFinishedInGroupByUser(this.group, friend);\n        if (open) {\n          friendsWithOpenTransactions.push(friend);\n        }\n      }\n    } else {\n      groupSizeGreaterOne = false;\n    }\n    if (groupSizeGreaterOne && friendsWithOpenTransactions.length > 0) {\n      let msg = `Diese Auswahl kann nicht bestätigt werden, da noch folgende Freunde offene Transaktionen haben:\\n`;\n      friendsWithOpenTransactions.forEach(friend => {\n        msg += `${friend.displayName}\\n`\n      });\n      this.newSelectedMembers = this.group.members;\n      alert(msg)\n    } else {\n      await this.modalController.dismiss(this.newSelectedMembers);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Freunde hinzufügen\n    \n      \n    \n    \n    \n  \n\n\n\n  \n    \n      \n        {{friend.displayName}}\n      \n      \n    \n  \n  \n    Abbrechen\n    \n      Bestätigen\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./add-members.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Freunde hinzufügen                                            {{friend.displayName}}                        Abbrechen          Bestätigen      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddMembersPageModule.html":{"url":"modules/AddMembersPageModule.html","title":"module - AddMembersPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AddMembersPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AddMembersPageModule\n\n\n\ncluster_AddMembersPageModule_declarations\n\n\n\ncluster_AddMembersPageModule_imports\n\n\n\n\nAddMembersPage\n\nAddMembersPage\n\n\n\nAddMembersPageModule\n\nAddMembersPageModule\n\nAddMembersPageModule -->\n\nAddMembersPage->AddMembersPageModule\n\n\n\n\n\nAddMembersPageRoutingModule\n\nAddMembersPageRoutingModule\n\nAddMembersPageModule -->\n\nAddMembersPageRoutingModule->AddMembersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/add-members/add-members.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddMembersPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddMembersPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddMembersPageRoutingModule } from './add-members-routing.module';\n\nimport { AddMembersPage } from './add-members.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddMembersPageRoutingModule\n  ],\n  declarations: [AddMembersPage]\n})\nexport class AddMembersPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddMembersPageRoutingModule.html":{"url":"modules/AddMembersPageRoutingModule.html","title":"module - AddMembersPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AddMembersPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/add-members/add-members-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddMembersPage } from './add-members.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddMembersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddMembersPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {AngularFireModule} from \"@angular/fire\";\nimport {AngularFirestoreModule} from \"@angular/fire/firestore\";\nimport {AngularFireAuthModule} from \"@angular/fire/auth\";\nimport {environment} from \"../environments/environment\";\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AppRoutingModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParagraphText\n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'group-create',\n    loadChildren: () => \"import('./group/group-create/group-create.module').then( m => m.GroupCreatePageModule)\"\n  },\n  {\n    path: 'group-list',\n    loadChildren: () => \"import('./group/group-list/group-list.module').then( m => m.GroupListPageModule)\"\n  },\n  {\n    path: 'group-details',\n    loadChildren: () => \"import('./group/group-details/group-details.module').then( m => m.GroupDetailsPageModule)\"\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile/profile.module').then( m => m.ProfilePageModule)\"\n  },\n  {\n    path: 'statistics',\n    loadChildren: () => \"import('./profile/statistics/statistics.module').then( m => m.StatisticsPageModule)\"\n  },\n  {\n    path: 'friends',\n    loadChildren: () => \"import('./profile/friends/friends.module').then( m => m.FriendsPageModule)\"\n  },\n  {\n    path: 'options',\n    loadChildren: () => \"import('./profile/options/options.module').then( m => m.OptionsPageModule)\"\n  },\n  {\n    path: 'transaction-create',\n    loadChildren: () => \"import('./transaction/transaction-create/transaction-create.module').then( m => m.TransactionCreatePageModule)\"\n  },\n  {\n    path: 'transaction-participants',\n    loadChildren: () => \"import('./transaction/transaction-participants/transaction-participants.module').then(m => m.TransactionParticipantsPageModule)\"\n  },\n  {\n    path: 'transaction-details',\n    loadChildren: () => \"import('./transaction/transaction-details/transaction-details.module').then( m => m.TransactionDetailsPageModule)\"\n  },\n  {\n    path: 'transaction-stakes',\n    loadChildren: () => \"import('./transaction/transaction-stakes/transaction-stakes.module').then(m => m.TransactionStakesPageModule)\"\n  },\n  {\n    path: 'password',\n    loadChildren: () => \"import('./profile/password/password.module').then( m => m.PasswordPageModule)\"\n  },\n  {\n    path: 'payment',\n    loadChildren: () => \"import('./profile/payment/payment.module').then( m => m.PaymentPageModule)\"\n  },\n  {\n    path: 'privacy',\n    loadChildren: () => \"import('./profile/privacy/privacy.module').then( m => m.PrivacyPageModule)\"\n  },\n  {\n    path: 'friend-profile',\n    loadChildren: () => \"import('./profile/friend-profile/friend-profile.module').then( m => m.FriendProfilePageModule)\"\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('./auth/register/register.module').then( m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./auth/login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'change-password',\n    loadChildren: () => \"import('./auth/change-password/change-password.module').then( m => m.ChangePasswordPageModule)\"\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./auth/login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('./auth/register/register.module').then( m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'change-password',\n    loadChildren: () => \"import('./auth/change-password/change-password.module').then( m => m.ChangePasswordPageModule)\"\n  },\n  {\n    path: 'add-members',\n    loadChildren: () => \"import('./group/add-members/add-members.module').then( m => m.AddMembersPageModule)\"\n  },\n  {\n    path: 'member-view',\n    loadChildren: () => \"import('./group/member-view/member-view.module').then( m => m.MemberViewPageModule)\"\n  },\n  {\n    path: 'payment-reminder',\n    loadChildren: () => \"import('./payment-reminder/payment-reminder.module').then( m => m.PaymentReminderPageModule)\"\n  },\n  {\n    path: 'tutorial',\n    loadChildren: () => \"import('./tutorial/tutorial.module').then( m => m.TutorialPageModule)\"\n  },\n  {\n    path: 'invite',\n    loadChildren: () => \"import('./group/invite/invite.module').then( m => m.InvitePageModule)\"\n  },\n\n\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArwardService.html":{"url":"injectables/ArwardService.html","title":"injectable - ArwardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArwardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/award.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is needed to manage awards, with linking of the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/award.service.ts:29\n                \n            \n\n\n            \n                \n                    The function finds an Achievements by its id and returns it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to find the Achievements by their id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/award.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Award } from '../models/award.model';\n\n/**\n * This class is needed to manage awards, with linking of the database.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ArwardService {\n  userCollection: AngularFirestoreCollection;\n\n  /**\n   * @ignore\n   * @param afs \n   */\n  constructor(private afs: AngularFirestore) {\n    this.userCollection = afs.collection('Achievement');\n  }\n\n  /**\n   * The function finds an Achievements by its id and returns it.\n   * @param id Needed to find the Achievements by their id.\n   * @returns \n   */\n  findById(id: string) {\n    return this.userCollection.doc(id).get().toPromise().then(res => {\n      const ret = res.data();\n      ret.id = res.id;\n      return ret;\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                functions for the authentication of a user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                delete\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:127\n                \n            \n\n\n            \n                \n                    lets the user change his password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:113\n                \n            \n\n\n            \n                \n                    lets the user delete his profile from the database\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    lets the user log into firebase\nreturns a error message if not successful\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from the user\n\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npassword from the user\nreturns a error message if not successful\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:99\n                \n            \n\n\n            \n                \n                    lets the user log out of firebase\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(email: string, password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:33\n                \n            \n\n\n            \n                \n                    registers a user with firebase\nreturns a error message if not successful\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from the user\n\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npassword from the user\n\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nusername from the user\nreturns a error message if not successful\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {Router} from \"@angular/router\";\nimport { UserService } from './user.service';\nimport {Platform} from \"@ionic/angular\";\n\n/**\n * functions for the authentication of a user\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentUser = null;\n\n  /**\n   * @ignore\n   * @param auth\n   * @param router\n   * @param userservice\n   * @param platform\n   */\n  constructor(private auth: AngularFireAuth, private router: Router, private userservice: UserService, public platform: Platform) {\n  }\n\n  /**\n   * registers a user with firebase\n   * @param email - email from the user\n   * @param password - password from the user\n   * @param username - username from the user\n   * returns a error message if not successful\n   */\n  async register(email: string, password: string, username: string): Promise{\n    let message: string;\n    await this.auth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.userservice.persist(result.user.uid, email.toLocaleLowerCase(), username);\n        this.userservice.findById(result.user.uid).then(user => {\n          this.currentUser = user;\n          if(this.platform.is('desktop')){\n            this.router.navigate(['profile']);\n          }else{\n            this.router.navigate(['tutorial']);\n          }\n        });\n      })\n      .catch((error) => {\n        if (error.code === 'auth/invalid-email') {\n          message = 'ungültige E-mail';\n        } else if (error.code === 'auth/email-already-in-use') {\n          message = 'Nutzer bereits vorhanden';\n        } else if (error.code === 'auth/weak-password') {\n          message = 'Das Passwort ist zu schwach.';\n        } else if (error.code === 'auth/argument-error'){\n          message = 'Bitte alle Felder ausfüllen'\n        } else {\n          console.log(error.code);\n          message = 'unbekannter Fehler';\n        }\n      });\n    return message;\n  }\n\n  /**\n   * lets the user log into firebase\n   * @param email - email from the user\n   * @param password - password from the user\n   * returns a error message if not successful\n   */\n  login(email: string, password: string): Promise{\n    return this.auth.signInWithEmailAndPassword(email.toLocaleLowerCase(), password)\n      .then((result) => {\n        this.userservice.findById(result.user.uid).then(user => {\n          this.currentUser = user;\n\n          this.router.navigate(['home']);\n        });\n      })\n      .catch((error) => {\n        if (error.code === 'auth/invalid-email') {\n          return 'ungültige E-mail';\n        } else if (error.code === 'auth/wrong-password') {\n          return 'Passwort falsch'\n        } else if (error.code === 'auth/user-not-found') {\n          return 'Nutzer nicht vorhanden';\n        } else if (error.code === 'auth/argument-error'){\n          return 'Bitte alle Felder ausfüllen'\n        } else {\n          console.log(error.code);\n          return 'unbekannter Fehler';\n        }\n      })\n  }\n\n\n  /**\n   * lets the user log out of firebase\n   */\n  logout() {\n    this.auth.signOut()\n      .then((result) => {\n        this.currentUser = null;\n        this.router.navigate(['login'])\n      })\n      .catch((error) => {\n        console.log(error.message);\n      })\n  }\n\n  /**\n   * lets the user delete his profile from the database\n   */\n  delete(){\n    this.auth.currentUser.then(user => {\n      user.delete().then(() => {\n        // User deleted.\n      }).catch((error) => {\n        console.log(error.message);\n      });\n    });\n  }\n\n  /**\n   * lets the user change his password\n   * @param email - email from user\n   */\n  changePassword(email){\n    this.auth.sendPasswordResetEmail(email).then(() => {\n        this.router.navigate(['login']);\n      }\n    ).catch((error) => {\n      console.log(error)\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Award.html":{"url":"classes/Award.html","title":"class - Award","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Award\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/award.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                image\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string, description?: string, name?: string, image?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/award.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        image\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/award.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/award.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/award.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/award.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Award {\n\n    constructor(\n        public id?: string,\n        public description?: string,\n        public name?: string,\n        public image?: string,    \n        ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BadgeService.html":{"url":"injectables/BadgeService.html","title":"injectable - BadgeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BadgeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/badge.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is needed to manage the allocation of awards, with linking of the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setBadges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setBadges\n                        \n                    \n                \n            \n            \n                \nsetBadges(user: User, transactions: Transaction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/badge.service.ts:30\n                \n            \n\n\n            \n                \n                    This function checks which awards the user has and adds missing ones as needed.\nAwards will only be added if the requirements are met.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to see which awards are present and add the missing ones.\n\n                                    \n                                \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Are needed to work with the satistics functions\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { UserService } from './user.service';\nimport { User } from \"../models/user.model\";\nimport { StatisticsService } from \"./statistics.service\";\nimport { Transaction } from \"../models/transaction.model\";\n\n/**\n * This class is needed to manage the allocation of awards, with linking of the database.\n */\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class BadgeService {\n\n    /**\n     * @ignore\n     * @param userservice \n     * @param stats \n     */\n    constructor(private userservice: UserService, private stats:StatisticsService) { }\n\n    /**\n     * This function checks which awards the user has and adds missing ones as needed. \n     * Awards will only be added if the requirements are met.\n     * @param user Needed to see which awards are present and add the missing ones.\n     * @param transactions Are needed to work with the satistics functions\n     */\n    setBadges(user: User, transactions: Transaction[]) {\n        if (this.stats.getAllSelfmadeTransactionsOfTime(user.id, -1, transactions) >= 50 && !user.awards.includes(\"2jgBrLRTucI9CjxxWv5g\")) {\n            user.awards.push(\"2jgBrLRTucI9CjxxWv5g\");\n        }\n\n        if (user.friends.length >= 10 && !user.awards.includes(\"KNUGSj8xbsuwc0YvdYsU\")) {\n            user.awards.push(\"KNUGSj8xbsuwc0YvdYsU\");\n        }\n\n        if (this.stats.getAllSelfmadeTransactionsOfTime(user.id, -1, transactions) >= 10 && !user.awards.includes(\"dHIv113GmkQMxesxqF2K\")) {\n            user.awards.push(\"dHIv113GmkQMxesxqF2K\");\n        }\n\n        if (this.stats.getAllIncomeOfTime(-1, transactions, user.id)[0] >= 100 && !user.awards.includes(\"fdb031aej8qazbadvIA8\")) {\n            user.awards.push(\"fdb031aej8qazbadvIA8\");\n        }\n\n        if (this.stats.getAllExpensesOfTime(7, transactions, user.id)[0] >= 1000 && !user.awards.includes(\"pthZ34GVf4eB6qlXPAvv\")) {\n            user.awards.push(\"pthZ34GVf4eB6qlXPAvv\");\n        }\n        this.userservice.update(user);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPage.html":{"url":"components/ChangePasswordPage.html","title":"component - ChangePasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/change-password/change-password.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is used to generate a new password\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                ./change-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/change-password/change-password.page.ts:18\n                        \n                    \n\n            \n                \n                    email for the new password\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {NavController} from \"@ionic/angular\";\n\n/**\n * This class is used to generate a new password\n */\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n\n  /**\n   email for the new password\n   */\n  email: string;\n\n  /**\n   * @ignore\n   */\n  constructor(public authService: AuthService, public navCtrl: NavController) { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  Neues Passwort senden\n  \n  \n  \n    \n      Senden\n    \n  \n  \n    Zurück\n  \n\n\n\n    \n\n    \n                \n                    ./change-password.page.scss\n                \n                ion-content {\n  text-align: center;\n  .title {\n    font-size: 30px;\n    padding-top: 200px;\n  }\n  ion-input {\n    border: solid 1px #0d0d0d;\n    border-radius: 10px;\n    width: 60%;\n    margin: 20px auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Neues Passwort senden                Senden            Zurück  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChangePasswordPageModule.html":{"url":"modules/ChangePasswordPageModule.html","title":"module - ChangePasswordPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ChangePasswordPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChangePasswordPageModule\n\n\n\ncluster_ChangePasswordPageModule_declarations\n\n\n\ncluster_ChangePasswordPageModule_imports\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nChangePasswordPageModule\n\nChangePasswordPageModule\n\nChangePasswordPageModule -->\n\nChangePasswordPage->ChangePasswordPageModule\n\n\n\n\n\nChangePasswordPageRoutingModule\n\nChangePasswordPageRoutingModule\n\nChangePasswordPageModule -->\n\nChangePasswordPageRoutingModule->ChangePasswordPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/change-password/change-password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChangePasswordPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChangePasswordPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangePasswordPageRoutingModule } from './change-password-routing.module';\n\nimport { ChangePasswordPage } from './change-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChangePasswordPageRoutingModule\n  ],\n  declarations: [ChangePasswordPage]\n})\nexport class ChangePasswordPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChangePasswordPageRoutingModule.html":{"url":"modules/ChangePasswordPageRoutingModule.html","title":"module - ChangePasswordPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ChangePasswordPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/change-password/change-password-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangePasswordPage } from './change-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangePasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangePasswordPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendProfilePage.html":{"url":"components/FriendProfilePage.html","title":"component - FriendProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/friend-profile/friend-profile.page.ts\n\n\n\n    \n        Description\n    \n    \n        The class is needed for the Friend Profile Page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friend-profile\n            \n\n            \n                styleUrls\n                ./friend-profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./friend-profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                badges\n                            \n                            \n                                currentUser\n                            \n                            \n                                isfriend\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                    Async\n                                badgeDescription\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                paymentDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFriend\n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friend-profile/friend-profile.page.ts:116\n                \n            \n\n\n            \n                \n                    Friends can be added via the function.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        badgeDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    badgeDescription(badgename, badgeDescription)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friend-profile/friend-profile.page.ts:127\n                \n            \n\n\n            \n                \n                    This functionality creates an Ionic alert, this contains only a title and a description,\nfurthermore there is a close button to close the Ionic alert. Used when you click on\nthe badge icons.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    badgename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the title.\n\n                                    \n                                \n                                \n                                    badgeDescription\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the description.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friend-profile/friend-profile.page.ts:68\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. The archievments are also\ncalculated and if there should be there are new ones, these\nare stored in the data base. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        paymentDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    paymentDescription(name: string, discription: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friend-profile/friend-profile.page.ts:145\n                \n            \n\n\n            \n                \n                    This functionality creates an Ionic alert, this contains only a title and a description,\nfurthermore there is a close button to close the Ionic alert. Used when clicking on\nthe icons of the payment methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the title.\n\n                                    \n                                \n                                \n                                    discription\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the description.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        badges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Award[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friend-profile/friend-profile.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friend-profile/friend-profile.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isfriend\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friend-profile/friend-profile.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friend-profile/friend-profile.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Award } from '../../models/award.model';\nimport { ArwardService } from 'src/app/services/award.service';\nimport { FriendsService } from '../../services/friends.service';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { AuthService } from \"../../services/auth.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { BadgeService } from 'src/app/services/badge.service';\nimport { NavController } from '@ionic/angular';\n\n/**\n * The class is needed for the Friend Profile Page.\n */\n\n@Component({\n  selector: 'app-friend-profile',\n  templateUrl: './friend-profile.page.html',\n  styleUrls: ['./friend-profile.page.scss'],\n})\n\nexport class FriendProfilePage {\n  badges: Award[] = [];\n  user: User = new User();\n  isfriend = false;\n  currentUser: User;\n\n  /**\n   * @ignore\n   * @param transactionsservice \n   * @param sanitizer \n   * @param route \n   * @param router \n   * @param awardService \n   * @param af \n   * @param userService \n   * @param friendsService \n   * @param authService \n   * @param badgeService \n   */\n\n  constructor(\n    private transactionsservice: TransactionService,\n    public sanitizer: DomSanitizer,\n    private route: ActivatedRoute,\n    public router: Router,\n    private awardService: ArwardService,\n    private af: AngularFireAuth,\n    private userService: UserService,\n    private friendsService: FriendsService,\n    private authService: AuthService,\n    private badgeService: BadgeService,\n    private navCtrl: NavController\n  ) { }\n\n  /**\n   * When the page is opened, all the required information \n   * is loaded from the services and stored in the variables \n   * provided for this purpose. The archievments are also \n   * calculated and if there should be there are new ones, these \n   * are stored in the data base. Important here is the check \n   * whether the user is logged in, otherwise no data will be loaded.\n   */\n\n  ionViewWillEnter() {\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          this.route.params.subscribe(item => {\n            this.friendsService.findById(item[0], this.currentUser).then(item2 => {\n              this.user = { ...item2 };\n              this.badges = [];\n\n              this.transactionsservice.getAllTransactionByUser(item2, true).then(transactions => {\n                this.badgeService.setBadges(item2, transactions);\n                this.isfriend = this.friendsService.isFriends(this.user, this.currentUser);\n                if (this.isfriend) {\n                  if (this.user.awardsPublicfriends) {\n                    this.user.awards.forEach(element => {\n                      this.awardService.findById(element).then(item => {\n                        this.badges.push(item);\n                      });\n                    });\n                  }\n                } else {\n                  if (!this.user.descriptionPublic) {\n                    this.user.description = \"\";\n                  }\n                  if (!this.user.imagePublic) {\n                    this.user.profilePic = \"https://bit.ly/2S904CS\";\n                  }\n                  if (this.user.awardsPublic) {\n                    this.user.awards.forEach(element => {\n                      this.awardService.findById(element).then(item => {\n                        this.badges.push(item);\n                      });\n                    });\n                  }\n                }\n              });\n            });\n          });\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n  /**\n  * Friends can be added via the function.\n  */\n  addFriend() {\n    this.friendsService.addFriend(this.user.email, this.currentUser.id);\n  }\n\n  /**\n   * This functionality creates an Ionic alert, this contains only a title and a description, \n   * furthermore there is a close button to close the Ionic alert. Used when you click on \n   * the badge icons.\n   * @param badgename Required for the title.\n   * @param badgeDescription Required for the description.\n   */\n  async badgeDescription(badgename, badgeDescription) {\n    const alert = document.createElement('ion-alert');\n    alert.header = badgename;\n    alert.message = badgeDescription;\n    alert.buttons = [{ text: \"schließen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    await alert.onDidDismiss();\n  }\n\n  /**\n   * This functionality creates an Ionic alert, this contains only a title and a description, \n   * furthermore there is a close button to close the Ionic alert. Used when clicking on \n   * the icons of the payment methods.\n   * @param name Required for the title.\n   * @param discription Required for the description.\n   */\n  async paymentDescription(name: string, discription: string) {\n    const alert = document.createElement('ion-alert');\n    alert.header = name;\n    alert.message = discription;\n    alert.buttons = [{ text: \"schließen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    await alert.onDidDismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Freunde\n    \n      \n    \n  \n\n\n\n  \n    \n      \n        \n      \n      \n        \n          \n            {{user.displayName}}\n          \n        \n        \n          \n            {{user.description}}\n          \n        \n      \n    \n\n    \n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n    \n\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./friend-profile.page.scss\n                \n                .profileImg {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n}\n\n.profileImgCol{\n    max-width: 110px;\n    //margin-left: auto;\n}\n\n.profileDescriptionCol{\n    max-width: 300px;\n    margin-left: 10px;\n    //margin-right: auto;\n}\n\n.grid{\n    margin-top: 20px;\n}\n\n.name{\n    font-weight: bold;\n}\n\n.icons{\n    max-width: 50px;\n    max-height: 50px;\n}\n\n.iconsCol{\n    margin-top: 10px;\n}\n\n.row{\n    justify-content: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Freunde                                                                              {{user.displayName}}                                                {{user.description}}                                                                                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendProfilePageModule.html":{"url":"modules/FriendProfilePageModule.html","title":"module - FriendProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FriendProfilePageModule\n\n\n\ncluster_FriendProfilePageModule_declarations\n\n\n\ncluster_FriendProfilePageModule_imports\n\n\n\n\nFriendProfilePage\n\nFriendProfilePage\n\n\n\nFriendProfilePageModule\n\nFriendProfilePageModule\n\nFriendProfilePageModule -->\n\nFriendProfilePage->FriendProfilePageModule\n\n\n\n\n\nFriendProfilePageRoutingModule\n\nFriendProfilePageRoutingModule\n\nFriendProfilePageModule -->\n\nFriendProfilePageRoutingModule->FriendProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/friend-profile/friend-profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FriendProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FriendProfilePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FriendProfilePageRoutingModule } from './friend-profile-routing.module';\n\nimport { FriendProfilePage } from './friend-profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FriendProfilePageRoutingModule\n  ],\n  declarations: [FriendProfilePage]\n})\nexport class FriendProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendProfilePageRoutingModule.html":{"url":"modules/FriendProfilePageRoutingModule.html","title":"module - FriendProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/friend-profile/friend-profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FriendProfilePage } from './friend-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FriendProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FriendProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendsPage.html":{"url":"components/FriendsPage.html","title":"component - FriendsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FriendsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/friends/friends.page.ts\n\n\n\n    \n        Description\n    \n    \n        The class is needed for the Friend Page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friends\n            \n\n            \n                styleUrls\n                ./friends.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./friends.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addFriendInput\n                            \n                            \n                                addFriendsOutput\n                            \n                            \n                                currentUser\n                            \n                            \n                                errors\n                            \n                            \n                                friends\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                friendBttn\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFriend\n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friends/friends.page.ts:83\n                \n            \n\n\n            \n                \n                    Takes the email from the inputfield and calls friendService.addFriend with the given email.\nThe return value of friendService.addFriend (string which confirms if the action was successful)\ngets displayed via error.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendBttn\n                        \n                    \n                \n            \n            \n                \nfriendBttn(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friends/friends.page.ts:74\n                \n            \n\n\n            \n                \n                    This function navigates to the Friend-Profile page,\npassing on the ID of the clicked user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed to identify the clicked user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/friends/friends.page.ts:50\n                \n            \n\n\n            \n                \n                    When the page is opened,\nall the required information is loaded from the services and\nstored in the variables provided for this purpose. Important\nhere is the check whether the user is logged in, otherwise\nno data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addFriendInput\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addFriendsOutput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/friends/friends.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { FriendsService } from '../../services/friends.service';\nimport { UserService } from '../../services/user.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NavController } from '@ionic/angular';\n\n/**\n * The class is needed for the Friend Page.\n */\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.page.html',\n  styleUrls: ['./friends.page.scss'],\n})\nexport class FriendsPage {\n  friends: User[] = [];\n  addFriendInput;\n  currentUser: User;\n  addFriendsOutput = \"\";\n  errors: Map = new Map();\n\n  /**\n   * @ignore\n   * @param sanitizer \n   * @param router \n   * @param af \n   * @param friendsService \n   * @param userService \n   */\n  constructor(\n    public sanitizer: DomSanitizer,\n    public router: Router,\n    private af: AngularFireAuth,\n    private friendsService: FriendsService,\n    private userService: UserService,\n    private navCtrl: NavController\n  ) { }\n\n  /**\n   * When the page is opened, \n   * all the required information is loaded from the services and \n   * stored in the variables provided for this purpose. Important \n   * here is the check whether the user is logged in, otherwise \n   * no data will be loaded.\n   */\n  ionViewWillEnter() {\n    this.addFriendsOutput = \"\";\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(value => {\n          this.currentUser = value;\n          sub.unsubscribe();\n          this.friends = [];\n          value.friends.forEach(async element => {\n            await this.friendsService.findById(element, this.currentUser).then(friend => {\n              this.friends.push(friend);\n            });\n          });\n        });\n      }\n    });\n  }\n\n\n  /**\n   * This function navigates to the Friend-Profile page, \n   * passing on the ID of the clicked user.\n   * @param id Is needed to identify the clicked user.\n   */\n  friendBttn(id: string) {\n    this.router.navigate(['friend-profile', [id]]);\n  }\n\n  /**\n   * Takes the email from the inputfield and calls friendService.addFriend with the given email.\n   * The return value of friendService.addFriend (string which confirms if the action was successful) \n   * gets displayed via error.\n   */\n  addFriend() {\n    this.friendsService.addFriend(this.addFriendInput, this.currentUser.id).then(res => {\n      this.addFriendsOutput = res;\n      this.errors.set(\"addFriendsOutput\", this.addFriendsOutput);\n      if (res === \"Nutzer nicht vorhanden\")\n        this.errors.set(\"addFriendsOutputColor\", \"var(--ion-color-danger)\");\n      else\n        this.errors.set(\"addFriendsOutputColor\", \"#006600\");\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Freunde\n  \n\n\n\n  \n    \n    Hinzufügen\n  \n  \n    {{errors.get(\"addFriendsOutput\")}}\n\n  \n    \n      \n        \n      \n      \n        {{item.displayName}}\n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./friends.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Freunde            Hinzufügen        {{errors.get(\"addFriendsOutput\")}}                                        {{item.displayName}}                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendsPageModule.html":{"url":"modules/FriendsPageModule.html","title":"module - FriendsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FriendsPageModule\n\n\n\ncluster_FriendsPageModule_declarations\n\n\n\ncluster_FriendsPageModule_imports\n\n\n\n\nFriendsPage\n\nFriendsPage\n\n\n\nFriendsPageModule\n\nFriendsPageModule\n\nFriendsPageModule -->\n\nFriendsPage->FriendsPageModule\n\n\n\n\n\nFriendsPageRoutingModule\n\nFriendsPageRoutingModule\n\nFriendsPageModule -->\n\nFriendsPageRoutingModule->FriendsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/friends/friends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FriendsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FriendsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FriendsPageRoutingModule } from './friends-routing.module';\n\nimport { FriendsPage } from './friends.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FriendsPageRoutingModule\n  ],\n  declarations: [FriendsPage]\n})\nexport class FriendsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendsPageRoutingModule.html":{"url":"modules/FriendsPageRoutingModule.html","title":"module - FriendsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/friends/friends-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FriendsPage } from './friends.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FriendsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FriendsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FriendsService.html":{"url":"injectables/FriendsService.html","title":"injectable - FriendsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FriendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/friends.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is needed to manage friends, with linking of the database.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFriend\n                            \n                            \n                                    Private\n                                copyAndPrepare\n                            \n                            \n                                findById\n                            \n                            \n                                isFriends\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addFriend\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFriend(email: string, currentUserID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:58\n                \n            \n\n\n            \n                \n                    Add a friend and check if he exists.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to find users by email.\n\n                                    \n                                \n                                \n                                    currentUserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to find users by email.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        String with feedback for user.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        copyAndPrepare\n                        \n                    \n                \n            \n            \n                \n                    \n                    copyAndPrepare(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:113\n                \n            \n\n\n            \n                \n                    Copy a User.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identifies user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        Copy of User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string, currentUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:34\n                \n            \n\n\n            \n                \n                    The function finds the friend and checks if he is a friend of the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to identify friend.\n\n                                    \n                                \n                                \n                                    currentUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Needed to identify user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        User (the friend)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFriends\n                        \n                    \n                \n            \n            \n                \nisFriends(user1: User, user2: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:92\n                \n            \n\n\n            \n                \n                    Checks if two users are friends.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user1\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identifies user.\n\n                                    \n                                \n                                \n                                    user2\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Identifies the other user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Boolean whether friend (true) or not (false).\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/friends.service.ts:104\n                \n            \n\n\n            \n                \n                    Updated user in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User to be updated in the database with the data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/friends.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { UserService } from \"./user.service\";\nimport {AuthService} from \"./auth.service\";\n\n/**\n * This class is needed to manage friends, with linking of the database.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FriendsService {\n  userCollection: AngularFirestoreCollection;\n\n  /**\n   * @ignore\n   * @param afs \n   * @param userService \n   * @param authService \n   */\n  constructor(private afs: AngularFirestore, private userService: UserService, private authService: AuthService) {\n    this.userCollection = afs.collection('User');\n  }\n\n  /**\n   * The function finds the friend and checks if he is a friend of the user.\n   * @param id Needed to identify friend.\n   * @param currentUser Needed to identify user.\n   * @returns User (the friend)\n   */\n  findById(id: string, currentUser: User) {\n    return this.userCollection.doc(id).get().toPromise().then(res => {\n      const ret = res.data();\n      ret.id = res.id;\n      const friends = this.isFriends(ret, currentUser);\n      if (!ret.imagePublic && !friends)\n        ret.profilePic = \"https://bit.ly/2S904CS\";\n\n      if (!ret.descriptionPublic && !friends)\n        ret.description = \"(keine Beschreibung)\";\n\n      if (!ret.awardsPublic && !friends)\n        ret.awards = [];\n\n      return ret;\n    });\n  }\n\n  /**\n   * Add a friend and check if he exists.\n   * @param email Needed to find users by email.\n   * @param currentUserID Needed to find users by email.\n   * @returns String with feedback for user.\n   */\n  async addFriend(email: string, currentUserID: string): Promise{\n    let output = \"Nutzer nicht vorhanden\"\n    return await this.userService.findByEmail(email.toLocaleLowerCase()).then(async user => {\n      let alreadyFriends = false;\n      //the actual user is in a somewhat random spot in the \"user\" array.\n      for(let u of user){\n        if(u != undefined) {\n\n                    await this.userService.findById(currentUserID).then(async curUser => {\n                      alreadyFriends = this.isFriends(curUser, u)\n                      if(!alreadyFriends) {\n                        curUser.friends.push(u.id);\n                        u.friends.push(currentUserID);\n                        this.update(u);\n                        this.update(curUser);\n                        output = \"erfolgreich hinzugefügt\";\n                      }\n                      else{\n                        output = \"bereits befreundet\";\n                      }\n                  });\n        }\n      }\n        return output;\n    });\n    return \"error\";\n  }\n\n  /**\n   * Checks if two users are friends.\n   * @param user1 Identifies user.\n   * @param user2 Identifies the other user\n   * @returns Boolean whether friend (true) or not (false).\n   */\n  isFriends(user1: User, user2: User): boolean{\n    if(user1.id == user2.id) return true;\n    for(let i in user1.friends){\n      if(user1.friends[i] === user2.id) return true;\n    }\n    return false;\n  }\n\n  /**\n   * Updated user in the database\n   * @param user User to be updated in the database with the data\n   */\n  update(user: User) {\n    this.userCollection.doc(user.id).update(this.copyAndPrepare(user));\n  }\n\n  /**\n   * Copy a User.\n   * @param user Identifies user.\n   * @returns Copy of User\n   */\n  private copyAndPrepare(user: User): User {\n    const copy = { ...user };\n    delete copy.id;\n    return copy;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Group.html":{"url":"classes/Group.html","title":"class - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                creator\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                members\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string, name?: string, members?: User[], creator?: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/group.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        User[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        creator\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from \"./user.model\";\n\nexport class Group {\n  constructor(public id?: string,\n              public name?: string,\n              public members?: User[],\n              public creator?: User) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCreatePage.html":{"url":"components/GroupCreatePage.html","title":"component - GroupCreatePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupCreatePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/group-create/group-create.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class has functions to create a new group\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-create\n            \n\n            \n                styleUrls\n                ./group-create.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./group-create.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                group\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                    Async\n                                addMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-create/group-create.page.ts:63\n                \n            \n\n\n            \n                \n                    adds the new created group to firebase\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMembers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-create/group-create.page.ts:54\n                \n            \n\n\n            \n                \n                    This function changes the group members to the new selected users\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-create/group-create.page.ts:25\n                        \n                    \n\n            \n                \n                    user who currently uses the app\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                \n                    \n                        Default value : new Group()\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-create/group-create.page.ts:29\n                        \n                    \n\n            \n                \n                    the new group that the user creates\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {User} from \"../../models/user.model\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ModalController, NavController} from \"@ionic/angular\";\nimport {GroupService} from \"../../services/group.service\";\nimport {Group} from \"../../models/group.model\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {UserService} from \"../../services/user.service\";\n\n/**\n * This class has functions to create a new group\n */\n@Component({\n  selector: 'app-group-create',\n  templateUrl: './group-create.page.html',\n  styleUrls: ['./group-create.page.scss'],\n})\n\nexport class GroupCreatePage implements OnInit {\n\n  /**\n   user who currently uses the app\n   */\n  currentUser: User;\n  /**\n   the new group that the user creates\n   */\n  group: Group = new Group();\n\n  /**\n   * @ignore\n   * @param activatedRoute\n   * @param modalController\n   * @param authService\n   * @param groupService\n   * @param af\n   * @param userService\n   * @param navCtrl\n   */\n  constructor(private activatedRoute: ActivatedRoute,\n              private modalController: ModalController,\n              private authService: AuthService,\n              private groupService: GroupService,\n              private af: AngularFireAuth,\n              private userService: UserService,\n              private navCtrl: NavController) {\n\n  }\n\n  /**\n   * This function changes the group members to the new selected users\n   */\n  async addMembers(){\n    this.groupService.addMembers(this.group, this.currentUser).then(members => {\n      this.group.members = members;\n    })\n  }\n\n  /**\n   * adds the new created group to firebase\n   */\n  add(){\n    if(this.group.name && this.group.name.length > 1){\n      if(this.group.members && this.group.members.length > 0){\n        this.group.creator = this.currentUser;\n        this.group.members.push(this.currentUser);\n        this.groupService.new(this.group);\n        this.navCtrl.back();\n      }else{\n        alert(\"Gruppe muss mind. 1 Mitglied enthalten.\")\n      }\n    }else{\n      alert(\"Gruppenname muss mind. 2 Zeichen lang sein.\")\n    }\n  }\n\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Gruppe erstellen\n  \n\n\n\n  \n    Name\n    \n    \n  \n\n  \n    Members\n    \n      \n    \n  \n\n  \n    \n      {{member.displayName}}\n    \n  \n  \n    Abbrechen\n    \n      Erstellen\n    \n  \n\n\n\n    \n\n    \n                \n                    ./group-create.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Gruppe erstellen        Name                Members                            {{member.displayName}}            Abbrechen          Erstellen      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCreatePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupCreatePageModule.html":{"url":"modules/GroupCreatePageModule.html","title":"module - GroupCreatePageModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupCreatePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupCreatePageModule\n\n\n\ncluster_GroupCreatePageModule_declarations\n\n\n\ncluster_GroupCreatePageModule_imports\n\n\n\n\nGroupCreatePage\n\nGroupCreatePage\n\n\n\nGroupCreatePageModule\n\nGroupCreatePageModule\n\nGroupCreatePageModule -->\n\nGroupCreatePage->GroupCreatePageModule\n\n\n\n\n\nGroupCreatePageRoutingModule\n\nGroupCreatePageRoutingModule\n\nGroupCreatePageModule -->\n\nGroupCreatePageRoutingModule->GroupCreatePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-create/group-create.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupCreatePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroupCreatePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupCreatePageRoutingModule } from './group-create-routing.module';\n\nimport { GroupCreatePage } from './group-create.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroupCreatePageRoutingModule\n  ],\n  declarations: [GroupCreatePage]\n})\nexport class GroupCreatePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupCreatePageRoutingModule.html":{"url":"modules/GroupCreatePageRoutingModule.html","title":"module - GroupCreatePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupCreatePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-create/group-create-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupCreatePage } from './group-create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupCreatePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupCreatePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupDetailsPage.html":{"url":"components/GroupDetailsPage.html","title":"component - GroupDetailsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupDetailsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/group-details/group-details.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class shows the details from the selected group\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-details\n            \n\n            \n                styleUrls\n                ./group-details.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./group-details.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTransactions\n                            \n                            \n                                currentCost\n                            \n                            \n                                currentIncome\n                            \n                            \n                                currentStats\n                            \n                            \n                                currentTotal\n                            \n                            \n                                currentTransactions\n                            \n                            \n                                currentUser\n                            \n                            \n                                errorMessage\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                oldTransactions\n                            \n                            \n                                pie\n                            \n                            \n                                pieChart\n                            \n                            \n                                statistic\n                            \n                            \n                                statsArray\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPieChart\n                            \n                            \n                                createTransaction\n                            \n                            \n                                dateFormat\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                leaveGroup\n                            \n                            \n                                statsButton\n                            \n                            \n                                switchToStats\n                            \n                            \n                                update\n                            \n                            \n                                viewMembers\n                            \n                            \n                                viewTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPieChart\n                        \n                    \n                \n            \n            \n                \ncreatePieChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:231\n                \n            \n\n\n            \n                \n                    creates a pie chart with the statistics of the group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTransaction\n                        \n                    \n                \n            \n            \n                \ncreateTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:206\n                \n            \n\n\n            \n                \n                    lets the user create a new transaction with the group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateFormat\n                        \n                    \n                \n            \n            \n                \ndateFormat(oldDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:315\n                \n            \n\n\n            \n                \n                    creates the desired date format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    oldDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndate format that needs to be changed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:93\n                \n            \n\n\n            \n                \n                    deletes the selected group\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        leaveGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    leaveGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:123\n                \n            \n\n\n            \n                \n                    lets the user leave the selected group\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statsButton\n                        \n                    \n                \n            \n            \n                \nstatsButton(back: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:264\n                \n            \n\n\n            \n                \n                    sets the time frame for the statistics of the group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    back\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nchecks if back or forward is pressed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchToStats\n                        \n                    \n                \n            \n            \n                \nswitchToStats()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:221\n                \n            \n\n\n            \n                \n                    lets the user see the statistics of the group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:77\n                \n            \n\n\n            \n                \n                    updates the existing group with new details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewMembers\n                        \n                    \n                \n            \n            \n                \nviewMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:199\n                \n            \n\n\n            \n                \n                    shows all members from the selected group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTransaction\n                        \n                    \n                \n            \n            \n                \nviewTransaction(transaction: Transaction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-details/group-details.page.ts:191\n                \n            \n\n\n            \n                \n                    navigates to the selected transaction\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                Transaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nselected transaction\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allTransactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentTransactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldTransactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChart\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('pieChart')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statistic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Statistic\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statsArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"Insgesamt\", \"Letztes Jahr\", \"Letzte 6 Monate\", \"Letzte 3 Monate\", \"Letzter Monat\", \"Letzte Woche\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-details/group-details.page.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Group} from \"../../models/group.model\";\nimport {GroupService} from \"../../services/group.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AlertController, NavController} from \"@ionic/angular\";\nimport {User} from \"../../models/user.model\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Transaction} from \"../../models/transaction.model\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {UserService} from \"../../services/user.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {StatisticsService} from \"../../services/statistics.service\";\nimport {Statistic} from \"../../models/statistics.model\";\nimport Chart from \"chart.js/auto\";\n\n/**\n * This class shows the details from the selected group\n */\n@Component({\n  selector: 'app-group-details',\n  templateUrl: './group-details.page.html',\n  styleUrls: ['./group-details.page.scss'],\n})\nexport class GroupDetailsPage implements OnInit {\n\n  id: string;\n  group: Group;\n  currentUser: User;\n  allTransactions: Transaction[];\n  currentTransactions: Transaction[];\n  oldTransactions: Transaction[];\n  statistic: Statistic;\n  view = 0;\n  errorMessage: string;\n  statsArray = [\"Insgesamt\", \"Letztes Jahr\", \"Letzte 6 Monate\", \"Letzte 3 Monate\", \"Letzter Monat\", \"Letzte Woche\"]\n  currentStats = 0;\n  currentTotal = 0;\n  currentCost = 0;\n  currentIncome = 0;\n  pie: Chart;\n\n  @ViewChild('pieChart') pieChart;\n\n\n  /**\n   * @ignore\n   * @param groupService\n   * @param route\n   * @param navCtrl\n   * @param alertController\n   * @param authService\n   * @param af\n   * @param userService\n   * @param transactionService\n   * @param sanitizer\n   * @param statisticsService\n   * @param router\n   */\n  constructor(private groupService: GroupService,\n              private route: ActivatedRoute,\n              private navCtrl: NavController,\n              private alertController: AlertController,\n              private authService: AuthService,\n              private af: AngularFireAuth,\n              private userService: UserService,\n              private transactionService: TransactionService,\n              private sanitizer: DomSanitizer,\n              private statisticsService: StatisticsService,\n              private router: Router) {\n  }\n\n\n  /**\n   * updates the existing group with new details\n   */\n  update(){\n    if(this.group.name.length > 2){\n      if(this.group.members.length > 1){\n        this.groupService.update(this.group);\n        this.navCtrl.back();\n      } else {\n        alert(\"Bitte fügen Sie ein Freund Ihrer Gruppe hinzu.\")\n      }\n    } else{\n      alert(\"Bitte geben Sie einen längeren Namen ein.\")\n    }\n  }\n\n  /**\n   * deletes the selected group\n   */\n  async delete(): Promise{\n    const alert = await this.alertController.create({\n      header: 'Gruppe löschen',\n      message: `Bist du dir sicher, dass du die Gruppe ${this.group.name} löschen möchtest?`,\n      buttons: [\n        {\n          text: 'Abbrechen',\n          role: 'cancel',\n        },\n        {\n          text: 'Löschen',\n          handler: () => {\n            this.transactionService.checkAllTransactionsFinishedInGroup(this.group).then(openTransactions => {\n              if(openTransactions){\n                this.errorMessage = \"Es bestehen noch offene Transaktionen\";\n              }else{\n                this.groupService.delete(this.group);\n                this.navCtrl.back();\n              }\n            });\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  /**\n   * lets the user leave the selected group\n   */\n  async leaveGroup(): Promise{\n    const alert = await this.alertController.create({\n      header: 'Gruppe verlassen',\n      message: `Bist du dir sicher, dass du die Gruppe ${this.group.name} verlassen möchtest?`,\n      buttons: [\n        {\n          text: 'Abbrechen',\n          role: 'cancel',\n        },\n        {\n          text: 'Verlassen',\n          handler: () => {\n            this.transactionService.checkTransactionsFinishedInGroupByUser(this.group, this.currentUser).then(openTransactions => {\n              if(openTransactions){\n                this.errorMessage = \"Sie haben noch offene Rechnungen\"\n              }else{\n                this.groupService.deleteUserFromGroup(this.currentUser, this.group);\n                this.navCtrl.back();\n              }\n            });\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewWillEnter() {\n    this.currentTransactions = [];\n    this.oldTransactions = [];\n    this.allTransactions = [];\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          sub.unsubscribe();\n        });\n      }\n    });\n    const groupID = this.route.snapshot.paramMap.get('id');\n    this.groupService.getGroupById(groupID).then(g => {\n      this.group = g;\n      this.transactionService.getAllTransactionByGroup(this.group).then(transactions =>{\n        transactions.forEach(transaction =>{\n          this.allTransactions.push(transaction);\n          if(!transaction.finished){\n            this.currentTransactions.push(transaction);\n          }\n          else{\n            this.oldTransactions.push(transaction);\n          }\n        });\n        this.statistic = this.statisticsService.getGroupStatistics(this.allTransactions);\n        this.currentTotal = this.statistic.allTimeTotal;\n        this.currentCost = this.statistic.allTimeCost;\n        this.currentIncome = this.statistic.allTimeIncome;\n      });\n    });\n  }\n\n  /**\n   * navigates to the selected transaction\n   * @param transaction - selected transaction\n   */\n  viewTransaction(transaction: Transaction) {\n    this.transactionService.saveLocally(transaction);\n    this.router.navigate(['transaction-details']);\n  }\n\n  /**\n   * shows all members from the selected group\n   */\n  viewMembers(){\n    this.router.navigate(['member-view', {id: this.group.id}])\n  }\n\n  /**\n   * lets the user create a new transaction with the group\n   */\n  createTransaction(){\n    if(this.group){\n      this.router.navigate(['transaction-create', {fromGroup: true, groupID: this.group.id}]);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * lets the user see the statistics of the group\n   */\n  switchToStats(){\n    if(this.view != 2) {\n      this.view = 2;\n      this.createPieChart();\n    }\n  }\n\n  /**\n   * creates a pie chart with the statistics of the group\n   */\n  createPieChart() {\n    if(this.pieChart != undefined) {\n      this.pie = new Chart(this.pieChart.nativeElement, {\n        type: 'pie',\n        data: {\n          labels: ['Einnahmen', 'Ausgaben'],\n          datasets: [\n            {\n              label: 'Dataset 1',\n              data: [this.currentIncome, this.currentCost],\n              backgroundColor: [\"rgba(104, 237, 136, 1)\", \"rgba(237, 104, 104, 1)\"],\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top',\n            }\n          }\n        },\n      });\n    }\n    else{\n      setTimeout( () => { this.createPieChart() }, 100 );\n    }\n  }\n\n  /**\n   * sets the time frame for the statistics of the group\n   * @param back - checks if back or forward is pressed\n   */\n  statsButton(back: boolean) {\n    if(back && this.currentStats>0) this.currentStats--;\n    else if(!back && this.currentStats {\n      dataset.data = [this.currentIncome, this.currentCost];\n    });\n    this.pie.update();\n  }\n\n  /**\n   * creates the desired date format\n   * @param oldDate - date format that needs to be changed\n   */\n  dateFormat(oldDate: string): string{\n    const d = new Date(oldDate);\n    return '' + d.getDate() + \".\" + (d.getMonth()+1) + '.' + d.getFullYear();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{group? group.name : \"\"}}\n  \n\n\n\n\n  \n    \n    Mitglieder\n  \n  \n    \n    Transaktion anlegen\n  \n\n  \n    \n    \n      \n        \n          Aktuell\n        \n        \n          Archiv\n        \n        \n          Statistik\n        \n      \n    \n    \n  \n    \n      \n        \n          \n            {{dateFormat(transaction.purchaseDate)}}\n          \n          \n            {{transaction.purpose}}\n            {{transaction.creator.displayName}}\n          \n          {{transaction.amount}}€\n          {{transaction.amount}}€\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{dateFormat(transaction.purchaseDate)}}\n          \n          \n            {{transaction.purpose}}\n            {{transaction.creator.displayName}}\n          \n          {{transaction.amount}}€\n          {{transaction.amount}}€\n        \n      \n    \n  \n  \n    \n      \n        \n          \n          {{statsArray[currentStats]}}\n          \n        \n      \n      \n        \n        {{currentTotal}} Transaktionen\n        \n      \n      \n        \n      \n    \n  \n  \n  \n    \n      \n        {{this.errorMessage}}\n      \n    \n  \n\n\n  \n    \n    Gruppe löschen\n  \n  \n    \n    Gruppe verlassen\n  \n\n\n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./group-details.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{group? group.name : \"\"}}            Mitglieder            Transaktion anlegen                                    Aktuell                          Archiv                          Statistik                                                                {{dateFormat(transaction.purchaseDate)}}                                {{transaction.purpose}}            {{transaction.creator.displayName}}                    {{transaction.amount}}€          {{transaction.amount}}€                                                              {{dateFormat(transaction.purchaseDate)}}                                {{transaction.purpose}}            {{transaction.creator.displayName}}                    {{transaction.amount}}€          {{transaction.amount}}€                                                            {{statsArray[currentStats]}}                                              {{currentTotal}} Transaktionen                                                              {{this.errorMessage}}                      Gruppe löschen            Gruppe verlassen                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupDetailsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupDetailsPageModule.html":{"url":"modules/GroupDetailsPageModule.html","title":"module - GroupDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupDetailsPageModule\n\n\n\ncluster_GroupDetailsPageModule_declarations\n\n\n\ncluster_GroupDetailsPageModule_imports\n\n\n\n\nGroupDetailsPage\n\nGroupDetailsPage\n\n\n\nGroupDetailsPageModule\n\nGroupDetailsPageModule\n\nGroupDetailsPageModule -->\n\nGroupDetailsPage->GroupDetailsPageModule\n\n\n\n\n\nGroupDetailsPageRoutingModule\n\nGroupDetailsPageRoutingModule\n\nGroupDetailsPageModule -->\n\nGroupDetailsPageRoutingModule->GroupDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-details/group-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroupDetailsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupDetailsPageRoutingModule } from './group-details-routing.module';\n\nimport { GroupDetailsPage } from './group-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroupDetailsPageRoutingModule\n  ],\n  declarations: [GroupDetailsPage]\n})\nexport class GroupDetailsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupDetailsPageRoutingModule.html":{"url":"modules/GroupDetailsPageRoutingModule.html","title":"module - GroupDetailsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupDetailsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-details/group-details-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupDetailsPage } from './group-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupDetailsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupListPage.html":{"url":"components/GroupListPage.html","title":"component - GroupListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/group-list/group-list.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class shows all groups the user is a member\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-list\n            \n\n            \n                styleUrls\n                ./group-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./group-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #searchbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                filteredGroups\n                            \n                            \n                                groups\n                            \n                            \n                                searchbarVisible\n                            \n                            \n                                subGroups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelSearch\n                            \n                            \n                                createGroup\n                            \n                            \n                                doSearch\n                            \n                            \n                                setVisible\n                            \n                            \n                                showGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    searchbar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelSearch\n                        \n                    \n                \n            \n            \n                \ncancelSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:71\n                \n            \n\n\n            \n                \n                    hides searchbar and unfilters groups\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:120\n                \n            \n\n\n            \n                \n                    navigates to the page to create a new group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doSearch\n                        \n                    \n                \n            \n            \n                \ndoSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:63\n                \n            \n\n\n            \n                \n                    filters the groups with the value from searchbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVisible\n                        \n                    \n                \n            \n            \n                \nsetVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:56\n                \n            \n\n\n            \n                \n                    makes the searchbar visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGroup\n                        \n                    \n                \n            \n            \n                \nshowGroup(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/group-list/group-list.page.ts:128\n                \n            \n\n\n            \n                \n                    navigates to the selected group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nselected group\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #searchbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonSearchbar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchbarVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/group-list/group-list.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        searchbar\n                    \n                \n\n\n                \n                    \n                        setsearchbar(sb: IonSearchbar)\n                    \n                \n                            \n                                \n                                    Defined in src/app/group/group-list/group-list.page.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            sb\n                                                    \n                                                            \n                                                                        IonSearchbar\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {Group} from \"../../models/group.model\";\nimport {GroupService} from \"../../services/group.service\";\nimport {User} from \"../../models/user.model\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {IonSearchbar} from \"@ionic/angular\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {UserService} from \"../../services/user.service\";\n\n/**\n * This class shows all groups the user is a member\n */\n@Component({\n  selector: 'app-group-list',\n  templateUrl: './group-list.page.html',\n  styleUrls: ['./group-list.page.scss'],\n})\nexport class GroupListPage implements OnInit {\n\n  subGroups: Subscription;\n  groups: Group[] = [];\n  currentUser: User;\n  filteredGroups: Group[] = [];\n  searchbarVisible = false;\n\n  /**\n   * @ignore\n   * @param groupService\n   * @param authService\n   * @param af\n   * @param userService\n   * @param router\n   */\n  constructor(private groupService: GroupService,\n              private authService: AuthService,\n              private af: AngularFireAuth,\n              private userService: UserService,\n              private router: Router) {\n\n  }\n\n  #searchbar: IonSearchbar;\n  @ViewChild(IonSearchbar)\n  set searchbar(sb: IonSearchbar) {\n    if (sb) {\n      sb.setFocus();\n      this.#searchbar = sb;\n    }\n  }\n\n  /**\n   * makes the searchbar visible\n   */\n  setVisible() {\n    this.searchbarVisible = true;\n  }\n\n  /**\n   * filters the groups with the value from searchbar\n   */\n  doSearch() {\n    this.filteredGroups = this.groups.filter(r =>\n      r.name.toLowerCase().includes(this.#searchbar.value.toLowerCase()));\n  }\n\n  /**\n   * hides searchbar and unfilters groups\n   */\n  cancelSearch() {\n    this.#searchbar.value = \"\";\n    this.filteredGroups = this.groups;\n    this.searchbarVisible = false;\n  }\n\n\n  /**\n   * @ignore\n   */\n  ionViewWillEnter() {\n    this.searchbarVisible = false;\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          sub.unsubscribe();\n          this.subGroups = this.groupService.getAll().subscribe(groups => {\n            let newGroups: any[] = [];\n            groups.forEach(group => {\n              if(group.members){\n                group.members.forEach(member => {\n                  if (member.toString() == this.currentUser.id) {\n                    newGroups.push(group)\n                  }\n                })\n              }\n            });\n            this.groups = [];\n            newGroups.forEach(group => {\n              this.groups.push(this.groupService.createGroup(group, group.id));\n            });\n            this.filteredGroups.splice(0, this.filteredGroups.length, ...this.groups);\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewDidLeave() {\n    this.subGroups.unsubscribe();\n  }\n\n  /**\n   * navigates to the page to create a new group\n   */\n  createGroup() {\n    this.router.navigate(['group-create'])\n  }\n\n  /**\n   * navigates to the selected group\n   * @param group - selected group\n   */\n  showGroup(group: Group) {\n    this.router.navigate(['group-details', {id: group.id}])\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    Gruppen\n    \n      \n    \n    \n    \n  \n\n\n\n  \n    \n      \n        {{group.name}}\n      \n    \n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./group-list.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Gruppen                                            {{group.name}}                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupListPageModule.html":{"url":"modules/GroupListPageModule.html","title":"module - GroupListPageModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupListPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupListPageModule\n\n\n\ncluster_GroupListPageModule_declarations\n\n\n\ncluster_GroupListPageModule_imports\n\n\n\n\nGroupListPage\n\nGroupListPage\n\n\n\nGroupListPageModule\n\nGroupListPageModule\n\nGroupListPageModule -->\n\nGroupListPage->GroupListPageModule\n\n\n\n\n\nGroupListPageRoutingModule\n\nGroupListPageRoutingModule\n\nGroupListPageModule -->\n\nGroupListPageRoutingModule->GroupListPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-list/group-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupListPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroupListPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GroupListPageRoutingModule } from './group-list-routing.module';\n\nimport { GroupListPage } from './group-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GroupListPageRoutingModule\n  ],\n  declarations: [GroupListPage]\n})\nexport class GroupListPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupListPageRoutingModule.html":{"url":"modules/GroupListPageRoutingModule.html","title":"module - GroupListPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupListPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/group-list/group-list-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GroupListPage } from './group-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GroupListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GroupListPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/group.service.ts\n        \n\n\n            \n                Description\n            \n            \n                functions for groups\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                groupCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMembers\n                            \n                            \n                                addUserToGroup\n                            \n                            \n                                copyAndPrepare\n                            \n                            \n                                createGroup\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                deleteUserFromAllGroups\n                            \n                            \n                                deleteUserFromGroup\n                            \n                            \n                                getAll\n                            \n                            \n                                    Async\n                                getGroupById\n                            \n                            \n                                getGroupsByUserId\n                            \n                            \n                                new\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMembers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMembers(group: Group, currentUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:191\n                \n            \n\n\n            \n                \n                    add Members to a existing group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserToGroup\n                        \n                    \n                \n            \n            \n                \naddUserToGroup(group: Group, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:209\n                \n            \n\n\n            \n                \n                    add a user to a group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyAndPrepare\n                        \n                    \n                \n            \n            \n                \ncopyAndPrepare(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:218\n                \n            \n\n\n            \n                \n                    changing the group object to fit in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Group\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(group: Group, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:112\n                \n            \n\n\n            \n                \n                    creates new group with old group and id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nold group without id\n\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from group\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Group\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:63\n                \n            \n\n\n            \n                \n                    deletes a group in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngroup that gets deleted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUserFromAllGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserFromAllGroups(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:129\n                \n            \n\n\n            \n                \n                    deletes user from all groups\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserFromGroup\n                        \n                    \n                \n            \n            \n                \ndeleteUserFromGroup(user: User, group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:159\n                \n            \n\n\n            \n                \n                    deletes user from a group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:39\n                \n            \n\n\n            \n                \n                    get all groups from database\nreturns an Observable of a array of group\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGroupById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:71\n                \n            \n\n\n            \n                \n                    find group with id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from group\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupsByUserId\n                        \n                    \n                \n            \n            \n                \ngetGroupsByUserId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:93\n                \n            \n\n\n            \n                \n                    find all groups from a user\nreturns a array of all groups from user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from user\nreturns a array of all groups from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new\n                        \n                    \n                \n            \n            \n                \nnew(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:47\n                \n            \n\n\n            \n                \n                    creates a new group in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nnew created group\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(group: Group)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/group.service.ts:55\n                \n            \n\n\n            \n                \n                    updates a group in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ngroup with updates\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        groupCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/group.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {AngularFirestore, AngularFirestoreCollection} from '@angular/fire/firestore';\nimport {Group} from '../models/group.model';\nimport {AuthService} from './auth.service';\nimport {Observable} from 'rxjs';\nimport {User} from '../models/user.model';\nimport { UserService } from './user.service';\nimport {AddMembersPage} from '../group/add-members/add-members.page';\nimport {ModalController} from '@ionic/angular';\n\n/**\n * functions for groups\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  private groupCollection: AngularFirestoreCollection;\n\n  /**\n   * @ignore\n   * @param afs\n   * @param authService\n   * @param userService\n   * @param modalController\n   */\n  constructor(private afs: AngularFirestore,\n              private authService: AuthService,\n              private userService: UserService,\n              private modalController: ModalController) {\n    this.groupCollection = afs.collection('Group');\n  }\n\n  /**\n   * get all groups from database\n   * returns an Observable of a array of group\n   */\n  getAll(): Observable{\n    return this.groupCollection.valueChanges({idField: 'id'});\n  }\n\n  /**\n   * creates a new group in the database\n   * @param group - new created group\n   */\n  new(group: Group){\n    this.groupCollection.add(this.copyAndPrepare(group));\n  }\n\n  /**\n   * updates a group in the database\n   * @param group - group with updates\n   */\n  update(group: Group) {\n    this.groupCollection.doc(group.id).update(this.copyAndPrepare(group));\n  }\n\n  /**\n   * deletes a group in the database\n   * @param group - group that gets deleted\n   */\n  delete(group: Group){\n    this.groupCollection.doc(group.id).delete();\n  }\n\n  /**\n   * find group with id\n   * @param id - id from group\n   */\n  async getGroupById(id: string): Promise {\n    const snapshot = await this.groupCollection.doc(id).get().toPromise();\n    const temp: any = snapshot.data();\n    const group: Group = new Group();\n    group.id = snapshot.id;\n    const members = [];\n    for(let member of temp.members){\n      await this.userService.findById(member.toString()).then(user => {\n        members.push(user);\n        if(user.id === temp.creator.toString())  group.creator = user;\n      });\n    }\n    group.members = members;\n    group.name = temp.name;\n    return group;\n  }\n\n  /**\n   * find all groups from a user\n   * @param id - id from user\n   * returns a array of all groups from user\n   */\n  getGroupsByUserId(id: string): Promise{\n    return this.groupCollection.get().toPromise().then(doc => {\n      const groups: Group[] = [];\n      doc.forEach(g => {\n        for(const member of g.data().members){\n          if(member.toString() === id){\n            groups.push(this.createGroup(g.data(), g.id));\n          }\n        }\n      });\n      return groups;\n    });\n  }\n\n  /**\n   * creates new group with old group and id\n   * @param group - old group without id\n   * @param id - id from group\n   */\n  createGroup(group: Group, id: string): Group {\n    const members: User[] = [];\n    group.members.forEach(m => {\n      this.userService.findById(m.toString()).then(u => {\n        members.push(u);\n      });\n    });\n    const newGroup: Group = group;\n    group.members = members;\n    group.id = id;\n    return group;\n  }\n\n  /**\n   * deletes user from all groups\n   * @param user\n   */\n  async deleteUserFromAllGroups(user: User){\n    const snapshot = await this.groupCollection.get().toPromise();\n    const groups: Group[] = [];\n\n    await snapshot.docs.map(doc => {\n      const group = doc.data();\n      group.id = doc.id;\n      groups.push(group);\n    });\n    for(const i in groups){\n      let containsUser = false;\n      await this.userService.findById(groups[i].creator.toString()).then(creator => {\n        groups[i].creator = creator;\n        if(creator.id === user.id) containsUser = true;\n      });\n      for(const j in groups[i].members){\n        await this.userService.findById(groups[i].members[j].toString()).then(member => {\n          groups[i].members[j] = member;\n          if(member.id === user.id) containsUser = true;\n        });\n      }\n      if(containsUser) this.deleteUserFromGroup(user, groups[i]);\n    }\n  }\n\n  /**\n   * deletes user from a group\n   * @param user\n   * @param group\n   */\n  deleteUserFromGroup(user: User, group: Group){\n    let index = -1;\n    for(let i = 0; i  -1) {\n      if(group.creator.id === user.id) {\n        if(group.members.length > 1){\n          if (index  1){\n        group.members.splice(index, 1);\n        this.update(group);\n      }\n      else{\n        this.delete(group);\n      }\n    }\n  }\n\n  /**\n   * add Members to a existing group\n   * @param group\n   * @param currentUser\n   */\n  async addMembers(group: Group, currentUser: User): Promise {\n    const modal = await this.modalController.create({\n      component: AddMembersPage,\n      componentProps: {\n        groupParam: group,\n        currentUserParam: currentUser\n      }\n    });\n    await modal.present();\n    const result = await modal.onDidDismiss();\n    return result.data;\n  }\n\n  /**\n   * add a user to a group\n   * @param group\n   * @param user\n   */\n  addUserToGroup(group: Group, user: User){\n    group.members.push(user);\n    this.update(group);\n  }\n\n  /**\n   * changing the group object to fit in the database\n   * @param group\n   */\n  copyAndPrepare(group: Group): Group{\n    const copy: any = {...group};\n    delete copy.id;\n    copy.creator = group.creator.id;\n    copy.members = [];\n    group.members.forEach(member => {\n      //This is not a good way to do this, but member.id is not always set, this is the case when loading members takes too long\n      //It is needed for the deleteMemberFromGroup functionality\n      if(member.id) copy.members.push(member.id);\n      else copy.members.push(member.toString());\n    });\n    return copy;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nTransactionCreatePageModule\n\nTransactionCreatePageModule\n\nHomePageModule -->\n\nTransactionCreatePageModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            TransactionCreatePageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport {TransactionCreatePageModule} from \"../transaction/transaction-create/transaction-create.module\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    TransactionCreatePageModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitePage.html":{"url":"components/InvitePage.html","title":"component - InvitePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/invite/invite.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class lets a user join a group with a invite link\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invite\n            \n\n            \n                styleUrls\n                ./invite.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./invite.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                group\n                            \n                            \n                                groupFound\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToGroup\n                            \n                            \n                                    Async\n                                findGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToGroup\n                        \n                    \n                \n            \n            \n                \naddToGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/invite/invite.page.ts:85\n                \n            \n\n\n            \n                \n                    adds the user to the group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/invite/invite.page.ts:60\n                \n            \n\n\n            \n                \n                    search for group with the invite link\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/invite/invite.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                \n                    \n                        Default value : new Group(\"0\",\"\",[],undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/group/invite/invite.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupFound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/group/invite/invite.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/group/invite/invite.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ModalController} from \"@ionic/angular\";\nimport {UserService} from \"../../services/user.service\";\nimport {GroupService} from \"../../services/group.service\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {User} from \"../../models/user.model\";\nimport {Group} from \"../../models/group.model\";\nimport {Router} from \"@angular/router\";\n\n\n/**\n * This class lets a user join a group with a invite link\n */\n@Component({\n  selector: 'app-invite',\n  templateUrl: './invite.page.html',\n  styleUrls: ['./invite.page.scss'],\n})\nexport class InvitePage implements OnInit {\n  currentUser: User;\n  group: Group = new Group(\"0\",\"\",[],undefined);\n  message = \"\";\n  groupFound = false;\n\n  /**\n   * @ignore\n   * @param modalController\n   * @param af\n   * @param groupService\n   * @param userService\n   * @param router\n   */\n  constructor(private modalController: ModalController,\n              private af: AngularFireAuth,\n              private groupService: GroupService,\n              public userService: UserService,\n              public router: Router) {\n\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          // @ts-ignore\n          this.findGroup();\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n  /**\n   * search for group with the invite link\n   */\n  async findGroup(){\n    const loading = document.createElement('ion-loading');\n    loading.cssClass = 'loading';\n    loading.message = 'Lade Daten';\n    loading.duration = 10000;\n    document.body.appendChild(loading);\n    await loading.present();\n\n    const queryString = window.location.search;\n    const groupId = queryString.split(\"=\");\n    await this.groupService.getGroupById(groupId[1]).then(group => {\n      if(group !== undefined) {\n        this.group = group;\n        this.groupFound = true;\n      }\n      else{\n        this.message = \"Gruppe existiert nicht\";\n      }\n    });\n    loading.dismiss();\n  }\n\n  /**\n   * adds the user to the group\n   */\n  addToGroup(){\n    for (let i in this.group.members) {\n      if (this.group.members[i].id === this.currentUser.id){\n        this.message = \"Bereits in der Gruppe\";\n        return;\n      }\n    }\n    this.groupService.addUserToGroup(this.group,this.currentUser);\n    this.message = \"Erfolgreich beigetretten\";\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Einladung\n  \n\n\n\n  \n    \n      \n        Gruppe: {{group.name}}\n      \n    \n    \n      \n        Beitreten\n      \n    \n    \n      \n        {{message}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./invite.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Einladung                      Gruppe: {{group.name}}                            Beitreten                            {{message}}            '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InvitePageModule.html":{"url":"modules/InvitePageModule.html","title":"module - InvitePageModule","body":"\n                   \n\n\n\n\n    Modules\n    InvitePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InvitePageModule\n\n\n\ncluster_InvitePageModule_imports\n\n\n\ncluster_InvitePageModule_declarations\n\n\n\n\nInvitePage\n\nInvitePage\n\n\n\nInvitePageModule\n\nInvitePageModule\n\nInvitePageModule -->\n\nInvitePage->InvitePageModule\n\n\n\n\n\nInvitePageRoutingModule\n\nInvitePageRoutingModule\n\nInvitePageModule -->\n\nInvitePageRoutingModule->InvitePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/invite/invite.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InvitePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InvitePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InvitePageRoutingModule } from './invite-routing.module';\n\nimport { InvitePage } from './invite.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InvitePageRoutingModule\n  ],\n  declarations: [InvitePage]\n})\nexport class InvitePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InvitePageRoutingModule.html":{"url":"modules/InvitePageRoutingModule.html","title":"module - InvitePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    InvitePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/invite/invite-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InvitePage } from './invite.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InvitePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InvitePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class has functions to login a existing user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                iconName\n                            \n                            \n                                inputType\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeInputType\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeInputType\n                        \n                    \n                \n            \n            \n                \nchangeInputType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.page.ts:47\n                \n            \n\n\n            \n                \n                    This function makes the password visible/disguised\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.page.ts:62\n                \n            \n\n\n            \n                \n                    This function logs the user into firebase with email and password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:18\n                        \n                    \n\n            \n                \n                    email from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:34\n                        \n                    \n\n            \n                \n                    changes the error message depending on the error\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:30\n                        \n                    \n\n            \n                \n                    changes the icon for the password visibility\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:26\n                        \n                    \n\n            \n                \n                    checks if password input is visible or nor\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login/login.page.ts:22\n                        \n                    \n\n            \n                \n                    password from user\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n/**\n * This class has functions to login a existing user\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  /**\n   email from user\n   */\n  email: string;\n  /**\n   password from user\n   */\n  password: string;\n  /**\n   checks if password input is visible or nor\n   */\n  inputType: string;\n  /**\n   changes the icon for the password visibility\n   */\n  iconName: string;\n  /**\n   changes the error message depending on the error\n   */\n  errorMessage: string;\n\n  /**\n   * @ignore\n   */\n  constructor(public authService: AuthService, public router: Router) {\n    this.inputType = \"password\";\n    this.iconName = \"eye-off-outline\";\n  }\n\n  /**\n   * This function makes the password visible/disguised\n   */\n  changeInputType(){\n    if(this.inputType === \"password\"){\n      this.inputType = \"text\";\n      this.iconName = \"eye-outline\";\n    }else{\n      this.inputType = \"password\";\n      this.iconName = \"eye-off-outline\";\n    }\n  }\n\n  /**\n   * This function logs the user into firebase with email and password\n   * @param email\n   * @param password\n   */\n  login(email: string, password: string){\n    this.authService.login(email, password).then(ret => {\n      if(ret){\n        this.errorMessage = ret;\n      }else{\n        this.router.navigate(['home']);\n      }\n    })\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Group Expense\n  \n  E-Mail\n  \n  \n\n  Passwort\n  \n    \n      \n    \n  \n  \n    \n      Passwort vergessen?\n    \n  \n  {{errorMessage}}\n  \n    Login\n  \n  \n    Neu anmelden\n  \n\n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                ion-content {\n  text-align: center;\n  .title {\n    margin-top: 50px;\n    font-size: 50px;\n  }\n  .forgotPassword {\n    color: #4c8dff;\n    font-size: 13px;\n    margin-bottom: 20px;\n  }\n  ion-label {\n    font-size: 20px;\n  }\n\n  ion-input {\n    border: solid 1px #0d0d0d;\n    border-radius: 10px;\n    width: 60%;\n    margin: 10px auto;\n    .hidePassword {\n      position: absolute;\n      right: 0\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Group Expense    E-Mail      Passwort                              Passwort vergessen?        {{errorMessage}}      Login        Neu anmelden  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberViewPage.html":{"url":"components/MemberViewPage.html","title":"component - MemberViewPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberViewPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/group/member-view/member-view.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class shows all members of the group\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-view\n            \n\n            \n                styleUrls\n                ./member-view.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-view.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMembers\n                            \n                            \n                                viewUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembers\n                        \n                    \n                \n            \n            \n                \naddMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/member-view/member-view.page.ts:55\n                \n            \n\n\n            \n                \n                    navigates to the addMembers page and adds the new selected users\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewUser\n                        \n                    \n                \n            \n            \n                \nviewUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/group/member-view/member-view.page.ts:89\n                \n            \n\n\n            \n                \n                    navigates to the selected user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from the selected user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/member-view/member-view.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/member-view/member-view.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/group/member-view/member-view.page.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {GroupService} from \"../../services/group.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AlertController, NavController} from \"@ionic/angular\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {Group} from \"../../models/group.model\";\nimport {User} from \"../../models/user.model\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {UserService} from \"../../services/user.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * This class shows all members of the group\n */\n@Component({\n  selector: 'app-member-view',\n  templateUrl: './member-view.page.html',\n  styleUrls: ['./member-view.page.scss'],\n})\nexport class MemberViewPage implements OnInit {\n\n  id: string;\n  group: Group;\n  currentUser: User;\n\n  /**\n   * @ignore\n   * @param groupService\n   * @param sanitizer\n   * @param route\n   * @param navCtrl\n   * @param alertController\n   * @param authService\n   * @param transactionService\n   * @param router\n   * @param af\n   * @param userService\n   */\n  constructor(private groupService: GroupService,\n              private sanitizer:DomSanitizer,\n              private route: ActivatedRoute,\n              private navCtrl: NavController,\n              private alertController: AlertController,\n              private authService: AuthService,\n              private transactionService: TransactionService,\n              private router: Router,\n              private af: AngularFireAuth,\n              private userService: UserService) {\n  }\n\n  /**\n   * navigates to the addMembers page and adds the new selected users\n   */\n  addMembers(){\n    this.groupService.addMembers(this.group, this.currentUser).then(members => {\n      if(members && members.length > 1){\n        this.group.members.splice(0, this.group.members.length, ...members);\n        this.groupService.update(this.group);\n      }else{\n        alert(\"mind. 1 Mitglied muss in der Gruppe sein (ohne Admin)\");\n      }\n\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewWillEnter() {\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          const groupID = this.route.snapshot.paramMap.get('id');\n          this.groupService.getGroupById(groupID).then(g => {\n            this.group = g;\n          });\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n  /**\n   * navigates to the selected user\n   * @param id - id from the selected user\n   */\n  viewUser(id: string) {\n    this.router.navigate(['friend-profile', [id]]);\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Mitglieder\n  \n\n\n\n  \n    Neu hinzufügen\n      \n      \n    \n  \n\n  \n    \n      \n      {{member.displayName}}  (Admin)\n      {{member.displayName}}\n    \n  \n\n\n\n    \n\n    \n                \n                    ./member-view.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mitglieder        Neu hinzufügen                                    {{member.displayName}}  (Admin)      {{member.displayName}}      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberViewPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MemberViewPageModule.html":{"url":"modules/MemberViewPageModule.html","title":"module - MemberViewPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MemberViewPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MemberViewPageModule\n\n\n\ncluster_MemberViewPageModule_declarations\n\n\n\ncluster_MemberViewPageModule_imports\n\n\n\n\nMemberViewPage\n\nMemberViewPage\n\n\n\nMemberViewPageModule\n\nMemberViewPageModule\n\nMemberViewPageModule -->\n\nMemberViewPage->MemberViewPageModule\n\n\n\n\n\nMemberViewPageRoutingModule\n\nMemberViewPageRoutingModule\n\nMemberViewPageModule -->\n\nMemberViewPageRoutingModule->MemberViewPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/member-view/member-view.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MemberViewPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MemberViewPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MemberViewPageRoutingModule } from './member-view-routing.module';\n\nimport { MemberViewPage } from './member-view.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MemberViewPageRoutingModule\n  ],\n  declarations: [MemberViewPage]\n})\nexport class MemberViewPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MemberViewPageRoutingModule.html":{"url":"modules/MemberViewPageRoutingModule.html","title":"module - MemberViewPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MemberViewPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/group/member-view/member-view-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MemberViewPage } from './member-view.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MemberViewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MemberViewPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsPage.html":{"url":"components/OptionsPage.html","title":"component - OptionsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OptionsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/options/options.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the option-page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options\n            \n\n            \n                styleUrls\n                ./options.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./options.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userOld\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                backBtn\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                passwordchange\n                            \n                            \n                                payment\n                            \n                            \n                                privacy\n                            \n                            \n                                    Async\n                                profileImageChange\n                            \n                            \n                                    Async\n                                saveAlert\n                            \n                            \n                                    Async\n                                saveBtn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        backBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    backBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:61\n                \n            \n\n\n            \n                \n                    This function navigates back to the Profile page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be discarded. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:44\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordchange\n                        \n                    \n                \n            \n            \n                \npasswordchange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:130\n                \n            \n\n\n            \n                \n                    Calls the save Alert function with a parameter = \"password\".\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment\n                        \n                    \n                \n            \n            \n                \npayment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:123\n                \n            \n\n\n            \n                \n                    Calls the save Alert function with a parameter = \"payment\".\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        privacy\n                        \n                    \n                \n            \n            \n                \nprivacy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:137\n                \n            \n\n\n            \n                \n                    Calls the save Alert function with a parameter = \"privacy\".\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        profileImageChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    profileImageChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:111\n                \n            \n\n\n            \n                \n                    This function opens the photo app of the device and saves it in Base64 format,\nafterwards it is saved in the variable User. Here the plugin \"Camera\" from\nCapicitor is used.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAlert(site: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:148\n                \n            \n\n\n            \n                \n                    This function navigates back to the page that comes with the parameter. It checks\nwhether the user has changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be saved. If there are no changes, then\nit is simply navigated to the page from the parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    site\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed to navigate to the right page.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/options/options.page.ts:86\n                \n            \n\n\n            \n                \n                    This function navigates back to the Profile page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be saved. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/options/options.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOld\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/options/options.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Camera, CameraResultType } from '@capacitor/camera';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * This class is needed for the option-page.\n */\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.page.html',\n  styleUrls: ['./options.page.scss'],\n})\nexport class OptionsPage {\n  user: User = new User();\n  userOld: User = new User();\n\n  /**\n   * @ignore\n   * @param sanitizer \n   * @param router \n   * @param route \n   * @param userService \n   * @param af \n   */\n  constructor(\n    public sanitizer: DomSanitizer, \n    private router: Router, \n    private route: ActivatedRoute, \n    private userService: UserService, \n    private af: AngularFireAuth\n    ) { }\n\n  /**\n   * When the page is opened, all the required information \n   * is loaded from the services and stored in the variables \n   * provided for this purpose. Important here is the check \n   * whether the user is logged in, otherwise no data will be loaded.\n   */\n  ionViewWillEnter() {\n    this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(value => {\n          this.userOld = { ...value };\n          this.user = { ...value };\n        });\n      }\n    });\n  }\n\n  /**\n   * This function navigates back to the Profile page. It checks whether the user \n   * has changed data, if this is the case, then an Ionic alert is created, which \n   * asks again whether the changes should be discarded. If there are no changes, then \n   * it is simply navigated back.\n   */\n  async backBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen verwefen?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n      if (rsl.role == \"yes\") {\n        this.user = this.userOld;\n        this.router.navigate(['profile']);\n      }\n    }\n    else {\n      this.router.navigate(['profile']);\n    }\n  }\n\n  /**\n   * This function navigates back to the Profile page. It checks whether the user \n   * has changed data, if this is the case, then an Ionic alert is created, which \n   * asks again whether the changes should be saved. If there are no changes, then \n   * it is simply navigated back.\n   */\n  async saveBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        this.userService.update(this.user);\n        this.router.navigate(['profile']);\n      }\n    }\n    else {\n      this.router.navigate(['profile']);\n    }\n  }\n\n  /**\n   * This function opens the photo app of the device and saves it in Base64 format, \n   * afterwards it is saved in the variable User. Here the plugin \"Camera\" from \n   * Capicitor is used.\n   */\n  async profileImageChange() {\n    const image = await Camera.getPhoto({\n      quality: 100,\n      allowEditing: true,\n      resultType: CameraResultType.Base64\n    });\n    this.user.profilePic = \"data:image/png;base64, \" + image.base64String;\n  }\n\n  /**\n   * Calls the save Alert function with a parameter = \"payment\".\n   */\n  payment() {\n    this.saveAlert(\"payment\");\n  }\n\n   /**\n   * Calls the save Alert function with a parameter = \"password\".\n   */\n  passwordchange() {\n    this.saveAlert('password');\n  }\n\n   /**\n   * Calls the save Alert function with a parameter = \"privacy\".\n   */\n  privacy() {\n    this.saveAlert('privacy');\n  }\n\n  /**\n   * This function navigates back to the page that comes with the parameter. It checks \n   * whether the user has changed data, if this is the case, then an Ionic alert is created, which \n   * asks again whether the changes should be saved. If there are no changes, then \n   * it is simply navigated to the page from the parameter.\n   * @param site Is needed to navigate to the right page.\n   */\n  async saveAlert(site: string) {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Nein\", role: \"no\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        this.userService.update(this.user);\n        this.router.navigate([site]);\n      } else if (rsl.role == \"no\") {\n        this.user = this.userOld;\n        this.router.navigate([site]);\n      }\n    }\n    else {\n      this.router.navigate([site]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Einstellungen\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n      \n      \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n  \n    Zahlungsmittel\n    Passwort ändern\n    Privatsphäre Einstellungen\n  \n\n\n\n    \n\n    \n                \n                    ./options.page.scss\n                \n                .profileImg {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    display: block;\n}\n\n.profileImgCol {\n    max-width: 160px;\n}\n\n.description {\n    border-style: solid;\n    border-color: black;\n    border-width: 1px;\n    border-radius: 10px;\n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Einstellungen                                                                                                                                                              Zahlungsmittel    Passwort ändern    Privatsphäre Einstellungen  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsPageModule.html":{"url":"modules/OptionsPageModule.html","title":"module - OptionsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OptionsPageModule\n\n\n\ncluster_OptionsPageModule_imports\n\n\n\ncluster_OptionsPageModule_declarations\n\n\n\n\nOptionsPage\n\nOptionsPage\n\n\n\nOptionsPageModule\n\nOptionsPageModule\n\nOptionsPageModule -->\n\nOptionsPage->OptionsPageModule\n\n\n\n\n\nOptionsPageRoutingModule\n\nOptionsPageRoutingModule\n\nOptionsPageModule -->\n\nOptionsPageRoutingModule->OptionsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/options/options.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OptionsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OptionsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OptionsPageRoutingModule } from './options-routing.module';\n\nimport { OptionsPage } from './options.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OptionsPageRoutingModule\n  ],\n  declarations: [OptionsPage]\n})\nexport class OptionsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OptionsPageRoutingModule.html":{"url":"modules/OptionsPageRoutingModule.html","title":"module - OptionsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    OptionsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/options/options-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OptionsPage } from './options.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OptionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OptionsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordPage.html":{"url":"components/PasswordPage.html","title":"component - PasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/password/password.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the password page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password\n            \n\n            \n                styleUrls\n                ./password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                newPassword1\n                            \n                            \n                                newPassword2\n                            \n                            \n                                oldPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                backBtn\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                saveBtn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        backBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    backBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/password/password.page.ts:44\n                \n            \n\n\n            \n                \n                    This function checks if there were changes by the user, if there were any then an\nionic alert is created, in this alert it is asked if the changes should be discarded.\nAfterwards it navigates back to the option page.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/password/password.page.ts:33\n                \n            \n\n\n            \n                \n                    This function initializes the varibals when calling the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/password/password.page.ts:68\n                \n            \n\n\n            \n                \n                    This function checks the entered password for the correct length,\nif the new passwords match and if the old password was correct.\nIf one of the cases is true, an error message is added to the error map,\nif it contains any, the password cannot be saved.\nA message/text is then inserted in the html.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/password/password.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/password/password.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/password/password.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/password/password.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\n\n/**\n * This class is needed for the password page.\n */\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.page.html',\n  styleUrls: ['./password.page.scss'],\n})\nexport class PasswordPage {\n  oldPassword: string;\n  newPassword1: string;\n  newPassword2: string;\n  errors: Map = new Map();\n\n  /**\n   * @ignore\n   * @param router \n   * @param authservice \n   */\n  constructor(\n    private router: Router, \n    public authservice: AngularFireAuth\n    ) { }\n\n  /**\n   * This function initializes the varibals when calling the page.\n   */\n  ionViewWillEnter() {\n    this.oldPassword = \"\";\n    this.newPassword1 = \"\";\n    this.newPassword2 = \"\";\n  }\n\n  /**\n   * This function checks if there were changes by the user, if there were any then an \n   * ionic alert is created, in this alert it is asked if the changes should be discarded. \n   * Afterwards it navigates back to the option page.\n   */\n  async backBtn() {\n    if (this.oldPassword != \"\" || this.newPassword1 != \"\" || this.newPassword2 != \"\") {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen verwefen?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n      if (rsl.role == \"yes\")\n        this.router.navigate(['options']);\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n  /**\n   * This function checks the entered password for the correct length, \n   * if the new passwords match and if the old password was correct. \n   * If one of the cases is true, an error message is added to the error map, \n   * if it contains any, the password cannot be saved. \n   * A message/text is then inserted in the html.\n   */\n  async saveBtn() {\n    this.errors.clear();\n\n    if (this.oldPassword.length == 0) {\n      this.errors.set('oldPassword', 'Altes Passwort eingeben!');\n    }\n\n    if (this.newPassword1.length == 0) {\n      this.errors.set('newPassword1', 'Neues Passwort eingeben!');\n    }\n\n    if (this.newPassword2.length == 0) {\n      this.errors.set('newPassword2', 'Neues Passwort wiederholen!');\n    }\n\n    if (this.newPassword1 != this.newPassword2) {\n      this.errors.set('newPassword2', 'Stimmt nicht überein!');\n    }\n    else if (this.newPassword1.length  this.errors.set('oldPassword', 'Altes Passwort falsch!'));\n\n    if (this.errors.size === 0) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Passwort speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        (await this.authservice.currentUser).updatePassword(this.newPassword1);\n        this.router.navigate(['options']);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Passwort ändern\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    Altes Passwort\n    \n      \n    \n\n              {{errors.get('oldPassword')}}     \n\n    Neues Passwort\n    \n      \n    \n\n              {{errors.get('newPassword1')}}     \n    \n    Neues Passwort Wiederholen\n    \n      \n    \n\n              {{errors.get('newPassword2')}}     \n\n  \n\n    \n\n    \n                \n                    ./password.page.scss\n                \n                .passwordText{\n    height: 30px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Passwort ändern                                    Altes Passwort                            {{errors.get(\\'oldPassword\\')}}         Neues Passwort                            {{errors.get(\\'newPassword1\\')}}             Neues Passwort Wiederholen                            {{errors.get(\\'newPassword2\\')}}       '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswordPageModule.html":{"url":"modules/PasswordPageModule.html","title":"module - PasswordPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswordPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PasswordPageModule\n\n\n\ncluster_PasswordPageModule_declarations\n\n\n\ncluster_PasswordPageModule_imports\n\n\n\n\nPasswordPage\n\nPasswordPage\n\n\n\nPasswordPageModule\n\nPasswordPageModule\n\nPasswordPageModule -->\n\nPasswordPage->PasswordPageModule\n\n\n\n\n\nPasswordPageRoutingModule\n\nPasswordPageRoutingModule\n\nPasswordPageModule -->\n\nPasswordPageRoutingModule->PasswordPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/password/password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PasswordPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PasswordPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PasswordPageRoutingModule } from './password-routing.module';\n\nimport { PasswordPage } from './password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PasswordPageRoutingModule\n  ],\n  declarations: [PasswordPage]\n})\nexport class PasswordPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswordPageRoutingModule.html":{"url":"modules/PasswordPageRoutingModule.html","title":"module - PasswordPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswordPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/password/password-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordPage } from './password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentPage.html":{"url":"components/PaymentPage.html","title":"component - PaymentPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/payment/payment.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the password page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                styleUrls\n                ./payment.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./payment.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userOld\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                backBtn\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                saveBtn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        backBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    backBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/payment/payment.page.ts:58\n                \n            \n\n\n            \n                \n                    This function navigates back to the option page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be discarded. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/payment/payment.page.ts:41\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/payment/payment.page.ts:83\n                \n            \n\n\n            \n                \n                    This function navigates back to the option page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be saved. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/payment/payment.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOld\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/payment/payment.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\n\n\n/**\n * This class is needed for the password page.\n */\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.page.html',\n  styleUrls: ['./payment.page.scss'],\n})\nexport class PaymentPage {\n  user: User = new User();\n  userOld: User = new User();\n\n  /**\n   * @ignore\n   * @param router \n   * @param route \n   * @param userService \n   * @param af \n   */\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private af: AngularFireAuth\n  ) { }\n\n  /**\n   * When the page is opened, all the required information \n   * is loaded from the services and stored in the variables \n   * provided for this purpose. Important here is the check \n   * whether the user is logged in, otherwise no data will be loaded.\n   */\n  ionViewWillEnter() {\n    this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(value => {\n          this.userOld = { ...value };\n          this.user = { ...value };\n        });\n      }\n    });\n  }\n\n  /**\n   * This function navigates back to the option page. It checks whether the user \n   * has changed data, if this is the case, then an Ionic alert is created, which \n   * asks again whether the changes should be discarded. If there are no changes, then \n   * it is simply navigated back.\n   */\n  async backBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen verwefen?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n      if (rsl.role == \"yes\") {\n        this.user = { ...this.userOld };\n        this.router.navigate(['options']);\n      }\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n  /**\n    * This function navigates back to the option page. It checks whether the user \n    * has changed data, if this is the case, then an Ionic alert is created, which \n    * asks again whether the changes should be saved. If there are no changes, then \n    * it is simply navigated back.\n    */\n  async saveBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        this.userService.update(this.user);\n        this.router.navigate(['options']);\n      }\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Zahlungsmittel Option\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      Zahlungsmittel vorhanden\n    \n\n    \n      Bar\n      \n    \n\n    \n      EC-Karte\n      \n    \n\n    \n      Kreditkarte\n      \n    \n\n    \n      Paypal\n      \n    \n  \n\n    \n\n    \n                \n                    ./payment.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Zahlungsmittel Option                                          Zahlungsmittel vorhanden              Bar                    EC-Karte                    Kreditkarte                    Paypal            '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentPageModule.html":{"url":"modules/PaymentPageModule.html","title":"module - PaymentPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentPageModule\n\n\n\ncluster_PaymentPageModule_declarations\n\n\n\ncluster_PaymentPageModule_imports\n\n\n\n\nPaymentPage\n\nPaymentPage\n\n\n\nPaymentPageModule\n\nPaymentPageModule\n\nPaymentPageModule -->\n\nPaymentPage->PaymentPageModule\n\n\n\n\n\nPaymentPageRoutingModule\n\nPaymentPageRoutingModule\n\nPaymentPageModule -->\n\nPaymentPageRoutingModule->PaymentPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PaymentPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaymentPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentPageRoutingModule } from './payment-routing.module';\n\nimport { PaymentPage } from './payment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PaymentPageRoutingModule\n  ],\n  declarations: [PaymentPage]\n})\nexport class PaymentPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentPageRoutingModule.html":{"url":"modules/PaymentPageRoutingModule.html","title":"module - PaymentPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/payment/payment-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentPage } from './payment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentReminderPage.html":{"url":"components/PaymentReminderPage.html","title":"component - PaymentReminderPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentReminderPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment-reminder/payment-reminder.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is used to send payment reminder to other users\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment-reminder\n            \n\n            \n                styleUrls\n                ./payment-reminder.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./payment-reminder.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                displayName_currentUser\n                            \n                            \n                                displayName_otherUser\n                            \n                            \n                                dueDate\n                            \n                            \n                                firstMsg\n                            \n                            \n                                groupName\n                            \n                            \n                                purpose\n                            \n                            \n                                secondMsg\n                            \n                            \n                                thirdMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPaymentReminder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPaymentReminder\n                        \n                    \n                \n            \n            \n                \ncreatePaymentReminder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/payment-reminder/payment-reminder.page.ts:48\n                \n            \n\n\n            \n                \n                    creates new Payment Reminder for another user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName_currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName_otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thirdMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/payment-reminder/payment-reminder.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ModalController, NavController, NavParams} from \"@ionic/angular\";\n\n/**\n * This class is used to send payment reminder to other users\n */\n@Component({\n  selector: 'app-payment-reminder',\n  templateUrl: './payment-reminder.page.html',\n  styleUrls: ['./payment-reminder.page.scss'],\n})\nexport class PaymentReminderPage implements OnInit {\n\n  displayName_otherUser: string;\n  groupName: string;\n  purpose: string;\n  amount: string;\n  dueDate: string;\n  displayName_currentUser: string;\n  firstMsg: string;\n  secondMsg: string = \"\";\n  thirdMsg: string;\n\n  /**\n   * @ignore\n   * @param navParams\n   * @param modalController\n   */\n  constructor(public navParams: NavParams, public modalController: ModalController) {\n    this.displayName_otherUser = navParams.get('displayName_otherUser');\n    this.groupName = navParams.get('groupName');\n    this.purpose = navParams.get('purpose');\n    this.amount = navParams.get('amount');\n    this.dueDate = navParams.get('dueDate');\n    this.displayName_currentUser = navParams.get('displayName_currentUser');\n    this.firstMsg = `Hallo ${this.displayName_otherUser},\\n`;\n    this.thirdMsg = `Details der Transaktion:\\n` +\n      `Gruppe:  ${this.groupName}\\n` +\n      `Zweck:  ${this.purpose}\\n` +\n      `Betrag:  ${this.amount}€\\n` +\n      `Fälligkeitsdatum:  ${new Date(this.dueDate).toLocaleDateString()}`;\n  }\n\n\n  /**\n   * creates new Payment Reminder for another user\n   */\n  createPaymentReminder() {\n    let msg = this.firstMsg + this.secondMsg + \"\\n\" + this.thirdMsg;\n    this.modalController.dismiss(msg);\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Zahlungserinnerung an {{displayName_otherUser}}\n  \n\n\n\n  {{firstMsg}}\n  \n  \n  {{thirdMsg}}\n  \n    Abbrechen\n    \n      Bestätigen\n    \n  \n\n\n    \n\n    \n                \n                    ./payment-reminder.page.scss\n                \n                ion-content {\n  text-align: center;\n  .angular-with-newlines {\n    white-space: pre-wrap;\n  }\n  ion-textarea {\n    border: #0d0d0d 2px solid;\n    border-radius: 5px;\n    width: 60%;\n    margin: 10px auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Zahlungserinnerung an {{displayName_otherUser}}    {{firstMsg}}      {{thirdMsg}}      Abbrechen          Bestätigen      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentReminderPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentReminderPageModule.html":{"url":"modules/PaymentReminderPageModule.html","title":"module - PaymentReminderPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentReminderPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentReminderPageModule\n\n\n\ncluster_PaymentReminderPageModule_imports\n\n\n\ncluster_PaymentReminderPageModule_declarations\n\n\n\n\nPaymentReminderPage\n\nPaymentReminderPage\n\n\n\nPaymentReminderPageModule\n\nPaymentReminderPageModule\n\nPaymentReminderPageModule -->\n\nPaymentReminderPage->PaymentReminderPageModule\n\n\n\n\n\nPaymentReminderPageRoutingModule\n\nPaymentReminderPageRoutingModule\n\nPaymentReminderPageModule -->\n\nPaymentReminderPageRoutingModule->PaymentReminderPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/payment-reminder/payment-reminder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PaymentReminderPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaymentReminderPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentReminderPageRoutingModule } from './payment-reminder-routing.module';\n\nimport { PaymentReminderPage } from './payment-reminder.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PaymentReminderPageRoutingModule\n  ],\n  declarations: [PaymentReminderPage]\n})\nexport class PaymentReminderPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentReminderPageRoutingModule.html":{"url":"modules/PaymentReminderPageRoutingModule.html","title":"module - PaymentReminderPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentReminderPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/payment-reminder/payment-reminder-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PaymentReminderPage } from './payment-reminder.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentReminderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentReminderPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPage.html":{"url":"components/PrivacyPage.html","title":"component - PrivacyPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/privacy/privacy.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the privacy page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy\n            \n\n            \n                styleUrls\n                ./privacy.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userOld\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                backBtn\n                            \n                            \n                                changeAwardsPublicfriends\n                            \n                            \n                                    Async\n                                deleteBtn\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Async\n                                saveBtn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        backBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    backBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:66\n                \n            \n\n\n            \n                \n                    This function navigates back to the option page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be discarded. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeAwardsPublicfriends\n                        \n                    \n                \n            \n            \n                \nchangeAwardsPublicfriends()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:140\n                \n            \n\n\n            \n                \n                    This function is needed when the value of user.awardsPublic changes to true,\nto change the value user.awardsPublicfriends as well.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:117\n                \n            \n\n\n            \n                \n                    Functionality for user deletion.\nStep by step:\n\nDelete user from friendlist, 2. delete user from groups, 3. Delete user from transactions\ndelete user from User-Collection, 5. delete user from Auth, 6. Loggout\n\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:49\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveBtn\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/privacy/privacy.page.ts:91\n                \n            \n\n\n            \n                \n                    This function navigates back to the option page. It checks whether the user\nhas changed data, if this is the case, then an Ionic alert is created, which\nasks again whether the changes should be saved. If there are no changes, then\nit is simply navigated back.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/privacy/privacy.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userOld\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/privacy/privacy.page.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { GroupService } from \"../../services/group.service\";\nimport { TransactionService } from \"../../services/transaction.service\";\nimport { AuthService } from \"../../services/auth.service\";\n\n/**\n * This class is needed for the privacy page.\n */\n\n@Component({\n  selector: 'app-privacy',\n  templateUrl: './privacy.page.html',\n  styleUrls: ['./privacy.page.scss'],\n})\nexport class PrivacyPage {\n  user: User = new User();\n  userOld: User = new User();\n\n  /**\n   * @ignore\n   * @param router\n   * @param route\n   * @param userService\n   * @param af\n   * @param groupService\n   * @param transactionService\n   * @param authService\n   */\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private af: AngularFireAuth,\n    private groupService: GroupService,\n    private transactionService: TransactionService,\n    private authService: AuthService\n  ) { }\n\n  /**\n    * When the page is opened, all the required information\n    * is loaded from the services and stored in the variables\n    * provided for this purpose. Important here is the check\n    * whether the user is logged in, otherwise no data will be loaded.\n    */\n  ionViewWillEnter() {\n    this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(value => {\n          this.userOld = { ...value };\n          this.user = { ...value };\n        });\n      }\n    });\n  }\n\n  /**\n   * This function navigates back to the option page. It checks whether the user\n   * has changed data, if this is the case, then an Ionic alert is created, which\n   * asks again whether the changes should be discarded. If there are no changes, then\n   * it is simply navigated back.\n   */\n  async backBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen verwefen?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n      if (rsl.role == \"yes\") {\n        this.user = { ...this.userOld };\n        this.router.navigate(['options']);\n      }\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n  /**\n    * This function navigates back to the option page. It checks whether the user\n    * has changed data, if this is the case, then an Ionic alert is created, which\n    * asks again whether the changes should be saved. If there are no changes, then\n    * it is simply navigated back.\n    */\n  async saveBtn() {\n    if (JSON.stringify(this.user) !== JSON.stringify(this.userOld)) {\n      const alert = document.createElement('ion-alert');\n      alert.header = 'Änderungen speichern?';\n      alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n      document.body.appendChild(alert);\n      await alert.present();\n      var rsl = await alert.onDidDismiss();\n\n      if (rsl.role == \"yes\") {\n        this.userService.update(this.user);\n        this.router.navigate(['options']);\n      }\n    }\n    else {\n      this.router.navigate(['options']);\n    }\n  }\n\n  /**\n   * Functionality for user deletion.\n   * Step by step:\n   * 1. Delete user from friendlist, 2. delete user from groups, 3. Delete user from transactions\n   * 4. delete user from User-Collection, 5. delete user from Auth, 6. Loggout\n   */\n  async deleteBtn() {\n    const alert = document.createElement('ion-alert');\n    alert.header = 'Möchtest du deinen Account wirklich löschen? Dies kann nicht rückgängig gemacht werden!';\n    alert.buttons = [{ text: \"Ja\", role: \"yes\" }, { text: \"Abbrechen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    var rsl = await alert.onDidDismiss();\n\n    if (rsl.role == \"yes\") {\n      await this.userService.deleteUserFromFriends(this.user);\n      await this.groupService.deleteUserFromAllGroups(this.user);\n      await this.transactionService.deleteAllTransactionsByUser(this.user);\n      this.userService.delete(this.user.id);\n      this.authService.delete();\n      this.authService.logout();\n    }\n  }\n\n  /**\n   * This function is needed when the value of user.awardsPublic changes to true,\n   * to change the value user.awardsPublicfriends as well.\n   */\n  changeAwardsPublicfriends() {\n    if (this.user.awardsPublic)\n      this.user.awardsPublicfriends = true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Privatsphäre Option\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      Für Fremde sichtbar\n    \n\n    \n      Profilbild\n      \n    \n\n    \n      Auszeichnungen\n      \n    \n\n    \n      Beschreibung\n      \n    \n\n    \n      Für Freunde sichtbar\n    \n\n    \n      Auszeichnungen\n      \n    \n\n    \n        Account Löschen\n    \n  \n\n\n    \n\n    \n                \n                    ./privacy.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Privatsphäre Option                                          Für Fremde sichtbar              Profilbild                    Auszeichnungen                    Beschreibung                    Für Freunde sichtbar              Auszeichnungen                      Account Löschen      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrivacyPageModule.html":{"url":"modules/PrivacyPageModule.html","title":"module - PrivacyPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PrivacyPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrivacyPageModule\n\n\n\ncluster_PrivacyPageModule_declarations\n\n\n\ncluster_PrivacyPageModule_imports\n\n\n\n\nPrivacyPage\n\nPrivacyPage\n\n\n\nPrivacyPageModule\n\nPrivacyPageModule\n\nPrivacyPageModule -->\n\nPrivacyPage->PrivacyPageModule\n\n\n\n\n\nPrivacyPageRoutingModule\n\nPrivacyPageRoutingModule\n\nPrivacyPageModule -->\n\nPrivacyPageRoutingModule->PrivacyPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/privacy/privacy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PrivacyPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrivacyPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PrivacyPageRoutingModule } from './privacy-routing.module';\n\nimport { PrivacyPage } from './privacy.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PrivacyPageRoutingModule\n  ],\n  declarations: [PrivacyPage]\n})\nexport class PrivacyPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrivacyPageRoutingModule.html":{"url":"modules/PrivacyPageRoutingModule.html","title":"module - PrivacyPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PrivacyPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/privacy/privacy-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PrivacyPage } from './privacy.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PrivacyPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PrivacyPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile/profile.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the profile-page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                badges\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                badgeDescription\n                            \n                            \n                                    Async\n                                friendlist\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                loggout\n                            \n                            \n                                    Async\n                                paymentDescription\n                            \n                            \n                                profileSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        badgeDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    badgeDescription(badgename, badgeDescription)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:95\n                \n            \n\n\n            \n                \n                    This functionality creates an Ionic alert, this contains only a title and a description,\nfurthermore there is a close button to close the Ionic alert. Used when you click on\nthe badge icons.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    badgename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the title.\n\n                                    \n                                \n                                \n                                    badgeDescription\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the description.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        friendlist\n                        \n                    \n                \n            \n            \n                \n                    \n                    friendlist()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:77\n                \n            \n\n\n            \n                \n                    This function navigates to the friends page.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:54\n                \n            \n\n\n            \n                \n                    When the page is opened, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. Important here is the check\nwhether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggout\n                        \n                    \n                \n            \n            \n                \nloggout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:112\n                \n            \n\n\n            \n                \n                    This function logs out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        paymentDescription\n                        \n                    \n                \n            \n            \n                \n                    \n                    paymentDescription(name: string, discription: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:123\n                \n            \n\n\n            \n                \n                    This functionality creates an Ionic alert, this contains only a title and a description,\nfurthermore there is a close button to close the Ionic alert. Used when clicking on\nthe icons of the payment methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the title.\n\n                                    \n                                \n                                \n                                    discription\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Required for the description.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileSettings\n                        \n                    \n                \n            \n            \n                \nprofileSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile/profile.page.ts:84\n                \n            \n\n\n            \n                \n                    This function navigates to the options page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        badges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Award[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile/profile.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile/profile.page.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { Award } from '../../models/award.model';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from '../../services/user.service';\nimport { ArwardService } from 'src/app/services/award.service';\nimport { AuthService } from \"../../services/auth.service\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { BadgeService } from 'src/app/services/badge.service';\n\n/**\n * This class is needed for the profile-page.\n */\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage {\n  badges: Award[] = [];\n  user: User = new User();\n\n  /**\n   * @ignore\n   * @param transactionsservice \n   * @param sanitizer \n   * @param router \n   * @param userService \n   * @param af \n   * @param awardService \n   * @param authService \n   * @param badgeService \n   */\n  constructor(\n    private transactionsservice: TransactionService,\n    public sanitizer: DomSanitizer,\n    public router: Router,\n    private userService: UserService,\n    private af: AngularFireAuth,\n    private awardService: ArwardService,\n    private authService: AuthService,\n    private badgeService: BadgeService\n  ) { }\n\n  /**\n   * When the page is opened, all the required information \n   * is loaded from the services and stored in the variables \n   * provided for this purpose. Important here is the check \n   * whether the user is logged in, otherwise no data will be loaded.\n   */\n  ionViewWillEnter() {\n    var sub = this.af.authState.subscribe(userAf => {\n      if (userAf) {\n        this.userService.findById(userAf.uid).then(user => {\n          this.user = { ...user };\n          this.badges = [];\n          this.transactionsservice.getAllTransactionByUser(user, true).then(transactions => {\n            this.badgeService.setBadges(user, transactions);\n            this.user.awards.forEach(element => {\n              this.awardService.findById(element).then(item => {\n                this.badges.push(item);\n              });\n            });\n          }); \n        });\n        sub.unsubscribe();\n      }\n    });\n  }\n\n  /**\n   * This function navigates to the friends page.\n   */\n  async friendlist() {\n    this.router.navigate(['friends']);\n  }\n\n  /**\n   * This function navigates to the options page.\n   */\n  profileSettings() {\n    this.router.navigate(['options']);\n  }\n\n   /**\n   * This functionality creates an Ionic alert, this contains only a title and a description, \n   * furthermore there is a close button to close the Ionic alert. Used when you click on \n   * the badge icons.\n   * @param badgename Required for the title.\n   * @param badgeDescription Required for the description.\n   */\n  async badgeDescription(badgename, badgeDescription) {\n    const alert = document.createElement('ion-alert');\n    alert.header = badgename;\n    alert.message = badgeDescription;\n    alert.buttons = [{ text: \"schließen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    await alert.onDidDismiss();\n    this.user.ec_card\n    this.user.kreditcard\n    this.user.paypal\n  }\n\n  /**\n   * This function logs out the user.\n   */\n  loggout() {\n    this.authService.logout();\n  }\n\n  /**\n   * This functionality creates an Ionic alert, this contains only a title and a description, \n   * furthermore there is a close button to close the Ionic alert. Used when clicking on \n   * the icons of the payment methods.\n   * @param name Required for the title.\n   * @param discription Required for the description.\n   */\n  async paymentDescription(name: string, discription: string) {\n    const alert = document.createElement('ion-alert');\n    alert.header = name;\n    alert.message = discription;\n    alert.buttons = [{ text: \"schließen\" }];\n\n    document.body.appendChild(alert);\n    await alert.present();\n    await alert.onDidDismiss();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n      \n    \n\n    \n      \n    \n\n    Profil\n\n    \n      \n    \n\n    \n      \n    \n\n  \n\n\n\n  \n    \n      \n        \n      \n      \n        \n          \n            {{user.displayName}}\n          \n        \n        \n          \n            {{user.description}}\n          \n        \n      \n    \n\n    \n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n      \n      \n    \n\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                .profileImg {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n}\n\n.profileImgCol{\n    max-width: 110px;\n}\n\n.profileDescriptionCol{\n    max-width: 300px;\n    margin-left: 10px;\n    //margin-right: auto;\n}\n\n.grid{\n    margin-top: 20px;\n}\n\n.name{\n    font-weight: bold;\n}\n\n.icons{\n    max-width: 50px;\n    max-height: 50px;\n}\n\n.iconsCol{\n    margin-top: 10px;\n}\n\n.row{\n    justify-content: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Profil                                                                                            {{user.displayName}}                                                {{user.description}}                                                                                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register/register.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class has functions to register a new user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                password\n                            \n                            \n                                secondPassword\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.page.ts:44\n                \n            \n\n\n            \n                \n                    This function registers a new User into firebase\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:22\n                        \n                    \n\n            \n                \n                    email from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:34\n                        \n                    \n\n            \n                \n                    displays the error message from firebase\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:26\n                        \n                    \n\n            \n                \n                    password from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secondPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:30\n                        \n                    \n\n            \n                \n                    the repeated password from user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/register/register.page.ts:18\n                        \n                    \n\n            \n                \n                    username from user\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n/**\n * This class has functions to register a new user\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  /**\n   username from user\n   */\n  username: string;\n  /**\n   email from user\n   */\n  email: string;\n  /**\n   password from user\n   */\n  password: string;\n  /**\n   the repeated password from user\n   */\n  secondPassword: string;\n  /**\n   displays the error message from firebase\n   */\n  errorMessage: string;\n\n  /**\n   * @ignore\n   */\n  constructor(public authService: AuthService, public router: Router) { }\n\n  /**\n   * This function registers a new User into firebase\n   */\n  register(){\n    if(this.password === this.secondPassword){\n      this.authService.register(this.email, this.password, this.username).then(ret => {\n        if(ret){\n          this.errorMessage = ret;\n        }\n      });\n    }else{\n      this.errorMessage = 'Passwörter nicht identisch';\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Registrieren\n  \n\n  Benutzername\n  \n  \n\n  E-Mail\n  \n  \n\n  Passwort\n  \n  \n\n  Passwort wiederholen\n  \n  \n\n  {{errorMessage}}\n  \n    Registrieren\n  \n  \n    Zurück zum Login\n  \n\n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                ion-content {\n  background: beige;\n  text-align: center;\n  p {\n    padding-top: 50px;\n    font-size: 50px;\n  }\n  ion-label {\n    font-size: 20px;\n  }\n\n  ion-input {\n    border: solid 1px #0d0d0d;\n    border-radius: 10px;\n    width: 50%;\n    margin: 10px auto;\n  }\n  ion-buttons {\n    ion-button {\n      border-radius: 10px;\n    }\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Registrieren    Benutzername      E-Mail      Passwort      Passwort wiederholen      {{errorMessage}}      Registrieren        Zurück zum Login  '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleTransaction.html":{"url":"classes/SimpleTransaction.html","title":"class - SimpleTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/simpleTransaction.model.ts\n        \n\n\n            \n                Description\n            \n            \n                SimpleTransactions are used for the home view.\nIt's a simple version of the Transaction model and is used to display a part of an Transaction between the current user and another user.\nThis class is fit for usage in the home-view and should probably not be used anywhere else.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                dueDate\n                            \n                            \n                                groupName\n                            \n                            \n                                id\n                            \n                            \n                                otherUser\n                            \n                            \n                                outgoing\n                            \n                            \n                                pending\n                            \n                            \n                                purpose\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, amount: number, purpose: string, outgoing: boolean, pending: boolean, otherUser: User, groupName: string, dueDate: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/simpleTransaction.model.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                transaction.id\n\n                                                        \n                                                \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Amount from transaction.participation (amount per user)\n\n                                                        \n                                                \n                                                \n                                                        purpose\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                transaction.purpose\n\n                                                        \n                                                \n                                                \n                                                        outgoing\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the transaction is a cost or an income for the current user\n\n                                                        \n                                                \n                                                \n                                                        pending\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                If the transaction is still pending. Check if transaction.paid == true and transaction.accepted == false\n\n                                                        \n                                                \n                                                \n                                                        otherUser\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The other user tied to this Transaction\n\n                                                        \n                                                \n                                                \n                                                        groupName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dueDate\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/simpleTransaction.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from './user.model';\n\n/**\n * SimpleTransactions are used for the home view.\n * It's a simple version of the Transaction model and is used to display a part of an Transaction between the current user and another user.\n * This class is fit for usage in the home-view and should probably not be used anywhere else.\n */\n\nexport class SimpleTransaction{\n  id: string;\n  amount: number;\n  purpose: string;\n  pending: boolean;\n  outgoing: boolean;\n  otherUser: User;\n  groupName: string;\n  dueDate: string;\n\n  /**\n   *\n   * @param id transaction.id\n   * @param amount Amount from transaction.participation (amount per user)\n   * @param purpose transaction.purpose\n   * @param outgoing  Whether the transaction is a cost or an income for the current user\n   * @param pending If the transaction is still pending. Check if transaction.paid == true and transaction.accepted == false\n   * @param otherUser The other user tied to this Transaction\n   * @param groupName\n   * @param dueDate\n   */\n  constructor(id: string, amount: number, purpose: string, outgoing: boolean, pending: boolean, otherUser: User, groupName: string, dueDate : string){\n    this.id = id;\n    this.amount = amount;\n    this.purpose = purpose;\n    this.pending = pending;\n    this.outgoing = outgoing;\n    this.otherUser = otherUser;\n    this.groupName = groupName;\n    this.dueDate = dueDate;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistic.html":{"url":"classes/Statistic.html","title":"class - Statistic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistics.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Class used to hold Group statistics.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTimeCost\n                            \n                            \n                                allTimeIncome\n                            \n                            \n                                allTimeTotal\n                            \n                            \n                                lastMonthCost\n                            \n                            \n                                lastMonthIncome\n                            \n                            \n                                lastMonthTotal\n                            \n                            \n                                lastSixMonthsCost\n                            \n                            \n                                lastSixMonthsIncome\n                            \n                            \n                                lastSixMonthsTotal\n                            \n                            \n                                lastThreeMonthsCost\n                            \n                            \n                                lastThreeMonthsIncome\n                            \n                            \n                                lastThreeMonthsTotal\n                            \n                            \n                                lastWeekCost\n                            \n                            \n                                lastWeekIncome\n                            \n                            \n                                lastWeekTotal\n                            \n                            \n                                lastYearCost\n                            \n                            \n                                lastYearIncome\n                            \n                            \n                                lastYearTotal\n                            \n                            \n                                newestDate\n                            \n                            \n                                startDate\n                            \n                            \n                                timespan\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: Date, newestDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistics.model.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                transaction.purchaseDate\n\n                                                        \n                                                \n                                                \n                                                        newestDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                new Date()\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allTimeCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTimeIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTimeTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastMonthCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastMonthIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastMonthTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastSixMonthsCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastSixMonthsIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastSixMonthsTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastThreeMonthsCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastThreeMonthsIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastThreeMonthsTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastWeekCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastWeekIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastWeekTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastYearCost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastYearIncome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastYearTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newestDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timespan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/statistics.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Statistic{\n  startDate: Date;\n  newestDate: Date;\n  timespan: number;\n\n  allTimeTotal = 0;\n  allTimeCost = 0;\n  allTimeIncome = 0;\n\n  lastYearTotal = 0;\n  lastYearCost = 0;\n  lastYearIncome = 0;\n\n  lastSixMonthsTotal = 0;\n  lastSixMonthsCost = 0;\n  lastSixMonthsIncome = 0;\n\n  lastThreeMonthsTotal = 0;\n  lastThreeMonthsCost = 0;\n  lastThreeMonthsIncome = 0;\n\n  lastMonthTotal = 0;\n  lastMonthCost = 0;\n  lastMonthIncome = 0;\n\n  lastWeekTotal = 0;\n  lastWeekCost = 0;\n  lastWeekIncome = 0;\n\n  /**\n   *\n   * @param startDate transaction.purchaseDate\n   * @param newestDate new Date()\n   */\n  constructor(startDate: Date, newestDate: Date) {\n    this.startDate = startDate;\n    this.newestDate = newestDate;\n    // @ts-ignore\n    this.timespan = Math.round(((newestDate - startDate)/ 86400000));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatisticsPage.html":{"url":"components/StatisticsPage.html","title":"component - StatisticsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatisticsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/statistics/statistics.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is needed for the profile-page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-statistics\n            \n\n            \n                styleUrls\n                ./statistics.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./statistics.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                income\n                            \n                            \n                                outcome\n                            \n                            \n                                pie\n                            \n                            \n                                pieChart\n                            \n                            \n                                self\n                            \n                            \n                                transactions\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeStats\n                            \n                            \n                                createPieChart\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changeStats\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStats(days: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/statistics/statistics.page.ts:75\n                \n            \n\n\n            \n                \n                    This function calls the statistics functions to calculate data for a certain period of time.\nThese are then stored in the respective variables and the data set of the pie chart is also updated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of days for which the data should be loaded, -1 stands for the entire period.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createPieChart\n                        \n                    \n                \n            \n            \n                \ncreatePieChart(days: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/statistics/statistics.page.ts:90\n                \n            \n\n\n            \n                \n                    This function creates a pie chart with two pieces, incomes and outcomes, for a given time period.\nIt calls the statistics functions to calculate the data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of days for which the data should be loaded, -1 stands for the entire period.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/statistics/statistics.page.ts:54\n                \n            \n\n\n            \n                \n                    When the page is initialized, all the required information\nis loaded from the services and stored in the variables\nprovided for this purpose. It is important that this is done\nat initialization otherwise there will be problems with the pichart.\nImportant here is the check whether the user is logged in, otherwise no data will be loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        income\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outcome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pie\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieChart\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('pieChart')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        self\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/statistics/statistics.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { Transaction } from 'src/app/models/transaction.model';\nimport { User } from 'src/app/models/user.model';\nimport { StatisticsService } from 'src/app/services/statistics.service';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Chart from 'chart.js/auto'\n\n/**\n * This class is needed for the profile-page.\n */\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.page.html',\n  styleUrls: ['./statistics.page.scss'],\n})\n\nexport class StatisticsPage implements OnInit {\n  user: User = new User();\n  transactions: Transaction[];\n  income: number = 0;\n  outcome: number = 0;\n  self: number = 0;\n  pie: Chart;\n\n  @ViewChild('pieChart') pieChart;\n\n  /**\n   * @ignore\n   * @param router\n   * @param af\n   * @param transactionsservice\n   * @param userService\n   * @param stats\n   */\n  constructor(\n    public router: Router,\n    private af: AngularFireAuth,\n    private transactionsservice: TransactionService,\n    private userService: UserService,\n    private stats: StatisticsService\n  ) { }\n\n  /**\n    * When the page is initialized, all the required information\n    * is loaded from the services and stored in the variables\n    * provided for this purpose. It is important that this is done\n    * at initialization otherwise there will be problems with the pichart.\n    * Important here is the check whether the user is logged in, otherwise no data will be loaded.\n    */\n  ngOnInit() {\n    var sub = this.af.authState.subscribe(afuser => {\n      if (afuser) {\n        this.userService.findById(afuser.uid).then(user => {\n          this.user = user;\n          this.transactionsservice.getAllTransactionByUser(user, true).then(res => {\n            this.transactions = res;\n            this.createPieChart(30);\n            this.changeStats(30);\n          });\n        });\n        sub.unsubscribe();\n      }\n    });\n  }\n\n  /**\n   * This function calls the statistics functions to calculate data for a certain period of time.\n   * These are then stored in the respective variables and the data set of the pie chart is also updated.\n   * @param days Number of days for which the data should be loaded, -1 stands for the entire period.\n   */\n  async changeStats(days: number) {\n    this.income = this.stats.getAllIncomeOfTime(days, this.transactions, this.user.id)[0];\n    this.outcome = this.stats.getAllExpensesOfTime(days, this.transactions, this.user.id)[0];\n    this.self = this.stats.getAllSelfmadeTransactionsOfTime(this.user.id, days, this.transactions);\n    this.pie.data.datasets.forEach((dataset) => {\n      dataset.data = [this.stats.getAllIncomeOfTime(days, this.transactions, this.user.id)[0], this.stats.getAllExpensesOfTime(days, this.transactions, this.user.id)[0]];\n    });\n    this.pie.update();\n  }\n\n  /**\n   * This function creates a pie chart with two pieces, incomes and outcomes, for a given time period.\n   * It calls the statistics functions to calculate the data.\n   * @param days Number of days for which the data should be loaded, -1 stands for the entire period.\n   */\n  createPieChart(days: number) {\n    this.pie = new Chart(this.pieChart.nativeElement, {\n      type: 'pie',\n      data: {\n        labels: ['Einnahmen', 'Ausgaben'],\n        datasets: [\n          {\n            label: 'Dataset 1',\n            data: [this.stats.getAllIncomeOfTime(days, this.transactions, this.user.id)[0], this.stats.getAllExpensesOfTime(days, this.transactions, this.user.id)[0]],\n            backgroundColor: [\"rgba(104, 237, 136, 1)\", \"rgba(237, 104, 104, 1)\"],\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n          }\n        }\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    Statistiken\n  \n\n\n\n  \n    Zeitraum\n    \n      1 Tag\n      1 Woche\n      1 Monat\n      3 Monate\n      6 Monate\n      1 Jahr\n      Gesamt\n    \n  \n\n\n  \n    \n      Einnahmen = {{income}}€\n    \n  \n\n  \n    \n      Ausgaben = {{outcome}}€\n    \n   -->\n\n  \n    \n      {{self}} Selbst angelegte Transaktionen!\n    \n  \n\n  \n    \n      Einnahmen und Ausgaben\n        \n    \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./statistics.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Statistiken        Zeitraum          1 Tag      1 Woche      1 Monat      3 Monate      6 Monate      1 Jahr      Gesamt                  Einnahmen = {{income}}€                  Ausgaben = {{outcome}}€       -->            {{self}} Selbst angelegte Transaktionen!                  Einnahmen und Ausgaben                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatisticsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatisticsPageModule.html":{"url":"modules/StatisticsPageModule.html","title":"module - StatisticsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    StatisticsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatisticsPageModule\n\n\n\ncluster_StatisticsPageModule_imports\n\n\n\ncluster_StatisticsPageModule_declarations\n\n\n\n\nStatisticsPage\n\nStatisticsPage\n\n\n\nStatisticsPageModule\n\nStatisticsPageModule\n\nStatisticsPageModule -->\n\nStatisticsPage->StatisticsPageModule\n\n\n\n\n\nStatisticsPageRoutingModule\n\nStatisticsPageRoutingModule\n\nStatisticsPageModule -->\n\nStatisticsPageRoutingModule->StatisticsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/statistics/statistics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatisticsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StatisticsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StatisticsPageRoutingModule } from './statistics-routing.module';\n\nimport { StatisticsPage } from './statistics.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StatisticsPageRoutingModule\n  ],\n  declarations: [StatisticsPage]\n})\nexport class StatisticsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatisticsPageRoutingModule.html":{"url":"modules/StatisticsPageRoutingModule.html","title":"module - StatisticsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StatisticsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/statistics/statistics-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StatisticsPage } from './statistics.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatisticsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StatisticsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatisticsService.html":{"url":"injectables/StatisticsService.html","title":"injectable - StatisticsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatisticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/statistics.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for calculating group & user statistics.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllExpensesOfTime\n                            \n                            \n                                getAllIncomeOfTime\n                            \n                            \n                                getAllSelfmadeTransactionsOfTime\n                            \n                            \n                                getDays\n                            \n                            \n                                getGroupStatistics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpensesOfTime\n                        \n                    \n                \n            \n            \n                \ngetAllExpensesOfTime(days: number, transactions: Transaction[], userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:79\n                \n            \n\n\n            \n                \n                    This function returns all expenses of a user for a period of time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Specifies the number of days, -1 represents the entire period.\n\n                                    \n                                \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the transactions from a user in an array.\n\n                                    \n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed for the identification of the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        Returns all expenses of a user for a period of time.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllIncomeOfTime\n                        \n                    \n                \n            \n            \n                \ngetAllIncomeOfTime(days: number, transactions: Transaction[], userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:102\n                \n            \n\n\n            \n                \n                    This function returns all income of a user for a period of time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Specifies the number of days, -1 represents the entire period.\n\n                                    \n                                \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the transactions from a user in an array.\n\n                                    \n                                \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed for the identification of the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        Returns all income of a user for a period of time.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllSelfmadeTransactionsOfTime\n                        \n                    \n                \n            \n            \n                \ngetAllSelfmadeTransactionsOfTime(userid: string, days: number, transactions: Transaction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:125\n                \n            \n\n\n            \n                \n                    This function returns all created transactions of a user for a period of time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Is needed for the identification of the user.\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Specifies the number of days, -1 represents the entire period.\n\n                                    \n                                \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the transactions from a user in an array.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Returns all created transactions of a user for a period of time.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDays\n                        \n                    \n                \n            \n            \n                \ngetDays(date1: Date, date2: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:67\n                \n            \n\n\n            \n                \n                    Calculates the difference between two dates in days.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date1\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        transaction.purchaseDate\n\n                                    \n                                \n                                \n                                    date2\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new Date()\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroupStatistics\n                        \n                    \n                \n            \n            \n                \ngetGroupStatistics(transactions: Transaction[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/statistics.service.ts:18\n                \n            \n\n\n            \n                \n                    Creates and returns a new Statistics object and calculates data for the different time-spans.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transactions\n                                    \n                                            Transaction[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array containing all transactions of the given group\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Statistic\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Transaction } from \"../models/transaction.model\";\nimport { Injectable } from \"@angular/core\";\nimport { Statistic } from \"../models/statistics.model\";\n\n/**\n * Service for calculating group & user statistics.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StatisticsService {\n  /**\n   * Creates and returns a new Statistics object and calculates data for the different time-spans.\n   * @param transactions Array containing all transactions of the given group\n   */\n  getGroupStatistics(transactions: Transaction[]): Statistic {\n    let today = new Date();\n    let statistic = new Statistic(new Date(transactions[0].purchaseDate), today)\n\n    transactions.forEach(transaction => {\n      transaction.amount = Math.round(transaction.amount * 100) / 100\n      //All time\n      statistic.allTimeTotal++;\n      if (transaction.type === \"cost\") statistic.allTimeCost += transaction.amount;\n      else statistic.allTimeIncome += transaction.amount;\n      //Last year\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastYearTotal++;\n        if (transaction.type === \"cost\") statistic.lastYearCost += transaction.amount;\n        else statistic.lastYearIncome += transaction.amount;\n      }\n      //Last 6 months\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastSixMonthsTotal++;\n        if (transaction.type === \"cost\") statistic.lastSixMonthsCost += transaction.amount;\n        else statistic.lastSixMonthsIncome += transaction.amount;\n      }\n      //Last 3 Months\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastThreeMonthsTotal++;\n        if (transaction.type === \"cost\") statistic.lastThreeMonthsCost += transaction.amount;\n        else statistic.lastThreeMonthsIncome += transaction.amount;\n      }\n      //Last Month\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastMonthTotal++;\n        if (transaction.type === \"cost\") statistic.lastMonthCost += transaction.amount;\n        else statistic.lastMonthIncome += transaction.amount;\n      }\n      //Last Week\n      if (this.getDays(new Date(transaction.purchaseDate), today) = 0) {\n        statistic.lastWeekTotal++;\n        if (transaction.type === \"cost\") statistic.lastWeekCost += transaction.amount;\n        else statistic.lastWeekIncome += transaction.amount;\n      }\n    });\n    return statistic;\n  }\n\n  /**\n   * Calculates the difference between two dates in days.\n   * @param date1 transaction.purchaseDate\n   * @param date2 new Date()\n   */\n  getDays(date1: Date, date2: Date): Number {\n    // @ts-ignore\n    return Math.round(((date2 - date1) / 86400000))\n  }\n\n  /**\n   * This function returns all expenses of a user for a period of time.\n   * @param days Specifies the number of days, -1 represents the entire period.\n   * @param transactions Contains the transactions from a user in an array.\n   * @param userID Is needed for the identification of the user.\n   * @returns Returns all expenses of a user for a period of time.\n   */\n  getAllExpensesOfTime(days: number, transactions: Transaction[], userID: string) {\n    let costs = 0;\n    let ammount = 0;\n    transactions.forEach(transaction => {\n      if (transaction.type === \"cost\") {\n        if (this.getDays(new Date(transaction.purchaseDate), new Date())  {\n            if (p.user.id === userID) costs += p.stake;\n          })\n          ammount++;\n        }\n      }\n    });\n    return [Math.round(costs * 100) / 100, ammount];\n  }\n\n  /**\n     * This function returns all income of a user for a period of time.\n     * @param days Specifies the number of days, -1 represents the entire period.\n     * @param transactions Contains the transactions from a user in an array.\n     * @param userID Is needed for the identification of the user.\n     * @returns Returns all income of a user for a period of time.\n     */\n  getAllIncomeOfTime(days: number, transactions: Transaction[], userID: string) {\n    var costs: number = 0;\n    var ammount: number = 0;\n    transactions.forEach(transaction => {\n      if (transaction.type === \"income\") {\n        if (this.getDays(new Date(transaction.purchaseDate), new Date())  {\n            if (p.user.id === userID) costs += p.stake;\n          })\n          ammount++;\n        }\n      }\n    });\n    return [Math.round(costs * 100) / 100, ammount];\n  }\n\n  /**\n     * This function returns all created transactions of a user for a period of time.\n     * @param userid Is needed for the identification of the user.\n     * @param days Specifies the number of days, -1 represents the entire period.\n     * @param transactions Contains the transactions from a user in an array.\n     * @returns Returns all created transactions of a user for a period of time.\n     */\n  getAllSelfmadeTransactionsOfTime(userid: string, days: number, transactions: Transaction[]) {\n    var ammount: number = 0;\n    transactions.forEach(item => {\n      if (item.creator.id === userid) {\n        if (this.getDays(new Date(item.purchaseDate), new Date()) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/transaction.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                creator\n                            \n                            \n                                dueDate\n                            \n                            \n                                gid\n                            \n                            \n                                id\n                            \n                            \n                                pending\n                            \n                            \n                                photo\n                            \n                            \n                                purchaseDate\n                            \n                            \n                                purpose\n                            \n                            \n                                rhythm\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gid, amount, purpose, type, pending, rhythm, creator, purchaseDate?, dueDate?, photo?, id?)\n                    \n                \n                        \n                            \n                                Defined in src/app/transaction.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gid\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        amount\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        purpose\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pending\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rhythm\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        creator\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        purchaseDate\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        dueDate\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        photo\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pending\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purchaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rhythm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Transaction{\n  id: string;\n  gid: string;\n  amount: number;\n  purpose: String;\n  type: string;\n  pending: boolean;\n  purchaseDate: Date;\n  dueDate: Date;\n  rhythm: string;\n  photo: any;\n  creator: string;\n\n  constructor(gid, amount, purpose, type, pending, rhythm, creator, purchaseDate?, dueDate?, photo?, id?){\n    this.gid = gid;\n    this.id = id;\n    this.amount = amount;\n    this.purpose = purpose;\n    this.type = type;\n    this.pending = pending;\n    this.purchaseDate = purchaseDate;\n    this.dueDate = dueDate;\n    this.rhythm = rhythm;\n    this.photo = photo;\n    this.creator = creator;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction-1.html":{"url":"classes/Transaction-1.html","title":"class - Transaction-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/transaction.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing the data type for the transaction.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accepted\n                            \n                            \n                                amount\n                            \n                            \n                                creator\n                            \n                            \n                                dueDate\n                            \n                            \n                                finished\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                paid\n                            \n                            \n                                participation\n                            \n                            \n                                photo\n                            \n                            \n                                purchaseDate\n                            \n                            \n                                purpose\n                            \n                            \n                                rhythm\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accepted\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purchaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purpose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rhythm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transaction.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from './user.model';\nimport {Group} from './group.model';\n\n/**\n * Class representing the data type for the transaction.\n */\nexport class Transaction{\n  id: string; //The id used in the database to identify the transaction\n  group: Group; //The group the transaction is part of\n  amount: number; //The total price that is paid or received\n  purpose: string; //The purpose of the transaction\n  type: string; //Either income or cost.\n  purchaseDate: string; //The date the bill was first created\n  dueDate: string; //The date when the transaction is due\n  rhythm: string; //The reoccurance of the transaction\n  photo: any; //A picture showing the bill\n  creator: User; //The creator of the transcation\n  finished: boolean; //Flag whether everyone has paid or not\n\n  participation: {user: User; stake: number}[]; //All participants of the transaction\n  accepted: {user: User; accepted: boolean}[]; //All participants that paid and whose payment got accepted by the creator\n  paid: {user: User; paid: boolean}[]; //All participants that marked the transaction as paid.\n\n  /**\n   * @ignore\n   * @param id\n   * @param amount\n   * @param purpose\n   * @param type\n   * @param rhythm\n   * @param creator\n   * @param purchaseDate\n   * @param dueDate\n   * @param photo\n   * @param group\n   */\n  constructor(id: string, amount: number, purpose: string, type: string, rhythm: string, creator: User, purchaseDate : string, dueDate : string, photo? : any,  group? : Group){\n    this.group = group;\n    this.id = id;\n    this.amount = amount;\n    this.purpose = purpose;\n    this.type = type;\n    this.purchaseDate = purchaseDate;\n    this.dueDate = dueDate;\n    this.rhythm = rhythm;\n    this.photo = photo;\n    this.creator = creator;\n    this.finished = false;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionCreatePage.html":{"url":"components/TransactionCreatePage.html","title":"component - TransactionCreatePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionCreatePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transaction/transaction-create/transaction-create.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-create\n            \n\n            \n                styleUrls\n                ./transaction-create.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-create.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                currentUser\n                            \n                            \n                                errors\n                            \n                            \n                                fairlyDistributedPrice\n                            \n                            \n                                fromGroup\n                            \n                            \n                                groups\n                            \n                            \n                                maxDate\n                            \n                            \n                                selectAllUsers\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateStakes\n                            \n                            \n                                cancel\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                takePicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateStakes\n                        \n                    \n                \n            \n            \n                \ncalculateStakes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:90\n                \n            \n\n\n            \n                \n                    Function to calculate stakes for all participants.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:159\n                \n            \n\n\n            \n                \n                    Function to cancel transaction creation and navigate to last page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:107\n                \n            \n\n\n            \n                \n                    Function to save the current data locally and navigate to the next creation page or finish the transaction creation. Checks for errors of inputs.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        takePicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    takePicture()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-create/transaction-create.page.ts:166\n                \n            \n\n\n            \n                \n                    Function to attach a picture to the transaction.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : new Date().toISOString()\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fairlyDistributedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fromGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear() + 3\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAllUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-create/transaction-create.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Group} from \"../../models/group.model\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NavController} from \"@ionic/angular\";\nimport {Transaction} from \"../../models/transaction.model\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {GroupService} from \"../../services/group.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Camera, CameraResultType} from \"@capacitor/camera\";\nimport {TransactionTracker} from \"../../models/transactionTracker.model\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {User} from \"../../models/user.model\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-transaction-create',\n  templateUrl: './transaction-create.page.html',\n  styleUrls: ['./transaction-create.page.scss'],\n})\n/**\n * Class representing the logic for the transaction create view.\n */\nexport class TransactionCreatePage implements OnInit {\n  //The transaction that is going to be saved or passed later on.\n  transaction: Transaction;\n  //The groups of the current user.\n  groups: Group[] = [];\n  //Boolean to check whether the participants are picked individually or all at once.\n  selectAllUsers: boolean = true;\n  //Boolean to check whether everyone pays the same or stakes are decided indiviudally.\n  fairlyDistributedPrice: boolean = true;\n  //String for the current date to prevent past dates in date pickers\n  currentDate: string = new Date().toISOString();\n  //Calculation of max date; 3 years from now.\n  maxDate = new Date().getFullYear() + 3;\n  //Map for saving occuring errors and corresponding messages.\n  errors: Map = new Map();\n  //Boolean to mark whether the user came via group menu or not\n  fromGroup: boolean = false;\n  currentUser: User;\n\n  ionViewWillEnter(){\n    if (this.route.snapshot.paramMap.get('fromGroup')) {\n      this.fromGroup = true;\n      this.groupService.getGroupById(this.route.snapshot.paramMap.get('groupID')).then(group => {this.transaction.group = group});\n    }\n  }\n\n  /**\n   * @ignore\n   * @param router\n   * @param navCtrl\n   * @param route\n   * @param transactionService\n   * @param groupService\n   * @param userService\n   * @param af\n   * @param authService\n   */\n  constructor(private router: Router,\n              private navCtrl: NavController,\n              private route: ActivatedRoute,\n              private transactionService: TransactionService,\n              private groupService: GroupService,\n              private userService: UserService,\n              private af: AngularFireAuth,\n              private authService : AuthService) {\n\n      this.transaction = new Transaction(\"\", null, \"\", \"cost\", \"once\", authService.currentUser, new Date().toDateString(), new Date(new Date().getTime() + 7 * 24 * 60 * 60 * 1000).toDateString());\n      this.transaction.paid = [];\n      this.transaction.accepted = [];\n      this.transaction.participation = [];\n\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          this.groupService.getGroupsByUserId(this.currentUser.id).then(groups => {\n            this.groups = groups;\n          });\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n  /**\n   * Function to calculate stakes for all participants.\n   */\n  calculateStakes() {\n    let stake: number = this.transaction.amount / this.transaction.group.members.length;\n    for (let user of this.transaction.group.members) {\n      let stakeEntry = {user, stake};\n      let paid = user.id === this.transaction.creator.id;\n      let accepted = user.id === this.transaction.creator.id;\n      let paidEntry = {user, paid};\n      let acceptedEntry = {user, accepted};\n      this.transaction.participation.push(stakeEntry);\n      this.transaction.accepted.push(acceptedEntry);\n      this.transaction.paid.push(paidEntry);\n    }\n  }\n\n  /**\n   * Function to save the current data locally and navigate to the next creation page or finish the transaction creation. Checks for errors of inputs.\n   */\n  nextPage(): void {\n    this.errors.clear();\n    if (!this.transaction.purpose){\n      this.errors.set('purpose', 'Bitte geben Sie einen Zweck an.');\n    }\n    if (!this.transaction.amount){\n      this.errors.set('amount', 'Bitte geben Sie einen Betrag an.');\n    }\n    if(this.transaction.amount  {\n            if (this.transaction.rhythm !== 'once') {\n              this.transactionService.getTransactionById(docRef.id).then((doc: any) => {\n                let transaction: Transaction = doc;\n                let tracker = new TransactionTracker(transaction,\n                  transaction.creator,\n                  new Date(transaction.dueDate),\n                  new Date(new Date(this.transaction.dueDate).getTime() + this.transactionService.getRhythmMiliseconds(this.transaction.rhythm)),\n                  new Date(this.transaction.dueDate),\n                  this.transactionService.getRhythmMiliseconds(this.transaction.rhythm));\n                this.transactionService.persistTracker(tracker);\n              });\n            }\n          });\n        this.navCtrl.pop();\n        return;\n      }\n      if (!this.selectAllUsers) {\n        this.transactionService.saveLocally(this.transaction);\n        this.router.navigate(['transaction-participants', {'fairlyDistributedPrice': JSON.stringify(this.fairlyDistributedPrice)}]);\n        return;\n      }\n      if (!this.fairlyDistributedPrice) {\n        this.transactionService.saveLocally(this.transaction);\n        this.router.navigate(['transaction-stakes']);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Function to cancel transaction creation and navigate to last page.\n   */\n  cancel(): void {\n    this.navCtrl.pop();\n  }\n\n  /**\n   * Function to attach a picture to the transaction.\n   */\n  async takePicture() {\n    await Camera.getPhoto({\n        quality: 90,\n        allowEditing: false,\n        resultType: CameraResultType.Base64\n      }).then(data => {\n        this.transaction.photo = \"data:image/jpeg;base64, \" + data.base64String;\n      });\n  }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    Neue Transaktion\n  \n\n\n\n  \n    {{groupChoice.name}}\n  \n  \n    Keine Gruppe gefunden.\n  \n  \n    {{transaction.group.name}}\n  \n  {{errors.get('group')}}\n  \n    Einnahme\n    Ausgabe\n  \n  \n    Zweck\n    \n  \n  {{errors.get('purpose')}}\n  \n    Betrag\n    \n    €\n  \n  {{errors.get('amount')}}\n  \n    Rechnungsdatum\n    \n  \n  \n    Fälligkeitsdatum\n    \n  \n  \n    Rhythmus\n    \n      Einmalig\n      Täglich\n      Wöchentlich\n      Monatlich\n      Jährlich\n    \n  \n  \n    Alle auswählen\n    \n  \n  \n    Fair aufteilen\n    \n  \n  \n    Beleg\n    \n    \n      \n    \n    \n      \n    \n  \n  \n  \n    \n    \n  \n  \n  \n  \n    \n  \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-create.page.scss\n                \n                .center {\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Neue Transaktion        {{groupChoice.name}}        Keine Gruppe gefunden.        {{transaction.group.name}}    {{errors.get(\\'group\\')}}      Einnahme    Ausgabe        Zweck        {{errors.get(\\'purpose\\')}}      Betrag        €    {{errors.get(\\'amount\\')}}      Rechnungsdatum            Fälligkeitsdatum            Rhythmus          Einmalig      Täglich      Wöchentlich      Monatlich      Jährlich            Alle auswählen            Fair aufteilen            Beleg                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionCreatePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionCreatePageModule.html":{"url":"modules/TransactionCreatePageModule.html","title":"module - TransactionCreatePageModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionCreatePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionCreatePageModule\n\n\n\ncluster_TransactionCreatePageModule_imports\n\n\n\ncluster_TransactionCreatePageModule_exports\n\n\n\ncluster_TransactionCreatePageModule_declarations\n\n\n\n\nTransactionCreatePage\n\nTransactionCreatePage\n\n\n\nTransactionCreatePageModule\n\nTransactionCreatePageModule\n\nTransactionCreatePageModule -->\n\nTransactionCreatePage->TransactionCreatePageModule\n\n\n\n\n\nTransactionCreatePage \n\nTransactionCreatePage \n\nTransactionCreatePage  -->\n\nTransactionCreatePageModule->TransactionCreatePage \n\n\n\n\n\nTransactionCreatePageRoutingModule\n\nTransactionCreatePageRoutingModule\n\nTransactionCreatePageModule -->\n\nTransactionCreatePageRoutingModule->TransactionCreatePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-create/transaction-create.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionCreatePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionCreatePageRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionCreatePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionCreatePageRoutingModule } from './transaction-create-routing.module';\n\nimport { TransactionCreatePage } from './transaction-create.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionCreatePageRoutingModule\n  ],\n  exports: [\n    TransactionCreatePage\n  ],\n  declarations: [TransactionCreatePage]\n})\nexport class TransactionCreatePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionCreatePageRoutingModule.html":{"url":"modules/TransactionCreatePageRoutingModule.html","title":"module - TransactionCreatePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionCreatePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-create/transaction-create-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionCreatePage } from './transaction-create.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionCreatePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionCreatePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionDetailsPage.html":{"url":"components/TransactionDetailsPage.html","title":"component - TransactionDetailsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionDetailsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transaction/transaction-details/transaction-details.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-details\n            \n\n            \n                styleUrls\n                ./transaction-details.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-details.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accepted\n                            \n                            \n                                currentUser\n                            \n                            \n                                currentView\n                            \n                            \n                                hasStake\n                            \n                            \n                                notPaid\n                            \n                            \n                                otherUserId\n                            \n                            \n                                paidAndNotAccepted\n                            \n                            \n                                stake\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                deleteTracker\n                            \n                            \n                                formatRhythm\n                            \n                            \n                                formatType\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                payTransaction\n                            \n                            \n                                removePicture\n                            \n                            \n                                    Async\n                                takePicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:125\n                \n            \n\n\n            \n                \n                    Function to delete the current viewed transaction after confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTracker\n                        \n                    \n                \n            \n            \n                \ndeleteTracker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:136\n                \n            \n\n\n            \n                \n                    Function to delete the tracker of the current transaction after confirmation if there is one.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatRhythm\n                        \n                    \n                \n            \n            \n                \nformatRhythm(rhythm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:99\n                \n            \n\n\n            \n                \n                    Function to return a more readable format for the transaction rhythm.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rhythm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the intern representation of the rhythm.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatType\n                        \n                    \n                \n            \n            \n                \nformatType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:84\n                \n            \n\n\n            \n                \n                    Function to return a more readable format for the transaction type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the intern representation of the type.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payTransaction\n                        \n                    \n                \n            \n            \n                \npayTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:151\n                \n            \n\n\n            \n                \n                    Function to send the information of payment to the owner of the transaction for confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePicture\n                        \n                    \n                \n            \n            \n                \nremovePicture()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:192\n                \n            \n\n\n            \n                \n                    Function to remove attachment from transaction.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        takePicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    takePicture()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-details/transaction-details.page.ts:177\n                \n            \n\n\n            \n                \n                    Function to upload a picture in the attachment tab.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accepted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'overview'\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasStake\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notPaid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        otherUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paidAndNotAccepted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stake\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-details/transaction-details.page.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Transaction} from \"../../models/transaction.model\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {Camera, CameraResultType} from \"@capacitor/camera\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {User} from \"../../models/user.model\";\nimport {NavController} from \"@ionic/angular\";\n\n\n@Component({\n  selector: 'app-transaction-details',\n  templateUrl: './transaction-details.page.html',\n  styleUrls: ['./transaction-details.page.scss'],\n})\n/**\n * Class representing the logic for the transaction detal view.\n */\nexport class TransactionDetailsPage implements OnInit {\n  transaction: Transaction; //transaction of which the details are shown\n  currentView: string = 'overview'; //tab which is shown\n  otherUserId: string; //ID of the user which is targeted (when the current user wants to pay out an income to all participants this helps with the payment for one specific participant)\n  hasStake: boolean = false; //Boolean whether the current user is involved in the transaction or not\n  currentUser: User;\n  stake: number;\n  paidAndNotAccepted: boolean;\n  accepted: boolean;\n  notPaid: boolean;\n  /**\n   * @ignore\n   * @param route\n   * @param sanitizer\n   * @param transactionService\n   * @param router\n   * @param authService\n   * @param userService\n   * @param navCtrl\n   * @param af\n   */\n  constructor(private route: ActivatedRoute,\n              private sanitizer: DomSanitizer,\n              private transactionService : TransactionService,\n              private router: Router,\n              private authService: AuthService,\n              private userService: UserService,\n              private navCtrl: NavController,\n              private af: AngularFireAuth,) {\n    this.transaction = this.transactionService.getLocally();\n    this.otherUserId = JSON.parse(localStorage.getItem('otherUser'));\n  }\n\n  ionViewWillEnter() {\n\n    const sub = this.af.authState.subscribe(user => {\n      if (user) {\n        this.userService.findById(user.uid).then(result => {\n          this.currentUser = result;\n          this.transaction.participation.forEach(entry => {\n            if (entry.user.id === this.currentUser.id){\n              this.hasStake = true;\n            }\n          })\n          this.stake = this.transactionService.getStakeForUser(this.currentUser, this.transaction);\n          this.paidAndNotAccepted = (this.transactionService.hasUserPaid(this.currentUser.id, this.transaction) && !this.transactionService.wasPaymentAccepted(this.currentUser.id, this.transaction))\n          this.accepted = this.transactionService.wasPaymentAccepted(this.currentUser.id, this.transaction);\n          this.notPaid =  !this.transactionService.hasUserPaid(this.currentUser.id, this.transaction);\n          sub.unsubscribe();\n        });\n      }\n    });\n  }\n\n\n  ngOnInit() {\n  }\n\n  /**\n   * Function to return a more readable format for the transaction type.\n   * @param type: the intern representation of the type.\n   */\n  formatType(type: string): string{\n    switch (type) {\n      case 'cost': {\n        return 'Ausgabe';\n      }\n      case 'income': {\n        return 'Einnahme';\n      }\n    }\n  }\n\n  /**\n   * Function to return a more readable format for the transaction rhythm.\n   * @param rhythm: the intern representation of the rhythm.\n   */\n  formatRhythm(rhythm: string): string{\n    switch (rhythm) {\n      case 'once': {\n        return 'Einmalig';\n      }\n      case 'daily': {\n        return 'Täglich';\n      }\n      case 'weekly': {\n        return 'Wöchentlich';\n      }\n      case 'monthly': {\n        return 'Monatlich';\n      }\n      case 'yearly': {\n        return 'Jährlich';\n      }\n      case 'deleted': {\n        return 'Beendet';\n      }\n    }\n  }\n\n  /**\n   * Function to delete the current viewed transaction after confirmation.\n   */\n  delete(){\n    let confirmation = confirm('Wollen Sie die Transaktion wirklich löschen?');\n    if (confirmation) {\n      this.transactionService.delete(this.transaction.id);\n      this.router.navigate(['home']);\n    }\n  }\n\n  /**\n   * Function to delete the tracker of the current transaction after confirmation if there is one.\n   */\n  deleteTracker(){\n    let confirmation = confirm('Wollen Sie das Wiederkehren dieser Transaktion wirklich beenden?');\n    if (confirmation) {\n      this.transactionService.findTrackerById(this.transaction.id).then(tracker => {\n        this.transaction.rhythm = 'deleted';\n        this.transactionService.deleteTracker(tracker);\n      }).finally(() => {\n        this.transactionService.update(this.transaction);\n      })\n    }\n  }\n\n  /**\n   * Function to send the information of payment to the owner of the transaction for confirmation.\n   */\n  payTransaction(){\n    if(this.authService.currentUser){\n      if(this.transaction.creator.id !== this.authService.currentUser.id) {\n          this.transaction.paid.forEach(p => {\n            if (p.user.id === this.authService.currentUser.id) {\n              p.paid = true;\n              this.transactionService.update(this.transaction);\n              this.router.navigate(['home']);\n            }\n          });\n        }\n        else{\n          this.transaction.paid.forEach(p => {\n          if(p.user.id === this.otherUserId) {\n            p.paid = true;\n            this.transactionService.update(this.transaction);\n            this.router.navigate(['home']);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Function to upload a picture in the attachment tab.\n   */\n  async takePicture() {\n    await Camera.getPhoto({\n      quality: 90,\n      allowEditing: true,\n      resultType: CameraResultType.Base64\n    }).then(data => {\n      this.transaction.photo = \"data:image/jpeg;base64, \" + data.base64String;\n      console.log(this.transaction);\n      this.transactionService.update(this.transaction)\n    });\n  }\n\n  /**\n   * Function to remove attachment from transaction.\n   */\n  removePicture(){\n    this.transaction.photo = null;\n    this.transactionService.update(this.transaction);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{transaction.purpose}}\n    \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    \n      \n    \n      \n    \n      \n      \n    \n      \n    \n      \n      \n    \n      \n    \n      \n    \n  \n  \n    \n      Gruppe\n      {{ transaction.group.name }}\n    \n    \n      Typ\n      {{ formatType(transaction.type)}}\n    \n    \n      Betrag\n      {{ transaction.amount}}€\n    \n    \n      Eigener Anteil\n      {{stake}}€\n      \n      \n      \n    \n    \n      Ersteller\n      {{ transaction.creator.displayName}}\n    \n    \n      Rechnungsdatum\n      \n    \n    \n      Fälligkeitsdatum\n      \n        \n      Rhythmus\n      {{ formatRhythm(transaction.rhythm)}}\n    \n    Bezahlen\n    Bezahlen\n  \n  \n    \n      \n        \n      \n      {{member.displayName}}\n      {{transactionService.getStakeForUser(member, transaction)}}€\n      \n      \n      \n    \n  \n  \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-details.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{transaction.purpose}}                                                                                                                                    Gruppe      {{ transaction.group.name }}              Typ      {{ formatType(transaction.type)}}              Betrag      {{ transaction.amount}}€              Eigener Anteil      {{stake}}€                                Ersteller      {{ transaction.creator.displayName}}              Rechnungsdatum                    Fälligkeitsdatum                    Rhythmus      {{ formatRhythm(transaction.rhythm)}}        Bezahlen    Bezahlen                                  {{member.displayName}}      {{transactionService.getStakeForUser(member, transaction)}}€                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionDetailsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionDetailsPageModule.html":{"url":"modules/TransactionDetailsPageModule.html","title":"module - TransactionDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionDetailsPageModule\n\n\n\ncluster_TransactionDetailsPageModule_imports\n\n\n\ncluster_TransactionDetailsPageModule_declarations\n\n\n\n\nTransactionDetailsPage\n\nTransactionDetailsPage\n\n\n\nTransactionDetailsPageModule\n\nTransactionDetailsPageModule\n\nTransactionDetailsPageModule -->\n\nTransactionDetailsPage->TransactionDetailsPageModule\n\n\n\n\n\nTransactionDetailsPageRoutingModule\n\nTransactionDetailsPageRoutingModule\n\nTransactionDetailsPageModule -->\n\nTransactionDetailsPageRoutingModule->TransactionDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-details/transaction-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionDetailsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionDetailsPageRoutingModule } from './transaction-details-routing.module';\n\nimport { TransactionDetailsPage } from './transaction-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionDetailsPageRoutingModule\n  ],\n  declarations: [TransactionDetailsPage]\n})\nexport class TransactionDetailsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionDetailsPageRoutingModule.html":{"url":"modules/TransactionDetailsPageRoutingModule.html","title":"module - TransactionDetailsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionDetailsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-details/transaction-details-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionDetailsPage } from './transaction-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionDetailsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionParticipantsPage.html":{"url":"components/TransactionParticipantsPage.html","title":"component - TransactionParticipantsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionParticipantsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transaction/transaction-participants/transaction-participants.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-participants\n            \n\n            \n                styleUrls\n                ./transaction-participants.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-participants.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allSelected\n                            \n                            \n                                fairlyDistributedCosts\n                            \n                            \n                                participants\n                            \n                            \n                                participation\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateStakes\n                            \n                            \n                                handleSubmit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSelectAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateStakes\n                        \n                    \n                \n            \n            \n                \ncalculateStakes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:46\n                \n            \n\n\n            \n                \n                    Function to calculate the stakes of all selected participants and fill the corresponding arrays.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \nhandleSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:65\n                \n            \n\n\n            \n                \n                    Function to complete the creation of the transaction by creating a tracker if needed and saving the transaction either locally for further editing via stakes or to the database.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSelectAll\n                        \n                    \n                \n            \n            \n                \ntoggleSelectAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:92\n                \n            \n\n\n            \n                \n                    Function for the Choose all slider.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fairlyDistributedCosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        participation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-participants/transaction-participants.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {User} from \"../../models/user.model\";\nimport {Transaction} from \"../../models/transaction.model\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {TransactionTracker} from \"../../models/transactionTracker.model\";\n\n@Component({\n  selector: 'app-transaction-participants',\n  templateUrl: './transaction-participants.page.html',\n  styleUrls: ['./transaction-participants.page.scss'],\n})\n/**\n * This class represents the logic for the page in which users chose participants for transactions\n */\nexport class TransactionParticipantsPage implements OnInit {\n  allSelected : boolean = false;\n  participants: User[] = [];\n  participation: { user: User, participates: boolean}[] = [];\n  fairlyDistributedCosts : boolean;\n  transaction : Transaction;\n\n  /**\n   * @ignore\n   * @param transactionService:\n   * @param router\n   * @param route\n   * @param sanitizer\n   */\n  constructor(private transactionService : TransactionService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private sanitizer: DomSanitizer) {\n    this.fairlyDistributedCosts = JSON.parse(route.snapshot.paramMap.get('fairlyDistributedPrice'));\n    this.transaction = this.transactionService.getLocally();\n    this.transaction.group.members.forEach(user => {\n      let participates = false;\n      this.participation.push({user, participates});\n    })\n  }\n\n  /**\n   * Function to calculate the stakes of all selected participants and fill the corresponding arrays.\n   */\n  calculateStakes(){\n      this.participation.forEach(participant => {if (participant.participates) this.participants.push(participant.user)});\n      let stake: number = this.transaction.amount / this.participants.length;\n      for (let user of this.participants) {\n        let stakeEntry = {user, stake};\n        let paid = user.id === this.transaction.creator.id;\n        let accepted = user.id === this.transaction.creator.id;\n        let paidEntry = {user, paid};\n        let acceptedEntry = {user, accepted};\n        console.log(stakeEntry);\n        this.transaction.participation.push(stakeEntry);\n        this.transaction.accepted.push(acceptedEntry);\n        this.transaction.paid.push(paidEntry);\n      }\n  }\n\n  /**\n   * Function to complete the creation of the transaction by creating a tracker if needed and saving the transaction either locally for further editing via stakes or to the database.\n   */\n  handleSubmit() {\n    this.calculateStakes();\n    if (this.fairlyDistributedCosts) {\n      this.transactionService.persist(this.transaction).then(docRef => {\n        if (this.transaction.rhythm !== 'once') {\n          this.transactionService.getTransactionById(docRef.id).then((doc: any) => {\n            let transaction: Transaction = doc;\n            let tracker = new TransactionTracker(transaction,\n              transaction.creator,\n              new Date(transaction.dueDate),\n              new Date(new Date(this.transaction.dueDate).getTime() + this.transactionService.getRhythmMiliseconds(this.transaction.rhythm)),\n              new Date(this.transaction.dueDate),\n              this.transactionService.getRhythmMiliseconds(this.transaction.rhythm));\n            this.transactionService.persistTracker(tracker);\n          });\n        }\n        this.router.navigate(['home']);\n      });\n    } else {\n      this.transactionService.saveLocally(this.transaction);\n      this.router.navigate(['transaction-stakes']);\n    }\n  }\n\n  /**\n   * Function for the Choose all slider.\n   */\n  toggleSelectAll(){\n    if (this.allSelected) {\n      this.participation.forEach(participant => participant.participates = false);\n    } else {\n      this.participation.forEach(participant => participant.participates = true);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Teilnehmer auswählen\n  \n\n\n\n  \n    Alle\n    \n  \n  \n    \n      \n        \n      \n      {{participant.user.displayName}}\n      \n    \n  \n  \n    \n      \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-participants.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Teilnehmer auswählen        Alle                                      {{participant.user.displayName}}                                                      '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionParticipantsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionParticipantsPageModule.html":{"url":"modules/TransactionParticipantsPageModule.html","title":"module - TransactionParticipantsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionParticipantsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionParticipantsPageModule\n\n\n\ncluster_TransactionParticipantsPageModule_declarations\n\n\n\ncluster_TransactionParticipantsPageModule_imports\n\n\n\n\nTransactionParticipantsPage\n\nTransactionParticipantsPage\n\n\n\nTransactionParticipantsPageModule\n\nTransactionParticipantsPageModule\n\nTransactionParticipantsPageModule -->\n\nTransactionParticipantsPage->TransactionParticipantsPageModule\n\n\n\n\n\nTransactionParticipantsPageRoutingModule\n\nTransactionParticipantsPageRoutingModule\n\nTransactionParticipantsPageModule -->\n\nTransactionParticipantsPageRoutingModule->TransactionParticipantsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-participants/transaction-participants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionParticipantsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionParticipantsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionParticipantsPageRoutingModule } from './transaction-participants-routing.module';\n\nimport { TransactionParticipantsPage } from './transaction-participants.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionParticipantsPageRoutingModule\n  ],\n  declarations: [TransactionParticipantsPage]\n})\nexport class TransactionParticipantsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionParticipantsPageRoutingModule.html":{"url":"modules/TransactionParticipantsPageRoutingModule.html","title":"module - TransactionParticipantsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionParticipantsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-participants/transaction-participants-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionParticipantsPage } from './transaction-participants.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionParticipantsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionParticipantsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionStakesPage.html":{"url":"components/TransactionStakesPage.html","title":"component - TransactionStakesPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionStakesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transaction/transaction-stakes/transaction-stakes.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-stakes\n            \n\n            \n                styleUrls\n                ./transaction-stakes.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-stakes.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentAmount\n                            \n                            \n                                handleSubmit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentAmount\n                        \n                    \n                \n            \n            \n                \ngetCurrentAmount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:44\n                \n            \n\n\n            \n                \n                    Function to calculate the current distributed amount in the input fields.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \nhandleSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:53\n                \n            \n\n\n            \n                \n                    Function to finish the transaction creation. Checks for input errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/transaction/transaction-stakes/transaction-stakes.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {TransactionService} from \"../../services/transaction.service\";\nimport {Transaction} from \"../../models/transaction.model\";\nimport {TransactionTracker} from \"../../models/transactionTracker.model\";\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-transaction-stakes',\n  templateUrl: './transaction-stakes.page.html',\n  styleUrls: ['./transaction-stakes.page.scss'],\n})\n/**\n * Class representing the logic of the transaction stakes view.\n */\nexport class TransactionStakesPage implements OnInit {\n  transaction: Transaction;\n  errors: Map = new Map();\n\n  /**\n   * @ignore\n   * @param router\n   * @param transactionService\n   */\n  constructor(private router: Router,\n              private transactionService: TransactionService,\n              public sanitizer: DomSanitizer) {\n    this.transaction = transactionService.getLocally();\n    if(this.transaction.participation.length === 0){\n      let stake = this.transaction.amount / this.transaction.group.members.length;\n      let accepted = false;\n      let paid = false;\n      this.transaction.group.members.forEach(user => {\n        this.transaction.participation.push({user, stake});\n        this.transaction.accepted.push({user, accepted});\n        this.transaction.paid.push({user, paid});\n      })\n    }\n  }\n\n  /**\n   * Function to calculate the current distributed amount in the input fields.\n   */\n  getCurrentAmount(){\n    let sum = 0;\n    this.transaction.participation.forEach(participation => sum += participation.stake);\n    return Math.round(sum*100)/100;\n  }\n\n  /**\n   * Function to finish the transaction creation. Checks for input errors.\n   */\n  handleSubmit() {\n    this.errors.clear();\n    if (this.getCurrentAmount() > this.transaction.amount) {\n      this.errors.set('amount', 'Aufgeteilter Betrag ist größer als der Gesamtbetrag');\n    }\n    if (this.getCurrentAmount()  {\n        if (this.transaction.rhythm !== 'once') {\n          this.transactionService.getTransactionById(docRef.id).then((doc: any) => {\n            let transaction: Transaction = doc;\n            let tracker = new TransactionTracker(transaction,\n              transaction.creator,\n              new Date(transaction.dueDate),\n              new Date(new Date(this.transaction.dueDate).getTime() + this.transactionService.getRhythmMiliseconds(this.transaction.rhythm)),\n              new Date(this.transaction.dueDate),\n              this.transactionService.getRhythmMiliseconds(this.transaction.rhythm));\n            this.transactionService.persistTracker(tracker);\n          });\n        }\n        this.router.navigate(['home']);\n      });\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Geld aufteilen\n  \n\n\n\n  \n    \n      \n        \n      \n      {{participant.user.displayName ? participant.user.displayName : participant.user.userName}}\n      \n      €\n    \n  \n  \n    Ausgewählt: {{getCurrentAmount()}}€ von {{transaction.amount}}€\n  \n  {{errors.get('amount')}}\n  \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-stakes.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Geld aufteilen                                  {{participant.user.displayName ? participant.user.displayName : participant.user.userName}}            €            Ausgewählt: {{getCurrentAmount()}}€ von {{transaction.amount}}€    {{errors.get(\\'amount\\')}}                                    '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionStakesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionStakesPageModule.html":{"url":"modules/TransactionStakesPageModule.html","title":"module - TransactionStakesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionStakesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionStakesPageModule\n\n\n\ncluster_TransactionStakesPageModule_declarations\n\n\n\ncluster_TransactionStakesPageModule_imports\n\n\n\n\nTransactionStakesPage\n\nTransactionStakesPage\n\n\n\nTransactionStakesPageModule\n\nTransactionStakesPageModule\n\nTransactionStakesPageModule -->\n\nTransactionStakesPage->TransactionStakesPageModule\n\n\n\n\n\nTransactionStakesPageRoutingModule\n\nTransactionStakesPageRoutingModule\n\nTransactionStakesPageModule -->\n\nTransactionStakesPageRoutingModule->TransactionStakesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-stakes/transaction-stakes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionStakesPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionStakesPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionStakesPageRoutingModule } from './transaction-stakes-routing.module';\n\nimport { TransactionStakesPage } from './transaction-stakes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionStakesPageRoutingModule\n  ],\n  declarations: [TransactionStakesPage]\n})\nexport class TransactionStakesPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionStakesPageRoutingModule.html":{"url":"modules/TransactionStakesPageRoutingModule.html","title":"module - TransactionStakesPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionStakesPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/transaction/transaction-stakes/transaction-stakes-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionStakesPage } from './transaction-stakes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionStakesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionStakesPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionTracker.html":{"url":"classes/TransactionTracker.html","title":"class - TransactionTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/transactionTracker.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a TransactionTracker, a data type used to create reoccurring transactions.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createDate\n                            \n                            \n                                creator\n                            \n                            \n                                id\n                            \n                            \n                                lastDate\n                            \n                            \n                                nextDate\n                            \n                            \n                                originalTransaction\n                            \n                            \n                                rhythm\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(originalTransaction: Transaction, creator: User, lastDate: Date, nextDate: Date, createDate: Date, rhythm: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/transactionTracker.model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        originalTransaction\n                                                  \n                                                        \n                                                                        Transaction\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The transaction that needs follow-up transactions\n\n                                                        \n                                                \n                                                \n                                                        creator\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The creator of the original transaction\n\n                                                        \n                                                \n                                                \n                                                        lastDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The date where the last transaction was created\n\n                                                        \n                                                \n                                                \n                                                        nextDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The date where the next transaction needs to be created\n\n                                                        \n                                                \n                                                \n                                                        createDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        rhythm\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : The rhythm in which the transaction needs to be created\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rhythm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/transactionTracker.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from './user.model';\nimport {Transaction} from './transaction.model';\n\n/**\n * This class represents a TransactionTracker, a data type used to create reoccurring transactions.\n */\nexport class TransactionTracker{\n  id: string;\n  originalTransaction: Transaction;\n  creator: User;\n  lastDate: Date;\n  nextDate: Date;\n  createDate: Date;\n  rhythm: number;\n\n  /**\n   * @param originalTransaction: The transaction that needs follow-up transactions\n   * @param creator: The creator of the original transaction\n   * @param lastDate: The date where the last transaction was created\n   * @param nextDate: The date where the next transaction needs to be created\n   * @param createDate\n   * @param rhythm: The rhythm in which the transaction needs to be created\n   */\n  constructor(originalTransaction: Transaction, creator: User, lastDate: Date, nextDate: Date, createDate: Date, rhythm: number){\n    this.originalTransaction = originalTransaction;\n    this.creator = creator;\n    this.lastDate = lastDate;\n    this.nextDate = nextDate;\n    this.createDate = createDate;\n    this.rhythm = rhythm;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TutorialPage.html":{"url":"components/TutorialPage.html","title":"component - TutorialPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TutorialPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tutorial/tutorial.page.ts\n\n\n\n    \n        Description\n    \n    \n        This class is for the tutorial after you register a new account\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tutorial\n            \n\n            \n                styleUrls\n                ./tutorial.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tutorial.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n/**\n * This class is for the tutorial after you register a new account\n */\n@Component({\n  selector: 'app-tutorial',\n  templateUrl: './tutorial.page.html',\n  styleUrls: ['./tutorial.page.scss'],\n})\nexport class TutorialPage implements OnInit {\n\n  /**\n   * @ignore\n   * @param router\n   */\n  constructor(public router: Router) { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n            \n          \n        \n        \n          \n            Willkommen!\n            Unsere App ermöglicht Ihnen schnell und einfach Ausgaben und Einnahmen mit Ihren Freunden fair aufzuteilen\n            \n              \n                Tutorial Überspringen\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Schritt 1:\n            Wenn Sie auf Ihrem Profil oben links auf das Icon klicken dann gelangen Sie zu Ihrer Freundesliste\n            Dort können Sie neue Freunde mit der Email-Adresse hinzufügen\n            \n              \n                Tutorial Überspringen\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Schritt 2:\n            Mit Ihren Freunden können Sie nun eine neue Gruppe erstellen\n            Klicken Sie dafür auf das Plus Icon unten rechts\n            \n              \n                Tutorial Überspringen\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Schritt 3:\n            Mit Ihrer neuen Gruppe können Sie nun eine Transaktion erstellen\n            Klicken Sie dafür in der Bodenleiste auf das Icon in der Mitte links\n            In dem Formular können Sie nun oben Ihre Gruppe auswählen und den Rest nach Belieben ausfüllen\n            \n              \n                Tutorial Überspringen\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Super!\n            Nun können Sie Ihre erstellte Transaktion auf Ihrer Startseite sehen\n            Wenn ein Freund eine Transaktion mit Ihnen erstellt, dann sehen Sie das auch auf Ihrer Startseite\n            Viel Spaß mit unserer App! :)\n            \n              \n                Fertig\n              \n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./tutorial.page.scss\n                \n                ion-content{\n  ion-slides {\n    height: 100%\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                      Willkommen!            Unsere App ermöglicht Ihnen schnell und einfach Ausgaben und Einnahmen mit Ihren Freunden fair aufzuteilen                                          Tutorial Überspringen                                                                                                                                              Schritt 1:            Wenn Sie auf Ihrem Profil oben links auf das Icon klicken dann gelangen Sie zu Ihrer Freundesliste            Dort können Sie neue Freunde mit der Email-Adresse hinzufügen                                          Tutorial Überspringen                                                                                                                                              Schritt 2:            Mit Ihren Freunden können Sie nun eine neue Gruppe erstellen            Klicken Sie dafür auf das Plus Icon unten rechts                                          Tutorial Überspringen                                                                                                                                              Schritt 3:            Mit Ihrer neuen Gruppe können Sie nun eine Transaktion erstellen            Klicken Sie dafür in der Bodenleiste auf das Icon in der Mitte links            In dem Formular können Sie nun oben Ihre Gruppe auswählen und den Rest nach Belieben ausfüllen                                          Tutorial Überspringen                                                                                                                                              Super!            Nun können Sie Ihre erstellte Transaktion auf Ihrer Startseite sehen            Wenn ein Freund eine Transaktion mit Ihnen erstellt, dann sehen Sie das auch auf Ihrer Startseite            Viel Spaß mit unserer App! :)                                          Fertig                                                        '\n    var COMPONENTS = [{'name': 'AddMembersPage', 'selector': 'app-add-members'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'FriendProfilePage', 'selector': 'app-friend-profile'},{'name': 'FriendsPage', 'selector': 'app-friends'},{'name': 'GroupCreatePage', 'selector': 'app-group-create'},{'name': 'GroupDetailsPage', 'selector': 'app-group-details'},{'name': 'GroupListPage', 'selector': 'app-group-list'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'InvitePage', 'selector': 'app-invite'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MemberViewPage', 'selector': 'app-member-view'},{'name': 'OptionsPage', 'selector': 'app-options'},{'name': 'PasswordPage', 'selector': 'app-password'},{'name': 'PaymentPage', 'selector': 'app-payment'},{'name': 'PaymentReminderPage', 'selector': 'app-payment-reminder'},{'name': 'PrivacyPage', 'selector': 'app-privacy'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'StatisticsPage', 'selector': 'app-statistics'},{'name': 'TransactionCreatePage', 'selector': 'app-transaction-create'},{'name': 'TransactionDetailsPage', 'selector': 'app-transaction-details'},{'name': 'TransactionParticipantsPage', 'selector': 'app-transaction-participants'},{'name': 'TransactionStakesPage', 'selector': 'app-transaction-stakes'},{'name': 'TutorialPage', 'selector': 'app-tutorial'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TutorialPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TutorialPageModule.html":{"url":"modules/TutorialPageModule.html","title":"module - TutorialPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TutorialPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TutorialPageModule\n\n\n\ncluster_TutorialPageModule_declarations\n\n\n\ncluster_TutorialPageModule_imports\n\n\n\n\nTutorialPage\n\nTutorialPage\n\n\n\nTutorialPageModule\n\nTutorialPageModule\n\nTutorialPageModule -->\n\nTutorialPage->TutorialPageModule\n\n\n\n\n\nTutorialPageRoutingModule\n\nTutorialPageRoutingModule\n\nTutorialPageModule -->\n\nTutorialPageRoutingModule->TutorialPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tutorial/tutorial.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TutorialPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TutorialPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TutorialPageRoutingModule } from './tutorial-routing.module';\n\nimport { TutorialPage } from './tutorial.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TutorialPageRoutingModule\n  ],\n  declarations: [TutorialPage]\n})\nexport class TutorialPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TutorialPageRoutingModule.html":{"url":"modules/TutorialPageRoutingModule.html","title":"module - TutorialPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TutorialPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tutorial/tutorial-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TutorialPage } from './tutorial.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TutorialPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TutorialPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                awards\n                            \n                            \n                                    Public\n                                    Optional\n                                awardsPublic\n                            \n                            \n                                    Public\n                                    Optional\n                                awardsPublicfriends\n                            \n                            \n                                    Public\n                                    Optional\n                                cash\n                            \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                descriptionPublic\n                            \n                            \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    Public\n                                    Optional\n                                ec_card\n                            \n                            \n                                    Public\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Optional\n                                friends\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                imagePublic\n                            \n                            \n                                    Public\n                                    Optional\n                                kreditcard\n                            \n                            \n                                    Public\n                                    Optional\n                                paypal\n                            \n                            \n                                    Public\n                                    Optional\n                                profilePic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string, displayName?: string, email?: string, friends?: string[], awards?: string[], profilePic?: string, description?: string, cash?: boolean, ec_card?: boolean, kreditcard?: boolean, paypal?: boolean, imagePublic?: boolean, awardsPublic?: boolean, awardsPublicfriends?: boolean, descriptionPublic?: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        friends\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        awards\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        profilePic\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cash\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        ec_card\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        kreditcard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        paypal\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagePublic\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        awardsPublic\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        awardsPublicfriends\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        descriptionPublic\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        awards\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        awardsPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        awardsPublicfriends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        descriptionPublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        ec_card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        friends\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        imagePublic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        kreditcard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        paypal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        profilePic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  constructor(\n    public id?: string,\n    public displayName?: string,\n    public email?: string,\n    public friends?: string[],\n    public awards?: string[], \n    public profilePic?: string,\n    public description?: string,\n    public cash?: boolean,\n    public ec_card?: boolean,\n    public kreditcard?: boolean,\n    public paypal?: boolean,\n    public imagePublic?: boolean,    \n    public awardsPublic?: boolean,\n    public awardsPublicfriends?: boolean,\n    public descriptionPublic?: boolean,\n    ) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class has functions for the user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                copyAndPrepare\n                            \n                            \n                                delete\n                            \n                            \n                                deleteUserFromFriends\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                persist\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        copyAndPrepare\n                        \n                    \n                \n            \n            \n                \n                    \n                    copyAndPrepare(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:97\n                \n            \n\n\n            \n                \n                    deletes the id from the user object\nreturns the user object without the id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        returns the user object without the id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:72\n                \n            \n\n\n            \n                \n                    deletes existing user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserFromFriends\n                        \n                    \n                \n            \n            \n                \ndeleteUserFromFriends(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:80\n                \n            \n\n\n            \n                \n                    Deletes a given user from all his friends friends-lists (user.friends) and updates the friend in the user-collection.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The user to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:107\n                \n            \n\n\n            \n                \n                    finds the user by email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:52\n                \n            \n\n\n            \n                \n                    finds user by ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(id: string, email: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:29\n                \n            \n\n\n            \n                \n                    add the user to the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nid from the user\n\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nemail from the user\n\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nusername from the user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:64\n                \n            \n\n\n            \n                \n                    updates existing user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\n\n/**\n * This class has functions for the user\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  userCollection: AngularFirestoreCollection;\n\n  /**\n   * @ignore\n   * @param afs\n   */\n  constructor(private afs: AngularFirestore) {\n    this.userCollection = afs.collection('User');\n  }\n\n  /**\n   * add the user to the database\n   * @param id - id from the user\n   * @param email - email from the user\n   * @param username - username from the user\n   */\n  persist(id: string, email:string, username:string) {\n    const user = new User();\n    user.displayName = username;\n    user.profilePic = \"https://bit.ly/2S904CS\";\n    user.email = email;\n    user.description = \"Erstelle eine Beschreibung...\";\n    user.awards = [\"jEy1DdqvHv9minKnPOCc\"];\n    user.descriptionPublic = false;\n    user.cash = false;\n    user.ec_card = false;\n    user.paypal = false;\n    user.kreditcard = false;\n    user.imagePublic = false;\n    user.awardsPublic = false;\n    user.awardsPublicfriends = false;\n    user.friends = [];\n    this.userCollection.doc(id).set(this.copyAndPrepare(user));\n  }\n\n  /**\n   * finds user by ID\n   * @param id - id from user\n   */\n  findById(id: string): Promise {\n    return this.userCollection.doc(id).get().toPromise().then(res => {\n      const user: User = res.data();\n      user.id = id;\n      return user;\n    });\n  }\n\n  /**\n   * updates existing user\n   * @param user\n   */\n  update(user: User) {\n    this.userCollection.doc(user.id).update(this.copyAndPrepare(user));\n  }\n\n  /**\n   * deletes existing user\n   * @param id - id from user\n   */\n  delete(id: string) {\n    this.userCollection.doc(id).delete();\n  }\n\n  /**\n   * Deletes a given user from all his friends friends-lists (user.friends) and updates the friend in the user-collection.\n   * @param user The user to be deleted\n   */\n  deleteUserFromFriends(user: User){\n    user.friends.forEach(friend => {\n      this.findById(friend).then(result => {\n        const index = result.friends.indexOf(user.id, 0);\n        if(index > -1) {\n          result.friends.splice(index, 1);\n        }\n        this.update(result);\n      });\n    });\n  }\n\n  /**\n   * deletes the id from the user object\n   * @param user\n   * returns the user object without the id\n   */\n  private copyAndPrepare(user: User): User {\n    const copy = { ...user };\n    delete copy.id;\n    return copy;\n  }\n\n  /**\n   * finds the user by email\n   * @param email - email from user\n   */\n  findByEmail(email: string) {\n    return this.userCollection.get()\n      .toPromise()\n      .then(snapshot =>\n        snapshot.docs.map(doc => {\n          const user = doc.data();\n          user.id = doc.id;\n          if (user.email == email)\n          return user;\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/change-password/change-password.page.ts\n            \n            component\n            ChangePasswordPage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/auth/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/group/add-members/add-members.page.ts\n            \n            component\n            AddMembersPage\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/group/group-create/group-create.page.ts\n            \n            component\n            GroupCreatePage\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/group/group-details/group-details.page.ts\n            \n            component\n            GroupDetailsPage\n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/group/group-list/group-list.page.ts\n            \n            component\n            GroupListPage\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/group/invite/invite.page.ts\n            \n            component\n            InvitePage\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/group/member-view/member-view.page.ts\n            \n            component\n            MemberViewPage\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                50 %\n                (15/30)\n            \n        \n        \n            \n                \n                src/app/models/award.model.ts\n            \n            class\n            Award\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/group.model.ts\n            \n            class\n            Group\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/simpleTransaction.model.ts\n            \n            class\n            SimpleTransaction\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/models/statistics.model.ts\n            \n            class\n            Statistic\n            \n                4 %\n                (1/23)\n            \n        \n        \n            \n                \n                src/app/models/transaction.model.ts\n            \n            class\n            Transaction\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/models/transactionTracker.model.ts\n            \n            class\n            TransactionTracker\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/payment-reminder/payment-reminder.page.ts\n            \n            component\n            PaymentReminderPage\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/profile/friend-profile/friend-profile.page.ts\n            \n            component\n            FriendProfilePage\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/profile/friends/friends.page.ts\n            \n            component\n            FriendsPage\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/profile/options/options.page.ts\n            \n            component\n            OptionsPage\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/profile/password/password.page.ts\n            \n            component\n            PasswordPage\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/profile/payment/payment.page.ts\n            \n            component\n            PaymentPage\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/profile/privacy/privacy.page.ts\n            \n            component\n            PrivacyPage\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/profile/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/profile/statistics/statistics.page.ts\n            \n            component\n            StatisticsPage\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/award.service.ts\n            \n            injectable\n            ArwardService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/badge.service.ts\n            \n            injectable\n            BadgeService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/friends.service.ts\n            \n            injectable\n            FriendsService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/services/group.service.ts\n            \n            injectable\n            GroupService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/services/statistics.service.ts\n            \n            injectable\n            StatisticsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                87 %\n                (27/31)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/transaction.model.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/transaction/transaction-create/transaction-create.page.ts\n            \n            component\n            TransactionCreatePage\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                src/app/transaction/transaction-details/transaction-details.page.ts\n            \n            component\n            TransactionDetailsPage\n            \n                36 %\n                (7/19)\n            \n        \n        \n            \n                \n                src/app/transaction/transaction-participants/transaction-participants.page.ts\n            \n            component\n            TransactionParticipantsPage\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/transaction/transaction-stakes/transaction-stakes.page.ts\n            \n            component\n            TransactionStakesPage\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/tutorial/tutorial.page.ts\n            \n            component\n            TutorialPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~12.0.1\n        \n            @angular/core : ~12.0.1\n        \n            @angular/fire : ^6.1.5\n        \n            @angular/forms : ~12.0.1\n        \n            @angular/platform-browser : ~12.0.1\n        \n            @angular/platform-browser-dynamic : ~12.0.1\n        \n            @angular/router : ~12.0.1\n        \n            @capacitor/android : ^3.0.2\n        \n            @capacitor/camera : ^1.0.2\n        \n            @capacitor/core : 3.0.0\n        \n            @capacitor/filesystem : ^1.0.2\n        \n            @capacitor/share : ^1.0.3\n        \n            @capacitor/storage : ^1.0.2\n        \n            @ionic-native/core : ^4.20.0\n        \n            @ionic-native/file-chooser : ^4.20.0\n        \n            @ionic-native/image-picker : ^5.33.1\n        \n            @ionic/angular : ^5.5.2\n        \n            chart.js : ^3.4.1\n        \n            cordova-plugin-camera : ^5.0.2\n        \n            cordova-plugin-filechooser : ^1.2.0\n        \n            cordova-plugin-telerik-imagepicker : ^2.3.6\n        \n            filesystem : ^1.0.1\n        \n            firebase : ^7.0 || ^8.0\n        \n            rxjs : ^6.6.7\n        \n            rxjs-compat : ^6.6.7\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEntwicklung Mobiler Applikationen - Group Expenses\nGroup Expenses ist eine Progressive Web App für Android, IOS, und den Web Browser.Mit der App wird das Aufteilen von Rechnungen/Einnahmen in Gruppen vereinfacht.Man fügt Freunde hinzu mit denen man neue Gruppen erstellen kann, wie z.B. für ein Festival oder eine WG.In der Gruppe kann man neue Transaktionen erstellen, die allen Teilnehmern der Transaktion angezeigt werden.Dadurch entsteht eine strukturierte Überischt über wem man noch Geld schuldet und wer einem noch Geld schuldet.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddMembersPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AddMembersPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChangePasswordPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChangePasswordPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupCreatePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupCreatePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupDetailsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupListPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupListPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InvitePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InvitePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MemberViewPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MemberViewPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OptionsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswordPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswordPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentReminderPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentReminderPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrivacyPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrivacyPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatisticsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatisticsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionCreatePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionCreatePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionDetailsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionParticipantsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionParticipantsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionStakesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionStakesPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TutorialPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TutorialPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AddMembersPageModule\n\n\n\ncluster_AddMembersPageModule_declarations\n\n\n\ncluster_AddMembersPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ChangePasswordPageModule\n\n\n\ncluster_ChangePasswordPageModule_declarations\n\n\n\ncluster_ChangePasswordPageModule_imports\n\n\n\ncluster_FriendProfilePageModule\n\n\n\ncluster_FriendProfilePageModule_declarations\n\n\n\ncluster_FriendProfilePageModule_imports\n\n\n\ncluster_FriendsPageModule\n\n\n\ncluster_FriendsPageModule_declarations\n\n\n\ncluster_FriendsPageModule_imports\n\n\n\ncluster_GroupCreatePageModule\n\n\n\ncluster_GroupCreatePageModule_declarations\n\n\n\ncluster_GroupCreatePageModule_imports\n\n\n\ncluster_GroupDetailsPageModule\n\n\n\ncluster_GroupDetailsPageModule_declarations\n\n\n\ncluster_GroupDetailsPageModule_imports\n\n\n\ncluster_GroupListPageModule\n\n\n\ncluster_GroupListPageModule_declarations\n\n\n\ncluster_GroupListPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_InvitePageModule\n\n\n\ncluster_InvitePageModule_declarations\n\n\n\ncluster_InvitePageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_MemberViewPageModule\n\n\n\ncluster_MemberViewPageModule_declarations\n\n\n\ncluster_MemberViewPageModule_imports\n\n\n\ncluster_OptionsPageModule\n\n\n\ncluster_OptionsPageModule_declarations\n\n\n\ncluster_OptionsPageModule_imports\n\n\n\ncluster_PasswordPageModule\n\n\n\ncluster_PasswordPageModule_declarations\n\n\n\ncluster_PasswordPageModule_imports\n\n\n\ncluster_PaymentPageModule\n\n\n\ncluster_PaymentPageModule_declarations\n\n\n\ncluster_PaymentPageModule_imports\n\n\n\ncluster_PaymentReminderPageModule\n\n\n\ncluster_PaymentReminderPageModule_declarations\n\n\n\ncluster_PaymentReminderPageModule_imports\n\n\n\ncluster_PrivacyPageModule\n\n\n\ncluster_PrivacyPageModule_declarations\n\n\n\ncluster_PrivacyPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_StatisticsPageModule\n\n\n\ncluster_StatisticsPageModule_declarations\n\n\n\ncluster_StatisticsPageModule_imports\n\n\n\ncluster_TransactionCreatePageModule\n\n\n\ncluster_TransactionCreatePageModule_declarations\n\n\n\ncluster_TransactionCreatePageModule_imports\n\n\n\ncluster_TransactionCreatePageModule_exports\n\n\n\ncluster_TransactionDetailsPageModule\n\n\n\ncluster_TransactionDetailsPageModule_declarations\n\n\n\ncluster_TransactionDetailsPageModule_imports\n\n\n\ncluster_TransactionParticipantsPageModule\n\n\n\ncluster_TransactionParticipantsPageModule_declarations\n\n\n\ncluster_TransactionParticipantsPageModule_imports\n\n\n\ncluster_TransactionStakesPageModule\n\n\n\ncluster_TransactionStakesPageModule_declarations\n\n\n\ncluster_TransactionStakesPageModule_imports\n\n\n\ncluster_TutorialPageModule\n\n\n\ncluster_TutorialPageModule_declarations\n\n\n\ncluster_TutorialPageModule_imports\n\n\n\n\nAddMembersPage\n\nAddMembersPage\n\n\n\nAddMembersPageModule\n\nAddMembersPageModule\n\nAddMembersPageModule -->\n\nAddMembersPage->AddMembersPageModule\n\n\n\n\n\nAddMembersPageRoutingModule\n\nAddMembersPageRoutingModule\n\nAddMembersPageModule -->\n\nAddMembersPageRoutingModule->AddMembersPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nChangePasswordPageModule\n\nChangePasswordPageModule\n\nChangePasswordPageModule -->\n\nChangePasswordPage->ChangePasswordPageModule\n\n\n\n\n\nChangePasswordPageRoutingModule\n\nChangePasswordPageRoutingModule\n\nChangePasswordPageModule -->\n\nChangePasswordPageRoutingModule->ChangePasswordPageModule\n\n\n\n\n\nFriendProfilePage\n\nFriendProfilePage\n\n\n\nFriendProfilePageModule\n\nFriendProfilePageModule\n\nFriendProfilePageModule -->\n\nFriendProfilePage->FriendProfilePageModule\n\n\n\n\n\nFriendProfilePageRoutingModule\n\nFriendProfilePageRoutingModule\n\nFriendProfilePageModule -->\n\nFriendProfilePageRoutingModule->FriendProfilePageModule\n\n\n\n\n\nFriendsPage\n\nFriendsPage\n\n\n\nFriendsPageModule\n\nFriendsPageModule\n\nFriendsPageModule -->\n\nFriendsPage->FriendsPageModule\n\n\n\n\n\nFriendsPageRoutingModule\n\nFriendsPageRoutingModule\n\nFriendsPageModule -->\n\nFriendsPageRoutingModule->FriendsPageModule\n\n\n\n\n\nGroupCreatePage\n\nGroupCreatePage\n\n\n\nGroupCreatePageModule\n\nGroupCreatePageModule\n\nGroupCreatePageModule -->\n\nGroupCreatePage->GroupCreatePageModule\n\n\n\n\n\nGroupCreatePageRoutingModule\n\nGroupCreatePageRoutingModule\n\nGroupCreatePageModule -->\n\nGroupCreatePageRoutingModule->GroupCreatePageModule\n\n\n\n\n\nGroupDetailsPage\n\nGroupDetailsPage\n\n\n\nGroupDetailsPageModule\n\nGroupDetailsPageModule\n\nGroupDetailsPageModule -->\n\nGroupDetailsPage->GroupDetailsPageModule\n\n\n\n\n\nGroupDetailsPageRoutingModule\n\nGroupDetailsPageRoutingModule\n\nGroupDetailsPageModule -->\n\nGroupDetailsPageRoutingModule->GroupDetailsPageModule\n\n\n\n\n\nGroupListPage\n\nGroupListPage\n\n\n\nGroupListPageModule\n\nGroupListPageModule\n\nGroupListPageModule -->\n\nGroupListPage->GroupListPageModule\n\n\n\n\n\nGroupListPageRoutingModule\n\nGroupListPageRoutingModule\n\nGroupListPageModule -->\n\nGroupListPageRoutingModule->GroupListPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nTransactionCreatePageModule\n\nTransactionCreatePageModule\n\nHomePageModule -->\n\nTransactionCreatePageModule->HomePageModule\n\n\n\n\n\nTransactionCreatePage \n\nTransactionCreatePage \n\nTransactionCreatePage  -->\n\nTransactionCreatePageModule->TransactionCreatePage \n\n\n\n\n\nInvitePage\n\nInvitePage\n\n\n\nInvitePageModule\n\nInvitePageModule\n\nInvitePageModule -->\n\nInvitePage->InvitePageModule\n\n\n\n\n\nInvitePageRoutingModule\n\nInvitePageRoutingModule\n\nInvitePageModule -->\n\nInvitePageRoutingModule->InvitePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nMemberViewPage\n\nMemberViewPage\n\n\n\nMemberViewPageModule\n\nMemberViewPageModule\n\nMemberViewPageModule -->\n\nMemberViewPage->MemberViewPageModule\n\n\n\n\n\nMemberViewPageRoutingModule\n\nMemberViewPageRoutingModule\n\nMemberViewPageModule -->\n\nMemberViewPageRoutingModule->MemberViewPageModule\n\n\n\n\n\nOptionsPage\n\nOptionsPage\n\n\n\nOptionsPageModule\n\nOptionsPageModule\n\nOptionsPageModule -->\n\nOptionsPage->OptionsPageModule\n\n\n\n\n\nOptionsPageRoutingModule\n\nOptionsPageRoutingModule\n\nOptionsPageModule -->\n\nOptionsPageRoutingModule->OptionsPageModule\n\n\n\n\n\nPasswordPage\n\nPasswordPage\n\n\n\nPasswordPageModule\n\nPasswordPageModule\n\nPasswordPageModule -->\n\nPasswordPage->PasswordPageModule\n\n\n\n\n\nPasswordPageRoutingModule\n\nPasswordPageRoutingModule\n\nPasswordPageModule -->\n\nPasswordPageRoutingModule->PasswordPageModule\n\n\n\n\n\nPaymentPage\n\nPaymentPage\n\n\n\nPaymentPageModule\n\nPaymentPageModule\n\nPaymentPageModule -->\n\nPaymentPage->PaymentPageModule\n\n\n\n\n\nPaymentPageRoutingModule\n\nPaymentPageRoutingModule\n\nPaymentPageModule -->\n\nPaymentPageRoutingModule->PaymentPageModule\n\n\n\n\n\nPaymentReminderPage\n\nPaymentReminderPage\n\n\n\nPaymentReminderPageModule\n\nPaymentReminderPageModule\n\nPaymentReminderPageModule -->\n\nPaymentReminderPage->PaymentReminderPageModule\n\n\n\n\n\nPaymentReminderPageRoutingModule\n\nPaymentReminderPageRoutingModule\n\nPaymentReminderPageModule -->\n\nPaymentReminderPageRoutingModule->PaymentReminderPageModule\n\n\n\n\n\nPrivacyPage\n\nPrivacyPage\n\n\n\nPrivacyPageModule\n\nPrivacyPageModule\n\nPrivacyPageModule -->\n\nPrivacyPage->PrivacyPageModule\n\n\n\n\n\nPrivacyPageRoutingModule\n\nPrivacyPageRoutingModule\n\nPrivacyPageModule -->\n\nPrivacyPageRoutingModule->PrivacyPageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nStatisticsPage\n\nStatisticsPage\n\n\n\nStatisticsPageModule\n\nStatisticsPageModule\n\nStatisticsPageModule -->\n\nStatisticsPage->StatisticsPageModule\n\n\n\n\n\nStatisticsPageRoutingModule\n\nStatisticsPageRoutingModule\n\nStatisticsPageModule -->\n\nStatisticsPageRoutingModule->StatisticsPageModule\n\n\n\n\n\nTransactionCreatePage\n\nTransactionCreatePage\n\nTransactionCreatePageModule -->\n\nTransactionCreatePage->TransactionCreatePageModule\n\n\n\n\n\nTransactionCreatePageRoutingModule\n\nTransactionCreatePageRoutingModule\n\nTransactionCreatePageModule -->\n\nTransactionCreatePageRoutingModule->TransactionCreatePageModule\n\n\n\n\n\nTransactionDetailsPage\n\nTransactionDetailsPage\n\n\n\nTransactionDetailsPageModule\n\nTransactionDetailsPageModule\n\nTransactionDetailsPageModule -->\n\nTransactionDetailsPage->TransactionDetailsPageModule\n\n\n\n\n\nTransactionDetailsPageRoutingModule\n\nTransactionDetailsPageRoutingModule\n\nTransactionDetailsPageModule -->\n\nTransactionDetailsPageRoutingModule->TransactionDetailsPageModule\n\n\n\n\n\nTransactionParticipantsPage\n\nTransactionParticipantsPage\n\n\n\nTransactionParticipantsPageModule\n\nTransactionParticipantsPageModule\n\nTransactionParticipantsPageModule -->\n\nTransactionParticipantsPage->TransactionParticipantsPageModule\n\n\n\n\n\nTransactionParticipantsPageRoutingModule\n\nTransactionParticipantsPageRoutingModule\n\nTransactionParticipantsPageModule -->\n\nTransactionParticipantsPageRoutingModule->TransactionParticipantsPageModule\n\n\n\n\n\nTransactionStakesPage\n\nTransactionStakesPage\n\n\n\nTransactionStakesPageModule\n\nTransactionStakesPageModule\n\nTransactionStakesPageModule -->\n\nTransactionStakesPage->TransactionStakesPageModule\n\n\n\n\n\nTransactionStakesPageRoutingModule\n\nTransactionStakesPageRoutingModule\n\nTransactionStakesPageModule -->\n\nTransactionStakesPageRoutingModule->TransactionStakesPageModule\n\n\n\n\n\nTutorialPage\n\nTutorialPage\n\n\n\nTutorialPageModule\n\nTutorialPageModule\n\nTutorialPageModule -->\n\nTutorialPage->TutorialPageModule\n\n\n\n\n\nTutorialPageRoutingModule\n\nTutorialPageRoutingModule\n\nTutorialPageModule -->\n\nTutorialPageRoutingModule->TutorialPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        50 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        74 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAUoe-hkywBms6a4CWqi820GIXL0-gRmNY\",\n    authDomain: \"group-expenses-41c23.firebaseapp.com\",\n    projectId: \"group-expenses-41c23\",\n    storageBucket: \"group-expenses-41c23.appspot.com\",\n    messagingSenderId: \"429680376038\",\n    appId: \"1:429680376038:web:1ac23e75a712fea6756327\",\n    measurementId: \"G-YC5CCL30K1\"\n  }\n\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
